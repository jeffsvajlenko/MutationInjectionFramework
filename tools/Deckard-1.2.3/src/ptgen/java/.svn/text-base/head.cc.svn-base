
#include <map>
#include <string>

using namespace std;

extern map<string,int> name2id;
extern map<int,string> id2name;

void id_init()
{

name2id["expression_statement"]= 0;
id2name[0]= "expression_statement";
name2id["variable_declarators"]= 1;
id2name[1]= "variable_declarators";
name2id["post_increment_expression"]= 2;
id2name[2]= "post_increment_expression";
name2id["explicit_constructor_invocation"]= 3;
id2name[3]= "explicit_constructor_invocation";
name2id["throw_statement"]= 4;
id2name[4]= "throw_statement";
name2id["block_begin"]= 5;
id2name[5]= "block_begin";
name2id["import_declaration"]= 6;
id2name[6]= "import_declaration";
name2id["post_decrement_expression"]= 7;
id2name[7]= "post_decrement_expression";
name2id["switch_block_statement_groups"]= 8;
id2name[8]= "switch_block_statement_groups";
name2id["assert_statement"]= 9;
id2name[9]= "assert_statement";
name2id["inclusive_or_expression"]= 10;
id2name[10]= "inclusive_or_expression";
name2id["for_statement_nsi"]= 11;
id2name[11]= "for_statement_nsi";
name2id["while_statement"]= 12;
id2name[12]= "while_statement";
name2id["statement_expression"]= 13;
id2name[13]= "statement_expression";
name2id["assign_any"]= 14;
id2name[14]= "assign_any";
name2id["label_decl"]= 15;
id2name[15]= "label_decl";
name2id["formal_parameter_list"]= 16;
id2name[16]= "formal_parameter_list";
name2id["for_statement"]= 17;
id2name[17]= "for_statement";
name2id["local_variable_declaration_statement"]= 18;
id2name[18]= "local_variable_declaration_statement";
name2id["block_end"]= 19;
id2name[19]= "block_end";
name2id["compilation_unit"]= 20;
id2name[20]= "compilation_unit";
name2id["abstract_method_declaration"]= 21;
id2name[21]= "abstract_method_declaration";
name2id["trap_overflow_corner_case"]= 22;
id2name[22]= "trap_overflow_corner_case";
name2id["class_instance_creation_expression"]= 23;
id2name[23]= "class_instance_creation_expression";
name2id["static_initializer"]= 24;
id2name[24]= "static_initializer";
name2id["catches"]= 25;
id2name[25]= "catches";
name2id["name"]= 26;
id2name[26]= "name";
name2id["something_dot_new"]= 27;
id2name[27]= "something_dot_new";
name2id["constructor_header"]= 28;
id2name[28]= "constructor_header";
name2id["variable_declarator_id"]= 29;
id2name[29]= "variable_declarator_id";
name2id["pre_decrement_expression"]= 30;
id2name[30]= "pre_decrement_expression";
name2id["identifier"]= 31;
id2name[31]= "identifier";
name2id["constructor_block_end"]= 32;
id2name[32]= "constructor_block_end";
name2id["constructor_declarator"]= 33;
id2name[33]= "constructor_declarator";
name2id["switch_expression"]= 34;
id2name[34]= "switch_expression";
name2id["interface_declaration"]= 35;
id2name[35]= "interface_declaration";
name2id["unary_expression"]= 36;
id2name[36]= "unary_expression";
name2id["interface_type"]= 37;
id2name[37]= "interface_type";
name2id["left_hand_side"]= 38;
id2name[38]= "left_hand_side";
name2id["break_statement"]= 39;
id2name[39]= "break_statement";
name2id["unary_expression_not_plus_minus"]= 40;
id2name[40]= "unary_expression_not_plus_minus";
name2id["static"]= 41;
id2name[41]= "static";
name2id["labeled_statement"]= 42;
id2name[42]= "labeled_statement";
name2id["dim_exprs"]= 43;
id2name[43]= "dim_exprs";
name2id["class_or_interface_type"]= 44;
id2name[44]= "class_or_interface_type";
name2id["switch_statement"]= 45;
id2name[45]= "switch_statement";
name2id["assignment_expression"]= 46;
id2name[46]= "assignment_expression";
name2id["type_declarations"]= 47;
id2name[47]= "type_declarations";
name2id["interface_member_declaration"]= 48;
id2name[48]= "interface_member_declaration";
name2id["anonymous_class_creation"]= 49;
id2name[49]= "anonymous_class_creation";
name2id["array_access"]= 50;
id2name[50]= "array_access";
name2id["package_declaration"]= 51;
id2name[51]= "package_declaration";
name2id["reference_type"]= 52;
id2name[52]= "reference_type";
name2id["switch_labels"]= 53;
id2name[53]= "switch_labels";
name2id["variable_declarator"]= 54;
id2name[54]= "variable_declarator";
name2id["continue_statement"]= 55;
id2name[55]= "continue_statement";
name2id["argument_list"]= 56;
id2name[56]= "argument_list";
name2id["assignment"]= 57;
id2name[57]= "assignment";
name2id["interface_type_list"]= 58;
id2name[58]= "interface_type_list";
name2id["conditional_or_expression"]= 59;
id2name[59]= "conditional_or_expression";
name2id["multiplicative_expression"]= 60;
id2name[60]= "multiplicative_expression";
name2id["field_access"]= 61;
id2name[61]= "field_access";
name2id["class_type"]= 62;
id2name[62]= "class_type";
name2id["interfaces"]= 63;
id2name[63]= "interfaces";
name2id["catch_clause"]= 64;
id2name[64]= "catch_clause";
name2id["statement_without_trailing_substatement"]= 65;
id2name[65]= "statement_without_trailing_substatement";
name2id["for_update"]= 66;
id2name[66]= "for_update";
name2id["statement_expression_list"]= 67;
id2name[67]= "statement_expression_list";
name2id["array_type"]= 68;
id2name[68]= "array_type";
name2id["single_type_import_declaration"]= 69;
id2name[69]= "single_type_import_declaration";
name2id["super"]= 70;
id2name[70]= "super";
name2id["primary_no_new_array"]= 71;
id2name[71]= "primary_no_new_array";
name2id["method_body"]= 72;
id2name[72]= "method_body";
name2id["class_member_declaration"]= 73;
id2name[73]= "class_member_declaration";
name2id["if_then_else_statement_nsi"]= 74;
id2name[74]= "if_then_else_statement_nsi";
name2id["interface_body"]= 75;
id2name[75]= "interface_body";
name2id["conditional_and_expression"]= 76;
id2name[76]= "conditional_and_expression";
name2id["pre_increment_expression"]= 77;
id2name[77]= "pre_increment_expression";
name2id["assignment_operator"]= 78;
id2name[78]= "assignment_operator";
name2id["do_statement_begin"]= 79;
id2name[79]= "do_statement_begin";
name2id["expression"]= 80;
id2name[80]= "expression";
name2id["throws"]= 81;
id2name[81]= "throws";
name2id["block"]= 82;
id2name[82]= "block";
name2id["if_then_else_statement"]= 83;
id2name[83]= "if_then_else_statement";
name2id["exclusive_or_expression"]= 84;
id2name[84]= "exclusive_or_expression";
name2id["float"]= 85;
id2name[85]= "float";
name2id["integral"]= 86;
id2name[86]= "integral";
name2id["primary"]= 87;
id2name[87]= "primary";
name2id["for_init"]= 88;
id2name[88]= "for_init";
name2id["synchronized_statement"]= 89;
id2name[89]= "synchronized_statement";
name2id["if_then_statement"]= 90;
id2name[90]= "if_then_statement";
name2id["array_creation_expression"]= 91;
id2name[91]= "array_creation_expression";
name2id["extends_interfaces"]= 92;
id2name[92]= "extends_interfaces";
name2id["for_begin"]= 93;
id2name[93]= "for_begin";
name2id["simple_name"]= 94;
id2name[94]= "simple_name";
name2id["method_declaration"]= 95;
id2name[95]= "method_declaration";
name2id["finally"]= 96;
id2name[96]= "finally";
name2id["block_statement"]= 97;
id2name[97]= "block_statement";
name2id["shift_expression"]= 98;
id2name[98]= "shift_expression";
name2id["primitive_type"]= 99;
id2name[99]= "primitive_type";
name2id["literal"]= 100;
id2name[100]= "literal";
name2id["class_body_declaration"]= 101;
id2name[101]= "class_body_declaration";
name2id["variable_initializer"]= 102;
id2name[102]= "variable_initializer";
name2id["statement"]= 103;
id2name[103]= "statement";
name2id["method_invocation"]= 104;
id2name[104]= "method_invocation";
name2id["type"]= 105;
id2name[105]= "type";
name2id["final"]= 106;
id2name[106]= "final";
name2id["import_declarations"]= 107;
id2name[107]= "import_declarations";
name2id["relational_expression"]= 108;
id2name[108]= "relational_expression";
name2id["qualified_name"]= 109;
id2name[109]= "qualified_name";
name2id["formal_parameter"]= 110;
id2name[110]= "formal_parameter";
name2id["class_body"]= 111;
id2name[111]= "class_body";
name2id["catch_clause_parameter"]= 112;
id2name[112]= "catch_clause_parameter";
name2id["switch_label"]= 113;
id2name[113]= "switch_label";
name2id["equality_expression"]= 114;
id2name[114]= "equality_expression";
name2id["type_import_on_demand_declaration"]= 115;
id2name[115]= "type_import_on_demand_declaration";
name2id["modifiers"]= 116;
id2name[116]= "modifiers";
name2id["type_literals"]= 117;
id2name[117]= "type_literals";
name2id["method_header"]= 118;
id2name[118]= "method_header";
name2id["for_header"]= 119;
id2name[119]= "for_header";
name2id["empty_statement"]= 120;
id2name[120]= "empty_statement";
name2id["labeled_statement_nsi"]= 121;
id2name[121]= "labeled_statement_nsi";
name2id["field_declaration"]= 122;
id2name[122]= "field_declaration";
name2id["constant_expression"]= 123;
id2name[123]= "constant_expression";
name2id["local_variable_declaration"]= 124;
id2name[124]= "local_variable_declaration";
name2id["modifier"]= 125;
id2name[125]= "modifier";
name2id["class_body_declarations"]= 126;
id2name[126]= "class_body_declarations";
name2id["synchronized"]= 127;
id2name[127]= "synchronized";
name2id["type_declaration"]= 128;
id2name[128]= "type_declaration";
name2id["interface_member_declarations"]= 129;
id2name[129]= "interface_member_declarations";
name2id["try_statement"]= 130;
id2name[130]= "try_statement";
name2id["and_expression"]= 131;
id2name[131]= "and_expression";
name2id["goal"]= 132;
id2name[132]= "goal";
name2id["dim_expr"]= 133;
id2name[133]= "dim_expr";
name2id["while_statement_nsi"]= 134;
id2name[134]= "while_statement_nsi";
name2id["cast_expression"]= 135;
id2name[135]= "cast_expression";
name2id["postfix_expression"]= 136;
id2name[136]= "postfix_expression";
name2id["return_statement"]= 137;
id2name[137]= "return_statement";
name2id["do_statement"]= 138;
id2name[138]= "do_statement";
name2id["constant_declaration"]= 139;
id2name[139]= "constant_declaration";
name2id["block_statements"]= 140;
id2name[140]= "block_statements";
name2id["variable_initializers"]= 141;
id2name[141]= "variable_initializers";
name2id["class_type_list"]= 142;
id2name[142]= "class_type_list";
name2id["constructor_body"]= 143;
id2name[143]= "constructor_body";
name2id["dims"]= 144;
id2name[144]= "dims";
name2id["additive_expression"]= 145;
id2name[145]= "additive_expression";
name2id["switch_block_statement_group"]= 146;
id2name[146]= "switch_block_statement_group";
name2id["array_initializer"]= 147;
id2name[147]= "array_initializer";
name2id["this_or_super"]= 148;
id2name[148]= "this_or_super";
name2id["statement_nsi"]= 149;
id2name[149]= "statement_nsi";
name2id["class_declaration"]= 150;
id2name[150]= "class_declaration";
name2id["while_expression"]= 151;
id2name[151]= "while_expression";
name2id["switch_block"]= 152;
id2name[152]= "switch_block";
name2id["conditional_expression"]= 153;
id2name[153]= "conditional_expression";
name2id["method_declarator"]= 154;
id2name[154]= "method_declarator";
name2id["constructor_declaration"]= 155;
id2name[155]= "constructor_declaration";
name2id["STRING_LIT_TK"]= 156;
id2name[156]= "STRING_LIT_TK";
name2id["OR_ASSIGN_TK"]= 157;
id2name[157]= "OR_ASSIGN_TK";
name2id["REL_CL_TK"]= 158;
id2name[158]= "REL_CL_TK";
name2id["THROW_TK"]= 159;
id2name[159]= "THROW_TK";
name2id["ASSIGN_TK"]= 160;
id2name[160]= "ASSIGN_TK";
name2id["CCB_TK"]= 161;
id2name[161]= "CCB_TK";
name2id["PUBLIC_TK"]= 162;
id2name[162]= "PUBLIC_TK";
name2id["FOR_TK"]= 163;
id2name[163]= "FOR_TK";
name2id["INSTANCEOF_TK"]= 164;
id2name[164]= "INSTANCEOF_TK";
name2id["BOOL_LIT_TK"]= 165;
id2name[165]= "BOOL_LIT_TK";
name2id["PRIVATE_TK"]= 166;
id2name[166]= "PRIVATE_TK";
name2id["IF_TK"]= 167;
id2name[167]= "IF_TK";
name2id["CASE_TK"]= 168;
id2name[168]= "CASE_TK";
name2id["REM_TK"]= 169;
id2name[169]= "REM_TK";
name2id["CHAR_TK"]= 170;
id2name[170]= "CHAR_TK";
name2id["PAD_TK"]= 171;
id2name[171]= "PAD_TK";
name2id["CATCH_TK"]= 172;
id2name[172]= "CATCH_TK";
name2id["ASSERT_TK"]= 173;
id2name[173]= "ASSERT_TK";
name2id["OCB_TK"]= 174;
id2name[174]= "OCB_TK";
name2id["BOOLEAN_TK"]= 175;
id2name[175]= "BOOLEAN_TK";
name2id["THROWS_TK"]= 176;
id2name[176]= "THROWS_TK";
name2id["SUPER_TK"]= 177;
id2name[177]= "SUPER_TK";
name2id["ABSTRACT_TK"]= 178;
id2name[178]= "ABSTRACT_TK";
name2id["LT_TK"]= 179;
id2name[179]= "LT_TK";
name2id["LTE_TK"]= 180;
id2name[180]= "LTE_TK";
name2id["STRICT_TK"]= 181;
id2name[181]= "STRICT_TK";
name2id["NEQ_TK"]= 182;
id2name[182]= "NEQ_TK";
name2id["SRS_ASSIGN_TK"]= 183;
id2name[183]= "SRS_ASSIGN_TK";
name2id["CP_TK"]= 184;
id2name[184]= "CP_TK";
name2id["DOT_TK"]= 185;
id2name[185]= "DOT_TK";
name2id["NULL_TK"]= 186;
id2name[186]= "NULL_TK";
name2id["REM_ASSIGN_TK"]= 187;
id2name[187]= "REM_ASSIGN_TK";
name2id["BREAK_TK"]= 188;
id2name[188]= "BREAK_TK";
name2id["DEFAULT_TK"]= 189;
id2name[189]= "DEFAULT_TK";
name2id["TRANSIENT_TK"]= 190;
id2name[190]= "TRANSIENT_TK";
name2id["NOT_TK"]= 191;
id2name[191]= "NOT_TK";
name2id["FP_LIT_TK"]= 192;
id2name[192]= "FP_LIT_TK";
name2id["CONTINUE_TK"]= 193;
id2name[193]= "CONTINUE_TK";
name2id["AND_ASSIGN_TK"]= 194;
id2name[194]= "AND_ASSIGN_TK";
name2id["DOUBLE_TK"]= 195;
id2name[195]= "DOUBLE_TK";
name2id["MULT_TK"]= 196;
id2name[196]= "MULT_TK";
name2id["PLUS_ASSIGN_TK"]= 197;
id2name[197]= "PLUS_ASSIGN_TK";
name2id["SRS_TK"]= 198;
id2name[198]= "SRS_TK";
name2id["ELSE_TK"]= 199;
id2name[199]= "ELSE_TK";
name2id["INTEGRAL_TK"]= 200;
id2name[200]= "INTEGRAL_TK";
name2id["ZRS_TK"]= 201;
id2name[201]= "ZRS_TK";
name2id["IMPORT_TK"]= 202;
id2name[202]= "IMPORT_TK";
name2id["INTERFACE_TK"]= 203;
id2name[203]= "INTERFACE_TK";
name2id["PACKAGE_TK"]= 204;
id2name[204]= "PACKAGE_TK";
name2id["OSB_TK"]= 205;
id2name[205]= "OSB_TK";
name2id["VOID_TK"]= 206;
id2name[206]= "VOID_TK";
name2id["FINAL_TK"]= 207;
id2name[207]= "FINAL_TK";
name2id["PROTECTED_TK"]= 208;
id2name[208]= "PROTECTED_TK";
name2id["FP_TK"]= 209;
id2name[209]= "FP_TK";
name2id["FLOAT_TK"]= 210;
id2name[210]= "FLOAT_TK";
name2id["NEG_TK"]= 211;
id2name[211]= "NEG_TK";
name2id["DO_TK"]= 212;
id2name[212]= "DO_TK";
name2id["STATIC_TK"]= 213;
id2name[213]= "STATIC_TK";
name2id["MODIFIER_TK"]= 214;
id2name[214]= "MODIFIER_TK";
name2id["GTE_TK"]= 215;
id2name[215]= "GTE_TK";
name2id["SWITCH_TK"]= 216;
id2name[216]= "SWITCH_TK";
name2id["BOOL_OR_TK"]= 217;
id2name[217]= "BOOL_OR_TK";
name2id["OR_TK"]= 218;
id2name[218]= "OR_TK";
name2id["BYTE_TK"]= 219;
id2name[219]= "BYTE_TK";
name2id["LS_TK"]= 220;
id2name[220]= "LS_TK";
name2id["INT_TK"]= 221;
id2name[221]= "INT_TK";
name2id["INCR_TK"]= 222;
id2name[222]= "INCR_TK";
name2id["VOLATILE_TK"]= 223;
id2name[223]= "VOLATILE_TK";
name2id["THIS_TK"]= 224;
id2name[224]= "THIS_TK";
name2id["C_TK"]= 225;
id2name[225]= "C_TK";
name2id["ZRS_ASSIGN_TK"]= 226;
id2name[226]= "ZRS_ASSIGN_TK";
name2id["REL_QM_TK"]= 227;
id2name[227]= "REL_QM_TK";
name2id["SHORT_TK"]= 228;
id2name[228]= "SHORT_TK";
name2id["XOR_TK"]= 229;
id2name[229]= "XOR_TK";
name2id["NATIVE_TK"]= 230;
id2name[230]= "NATIVE_TK";
name2id["RETURN_TK"]= 231;
id2name[231]= "RETURN_TK";
name2id["LONG_TK"]= 232;
id2name[232]= "LONG_TK";
name2id["MINUS_TK"]= 233;
id2name[233]= "MINUS_TK";
name2id["MULT_ASSIGN_TK"]= 234;
id2name[234]= "MULT_ASSIGN_TK";
name2id["DECR_TK"]= 235;
id2name[235]= "DECR_TK";
name2id["INT_LIT_TK"]= 236;
id2name[236]= "INT_LIT_TK";
name2id["TRY_TK"]= 237;
id2name[237]= "TRY_TK";
name2id["SYNCHRONIZED_TK"]= 238;
id2name[238]= "SYNCHRONIZED_TK";
name2id["OP_TK"]= 239;
id2name[239]= "OP_TK";
name2id["GT_TK"]= 240;
id2name[240]= "GT_TK";
name2id["MINUS_ASSIGN_TK"]= 241;
id2name[241]= "MINUS_ASSIGN_TK";
name2id["SC_TK"]= 242;
id2name[242]= "SC_TK";
name2id["FINALLY_TK"]= 243;
id2name[243]= "FINALLY_TK";
name2id["EQ_TK"]= 244;
id2name[244]= "EQ_TK";
name2id["IMPLEMENTS_TK"]= 245;
id2name[245]= "IMPLEMENTS_TK";
name2id["AND_TK"]= 246;
id2name[246]= "AND_TK";
name2id["DIV_TK"]= 247;
id2name[247]= "DIV_TK";
name2id["ID_TK"]= 248;
id2name[248]= "ID_TK";
name2id["CONST_TK"]= 249;
id2name[249]= "CONST_TK";
name2id["CHAR_LIT_TK"]= 250;
id2name[250]= "CHAR_LIT_TK";
name2id["WHILE_TK"]= 251;
id2name[251]= "WHILE_TK";
name2id["CLASS_TK"]= 252;
id2name[252]= "CLASS_TK";
name2id["CSB_TK"]= 253;
id2name[253]= "CSB_TK";
name2id["LS_ASSIGN_TK"]= 254;
id2name[254]= "LS_ASSIGN_TK";
name2id["PLUS_TK"]= 255;
id2name[255]= "PLUS_TK";
name2id["XOR_ASSIGN_TK"]= 256;
id2name[256]= "XOR_ASSIGN_TK";
name2id["DIV_ASSIGN_TK"]= 257;
id2name[257]= "DIV_ASSIGN_TK";
name2id["EXTENDS_TK"]= 258;
id2name[258]= "EXTENDS_TK";
name2id["BOOL_AND_TK"]= 259;
id2name[259]= "BOOL_AND_TK";
name2id["NEW_TK"]= 260;
id2name[260]= "NEW_TK";
}

