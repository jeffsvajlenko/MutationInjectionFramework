
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.Debugger
{
public partial class AddTracePointDialog
{
    private global::Gtk.VBox vbox2;
    private global::Gtk.Table table1;
    private global::Gtk.Entry entryCondition;
    private global::Gtk.Entry entryTrace;
    private global::Gtk.Label label1;
    private global::Gtk.Label label2;
    private global::Gtk.Label label3;
    private global::Gtk.Label label4;
    private global::Gtk.Button buttonCancel;
    private global::Gtk.Button buttonOk;

    protected virtual void Build ()
    {
        global::Stetic.Gui.Initialize (this);
        // Widget MonoDevelop.Debugger.AddTracePointDialog
        this.Name = "MonoDevelop.Debugger.AddTracePointDialog";
        this.Title = global::Mono.Unix.Catalog.GetString ("Add Tracepoint");
        this.WindowPosition = ((global::Gtk.WindowPosition)(4));
        // Internal child MonoDevelop.Debugger.AddTracePointDialog.VBox
        global::Gtk.VBox w1 = this.VBox;
        w1.Name = "dialog1_VBox";
        w1.BorderWidth = ((uint)(2));
        // Container child dialog1_VBox.Gtk.Box+BoxChild
        this.vbox2 = new global::Gtk.VBox ();
        this.vbox2.Name = "vbox2";
        this.vbox2.Spacing = 6;
        this.vbox2.BorderWidth = ((uint)(6));
        // Container child vbox2.Gtk.Box+BoxChild
        this.table1 = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
        this.table1.Name = "table1";
        this.table1.RowSpacing = ((uint)(6));
        this.table1.ColumnSpacing = ((uint)(6));
        // Container child table1.Gtk.Table+TableChild
        this.entryCondition = new global::Gtk.Entry ();
        this.entryCondition.CanFocus = true;
        this.entryCondition.Name = "entryCondition";
        this.entryCondition.IsEditable = true;
        this.entryCondition.ActivatesDefault = true;
        this.entryCondition.InvisibleChar = '●';
        this.table1.Add (this.entryCondition);
        global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryCondition]));
        w2.TopAttach = ((uint)(2));
        w2.BottomAttach = ((uint)(3));
        w2.LeftAttach = ((uint)(1));
        w2.RightAttach = ((uint)(2));
        w2.XOptions = ((global::Gtk.AttachOptions)(4));
        w2.YOptions = ((global::Gtk.AttachOptions)(4));
        // Container child table1.Gtk.Table+TableChild
        this.entryTrace = new global::Gtk.Entry ();
        this.entryTrace.CanFocus = true;
        this.entryTrace.Name = "entryTrace";
        this.entryTrace.IsEditable = true;
        this.entryTrace.ActivatesDefault = true;
        this.entryTrace.InvisibleChar = '●';
        this.table1.Add (this.entryTrace);
        global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryTrace]));
        w3.LeftAttach = ((uint)(1));
        w3.RightAttach = ((uint)(2));
        w3.XOptions = ((global::Gtk.AttachOptions)(4));
        w3.YOptions = ((global::Gtk.AttachOptions)(4));
        // Container child table1.Gtk.Table+TableChild
        this.label1 = new global::Gtk.Label ();
        this.label1.Name = "label1";
        this.label1.Xalign = 0F;
        this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Trace Text:");
        this.table1.Add (this.label1);
        global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
        w4.XOptions = ((global::Gtk.AttachOptions)(4));
        w4.YOptions = ((global::Gtk.AttachOptions)(4));
        // Container child table1.Gtk.Table+TableChild
        this.label2 = new global::Gtk.Label ();
        this.label2.Name = "label2";
        this.label2.Xalign = 0F;
        this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Condition:");
        this.table1.Add (this.label2);
        global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
        w5.TopAttach = ((uint)(2));
        w5.BottomAttach = ((uint)(3));
        w5.XOptions = ((global::Gtk.AttachOptions)(4));
        w5.YOptions = ((global::Gtk.AttachOptions)(4));
        // Container child table1.Gtk.Table+TableChild
        this.label3 = new global::Gtk.Label ();
        this.label3.WidthRequest = 450;
        this.label3.Name = "label3";
        this.label3.Xalign = 0F;
        this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("<small>Expressions to be evaluated by the debugger can be included in the text by surrounding them with curly braces, for example: \"Value is {n}\".</small>");
        this.label3.UseMarkup = true;
        this.label3.Wrap = true;
        this.table1.Add (this.label3);
        global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.label3]));
        w6.TopAttach = ((uint)(1));
        w6.BottomAttach = ((uint)(2));
        w6.LeftAttach = ((uint)(1));
        w6.RightAttach = ((uint)(2));
        w6.XOptions = ((global::Gtk.AttachOptions)(4));
        w6.YOptions = ((global::Gtk.AttachOptions)(4));
        // Container child table1.Gtk.Table+TableChild
        this.label4 = new global::Gtk.Label ();
        this.label4.WidthRequest = 450;
        this.label4.Name = "label4";
        this.label4.Xalign = 0F;
        this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("<small>When set, the text will be printed only when this condition evaluates to true.</small>");
        this.label4.UseMarkup = true;
        this.label4.Wrap = true;
        this.table1.Add (this.label4);
        global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.label4]));
        w7.TopAttach = ((uint)(3));
        w7.BottomAttach = ((uint)(4));
        w7.LeftAttach = ((uint)(1));
        w7.RightAttach = ((uint)(2));
        w7.XOptions = ((global::Gtk.AttachOptions)(4));
        w7.YOptions = ((global::Gtk.AttachOptions)(4));
        this.vbox2.Add (this.table1);
        global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.table1]));
        w8.Position = 0;
        w8.Expand = false;
        w8.Fill = false;
        w1.Add (this.vbox2);
        global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(w1 [this.vbox2]));
        w9.Position = 0;
        w9.Expand = false;
        w9.Fill = false;
        // Internal child MonoDevelop.Debugger.AddTracePointDialog.ActionArea
        global::Gtk.HButtonBox w10 = this.ActionArea;
        w10.Name = "dialog1_ActionArea";
        w10.Spacing = 10;
        w10.BorderWidth = ((uint)(5));
        w10.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
        // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
        this.buttonCancel = new global::Gtk.Button ();
        this.buttonCancel.CanFocus = true;
        this.buttonCancel.Name = "buttonCancel";
        this.buttonCancel.UseStock = true;
        this.buttonCancel.UseUnderline = true;
        this.buttonCancel.Label = "gtk-cancel";
        this.AddActionWidget (this.buttonCancel, -6);
        global::Gtk.ButtonBox.ButtonBoxChild w11 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w10 [this.buttonCancel]));
        w11.Expand = false;
        w11.Fill = false;
        // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
        this.buttonOk = new global::Gtk.Button ();
        this.buttonOk.CanDefault = true;
        this.buttonOk.CanFocus = true;
        this.buttonOk.Name = "buttonOk";
        this.buttonOk.UseStock = true;
        this.buttonOk.UseUnderline = true;
        this.buttonOk.Label = "gtk-ok";
        this.AddActionWidget (this.buttonOk, -5);
        global::Gtk.ButtonBox.ButtonBoxChild w12 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w10 [this.buttonOk]));
        w12.Position = 1;
        w12.Expand = false;
        w12.Fill = false;
        if ((this.Child != null))
        {
            this.Child.ShowAll ();
        }
        this.DefaultWidth = 540;
        this.DefaultHeight = 208;
        this.buttonOk.HasDefault = true;
        this.Hide ();
    }
}
}
