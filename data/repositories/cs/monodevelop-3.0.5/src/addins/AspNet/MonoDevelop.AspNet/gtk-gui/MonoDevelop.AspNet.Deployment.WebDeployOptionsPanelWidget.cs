
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.AspNet.Deployment
{
public partial class WebDeployOptionsPanelWidget
{
    private global::Gtk.HBox hbox1;
    private global::Gtk.ScrolledWindow scrolledwindow1;
    private global::Gtk.TreeView targetView;
    private global::Gtk.VBox vbox2;
    private global::Gtk.Button addButton;
    private global::Gtk.Button editButton;
    private global::Gtk.Button removeButton;

    protected virtual void Build ()
    {
        global::Stetic.Gui.Initialize (this);
        // Widget MonoDevelop.AspNet.Deployment.WebDeployOptionsPanelWidget
        global::Stetic.BinContainer.Attach (this);
        this.Name = "MonoDevelop.AspNet.Deployment.WebDeployOptionsPanelWidget";
        // Container child MonoDevelop.AspNet.Deployment.WebDeployOptionsPanelWidget.Gtk.Container+ContainerChild
        this.hbox1 = new global::Gtk.HBox ();
        this.hbox1.Name = "hbox1";
        this.hbox1.Spacing = 6;
        // Container child hbox1.Gtk.Box+BoxChild
        this.scrolledwindow1 = new global::Gtk.ScrolledWindow ();
        this.scrolledwindow1.CanFocus = true;
        this.scrolledwindow1.Name = "scrolledwindow1";
        this.scrolledwindow1.ShadowType = ((global::Gtk.ShadowType)(1));
        // Container child scrolledwindow1.Gtk.Container+ContainerChild
        this.targetView = new global::Gtk.TreeView ();
        this.targetView.CanFocus = true;
        this.targetView.Name = "targetView";
        this.scrolledwindow1.Add (this.targetView);
        this.hbox1.Add (this.scrolledwindow1);
        global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.scrolledwindow1]));
        w2.Position = 0;
        // Container child hbox1.Gtk.Box+BoxChild
        this.vbox2 = new global::Gtk.VBox ();
        this.vbox2.Name = "vbox2";
        this.vbox2.Spacing = 6;
        // Container child vbox2.Gtk.Box+BoxChild
        this.addButton = new global::Gtk.Button ();
        this.addButton.CanFocus = true;
        this.addButton.Name = "addButton";
        this.addButton.UseStock = true;
        this.addButton.UseUnderline = true;
        this.addButton.Label = "gtk-add";
        this.vbox2.Add (this.addButton);
        global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.addButton]));
        w3.Position = 0;
        w3.Expand = false;
        w3.Fill = false;
        // Container child vbox2.Gtk.Box+BoxChild
        this.editButton = new global::Gtk.Button ();
        this.editButton.CanFocus = true;
        this.editButton.Name = "editButton";
        this.editButton.UseStock = true;
        this.editButton.UseUnderline = true;
        this.editButton.Label = "gtk-edit";
        this.vbox2.Add (this.editButton);
        global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.editButton]));
        w4.Position = 1;
        w4.Expand = false;
        w4.Fill = false;
        // Container child vbox2.Gtk.Box+BoxChild
        this.removeButton = new global::Gtk.Button ();
        this.removeButton.CanFocus = true;
        this.removeButton.Name = "removeButton";
        this.removeButton.UseStock = true;
        this.removeButton.UseUnderline = true;
        this.removeButton.Label = "gtk-remove";
        this.vbox2.Add (this.removeButton);
        global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.removeButton]));
        w5.Position = 2;
        w5.Expand = false;
        w5.Fill = false;
        this.hbox1.Add (this.vbox2);
        global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.vbox2]));
        w6.Position = 1;
        w6.Expand = false;
        w6.Fill = false;
        this.Add (this.hbox1);
        if ((this.Child != null))
        {
            this.Child.ShowAll ();
        }
        this.Show ();
        this.addButton.Activated += new global::System.EventHandler (this.AddActivated);
        this.addButton.Clicked += new global::System.EventHandler (this.AddActivated);
        this.editButton.Activated += new global::System.EventHandler (this.EditActivated);
        this.editButton.Clicked += new global::System.EventHandler (this.EditActivated);
        this.removeButton.Activated += new global::System.EventHandler (this.RemoveActivated);
        this.removeButton.Clicked += new global::System.EventHandler (this.RemoveActivated);
    }
}
}
