// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace mperfmon
{


public partial class Preferences
{

    private Gtk.Table table1;

    private Gtk.Label label1;

    private Gtk.SpinButton update_interval;

    private Gtk.Button buttonCancel;

    private Gtk.Button buttonOk;

    protected virtual void Build()
    {
        Stetic.Gui.Initialize(this);
        // Widget mperfmon.Preferences
        this.Name = "mperfmon.Preferences";
        this.Title = Mono.Unix.Catalog.GetString("Mono Perf Monitor preferences");
        this.TypeHint = ((Gdk.WindowTypeHint)(1));
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        this.HasSeparator = false;
        // Internal child mperfmon.Preferences.VBox
        Gtk.VBox w1 = this.VBox;
        w1.Name = "dialog1_VBox";
        w1.BorderWidth = ((uint)(2));
        // Container child dialog1_VBox.Gtk.Box+BoxChild
        this.table1 = new Gtk.Table(((uint)(3)), ((uint)(2)), false);
        this.table1.Name = "table1";
        this.table1.RowSpacing = ((uint)(6));
        this.table1.ColumnSpacing = ((uint)(6));
        this.table1.BorderWidth = ((uint)(6));
        // Container child table1.Gtk.Table+TableChild
        this.label1 = new Gtk.Label();
        this.label1.Name = "label1";
        this.label1.LabelProp = Mono.Unix.Catalog.GetString("Update interval (seconds):");
        this.table1.Add(this.label1);
        Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.label1]));
        w2.XOptions = ((Gtk.AttachOptions)(4));
        w2.YOptions = ((Gtk.AttachOptions)(4));
        // Container child table1.Gtk.Table+TableChild
        this.update_interval = new Gtk.SpinButton(0.2, 60, 0.2);
        this.update_interval.CanFocus = true;
        this.update_interval.Name = "update_interval";
        this.update_interval.Adjustment.PageIncrement = 1;
        this.update_interval.Adjustment.PageSize = 1;
        this.update_interval.ClimbRate = 1;
        this.update_interval.Digits = ((uint)(1));
        this.update_interval.Numeric = true;
        this.update_interval.SnapToTicks = true;
        this.update_interval.Value = 1;
        this.table1.Add(this.update_interval);
        Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.update_interval]));
        w3.LeftAttach = ((uint)(1));
        w3.RightAttach = ((uint)(2));
        w3.XOptions = ((Gtk.AttachOptions)(4));
        w3.YOptions = ((Gtk.AttachOptions)(4));
        w1.Add(this.table1);
        Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w1[this.table1]));
        w4.Position = 0;
        // Internal child mperfmon.Preferences.ActionArea
        Gtk.HButtonBox w5 = this.ActionArea;
        w5.Name = "dialog1_ActionArea";
        w5.Spacing = 6;
        w5.BorderWidth = ((uint)(5));
        w5.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
        // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
        this.buttonCancel = new Gtk.Button();
        this.buttonCancel.CanDefault = true;
        this.buttonCancel.CanFocus = true;
        this.buttonCancel.Name = "buttonCancel";
        this.buttonCancel.UseStock = true;
        this.buttonCancel.UseUnderline = true;
        this.buttonCancel.Label = "gtk-cancel";
        this.AddActionWidget(this.buttonCancel, -6);
        Gtk.ButtonBox.ButtonBoxChild w6 = ((Gtk.ButtonBox.ButtonBoxChild)(w5[this.buttonCancel]));
        w6.Expand = false;
        w6.Fill = false;
        // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
        this.buttonOk = new Gtk.Button();
        this.buttonOk.CanDefault = true;
        this.buttonOk.CanFocus = true;
        this.buttonOk.Name = "buttonOk";
        this.buttonOk.UseStock = true;
        this.buttonOk.UseUnderline = true;
        this.buttonOk.Label = "gtk-ok";
        this.AddActionWidget(this.buttonOk, -5);
        Gtk.ButtonBox.ButtonBoxChild w7 = ((Gtk.ButtonBox.ButtonBoxChild)(w5[this.buttonOk]));
        w7.Position = 1;
        w7.Expand = false;
        w7.Fill = false;
        if ((this.Child != null))
        {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 290;
        this.DefaultHeight = 248;
        this.Show();
    }
}
}
