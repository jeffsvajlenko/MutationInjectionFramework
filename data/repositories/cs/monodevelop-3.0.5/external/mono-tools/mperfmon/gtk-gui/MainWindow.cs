// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow
{

    private Gtk.UIManager UIManager;

    private Gtk.Action FileAction;

    private Gtk.Action AddCounterAction;

    private Gtk.Action QuitAction;

    private Gtk.Action HelpAction;

    private Gtk.Action HelpAction1;

    private Gtk.Action quitAction;

    private Gtk.Action addAction;

    private Gtk.Action preferencesAction;

    private Gtk.Action stopAction;

    private Gtk.Action ClearAction;

    private Gtk.Action mediaPauseAction;

    private Gtk.Action mediaPlayAction;

    private Gtk.Action SaveAsAction;

    private Gtk.Action AddCounterSetAction;

    private Gtk.Table table1;

    private Gtk.MenuBar menubar1;

    private Gtk.ScrolledWindow scrolledwindow1;

    private Gtk.VBox graph_vbox;

    private Gtk.Toolbar toolbar1;

    protected virtual void Build()
    {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.UIManager = new Gtk.UIManager();
        Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
        this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("File"), null, null);
        this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("File");
        w1.Add(this.FileAction, null);
        this.AddCounterAction = new Gtk.Action("AddCounterAction", Mono.Unix.Catalog.GetString("_Add counter"), null, "gtk-add");
        this.AddCounterAction.ShortLabel = Mono.Unix.Catalog.GetString("_Add performance counter");
        w1.Add(this.AddCounterAction, null);
        this.QuitAction = new Gtk.Action("QuitAction", Mono.Unix.Catalog.GetString("_Quit"), null, "gtk-quit");
        this.QuitAction.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
        w1.Add(this.QuitAction, null);
        this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("Help"), null, null);
        this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Help");
        w1.Add(this.HelpAction, null);
        this.HelpAction1 = new Gtk.Action("HelpAction1", Mono.Unix.Catalog.GetString("_Help"), null, "gtk-help");
        this.HelpAction1.ShortLabel = Mono.Unix.Catalog.GetString("_Help");
        w1.Add(this.HelpAction1, null);
        this.quitAction = new Gtk.Action("quitAction", null, null, "gtk-quit");
        w1.Add(this.quitAction, null);
        this.addAction = new Gtk.Action("addAction", null, Mono.Unix.Catalog.GetString("Add a new counter"), "gtk-add");
        w1.Add(this.addAction, null);
        this.preferencesAction = new Gtk.Action("preferencesAction", null, Mono.Unix.Catalog.GetString("Preferences"), "gtk-preferences");
        w1.Add(this.preferencesAction, null);
        this.stopAction = new Gtk.Action("stopAction", null, null, "gtk-stop");
        w1.Add(this.stopAction, null);
        this.ClearAction = new Gtk.Action("ClearAction", Mono.Unix.Catalog.GetString("_Clear"), Mono.Unix.Catalog.GetString("Remove all the counters"), "gtk-clear");
        this.ClearAction.ShortLabel = Mono.Unix.Catalog.GetString("_Clear");
        w1.Add(this.ClearAction, null);
        this.mediaPauseAction = new Gtk.Action("mediaPauseAction", null, Mono.Unix.Catalog.GetString("Stop ccollecting samples"), "gtk-media-pause");
        w1.Add(this.mediaPauseAction, null);
        this.mediaPlayAction = new Gtk.Action("mediaPlayAction", null, Mono.Unix.Catalog.GetString("Start collecting samples"), "gtk-media-play");
        w1.Add(this.mediaPlayAction, null);
        this.SaveAsAction = new Gtk.Action("SaveAsAction", Mono.Unix.Catalog.GetString("Save _As"), null, "gtk-save-as");
        this.SaveAsAction.ShortLabel = Mono.Unix.Catalog.GetString("Save _As");
        w1.Add(this.SaveAsAction, null);
        this.AddCounterSetAction = new Gtk.Action("AddCounterSetAction", Mono.Unix.Catalog.GetString("Add counter set"), null, "gtk-add");
        this.AddCounterSetAction.ShortLabel = Mono.Unix.Catalog.GetString("Add counter set");
        w1.Add(this.AddCounterSetAction, null);
        this.UIManager.InsertActionGroup(w1, 0);
        this.AddAccelGroup(this.UIManager.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("Mono Perf Monitor");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.table1 = new Gtk.Table(((uint)(3)), ((uint)(3)), false);
        this.table1.Name = "table1";
        this.table1.RowSpacing = ((uint)(6));
        this.table1.ColumnSpacing = ((uint)(6));
        // Container child table1.Gtk.Table+TableChild
        this.UIManager.AddUiFromString("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='AddCounterAction' action='AddCounterAction'/><menuitem name='AddCounterSetAction' action='AddCounterSetAction'/><menuitem name='SaveAsAction' action='SaveAsAction'/><menuitem name='QuitAction' action='QuitAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='HelpAction1' action='HelpAction1'/></menu></menubar></ui>");
        this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
        this.menubar1.Name = "menubar1";
        this.table1.Add(this.menubar1);
        Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.menubar1]));
        w2.RightAttach = ((uint)(3));
        w2.YOptions = ((Gtk.AttachOptions)(4));
        // Container child table1.Gtk.Table+TableChild
        this.scrolledwindow1 = new Gtk.ScrolledWindow();
        this.scrolledwindow1.CanFocus = true;
        this.scrolledwindow1.Name = "scrolledwindow1";
        this.scrolledwindow1.ShadowType = ((Gtk.ShadowType)(1));
        // Container child scrolledwindow1.Gtk.Container+ContainerChild
        Gtk.Viewport w3 = new Gtk.Viewport();
        w3.ShadowType = ((Gtk.ShadowType)(0));
        // Container child GtkViewport.Gtk.Container+ContainerChild
        this.graph_vbox = new Gtk.VBox();
        this.graph_vbox.Name = "graph_vbox";
        this.graph_vbox.Spacing = 6;
        w3.Add(this.graph_vbox);
        this.scrolledwindow1.Add(w3);
        this.table1.Add(this.scrolledwindow1);
        Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this.scrolledwindow1]));
        w6.TopAttach = ((uint)(2));
        w6.BottomAttach = ((uint)(3));
        w6.RightAttach = ((uint)(3));
        w6.XOptions = ((Gtk.AttachOptions)(4));
        // Container child table1.Gtk.Table+TableChild
        this.UIManager.AddUiFromString("<ui><toolbar name='toolbar1'><toolitem name='quitAction' action='quitAction'/><toolitem name='AddCounterAction' action='AddCounterAction'/><toolitem name='ClearAction' action='ClearAction'/><toolitem name='mediaPauseAction' action='mediaPauseAction'/><toolitem name='mediaPlayAction' action='mediaPlayAction'/><toolitem name='preferencesAction' action='preferencesAction'/></toolbar></ui>");
        this.toolbar1 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar1")));
        this.toolbar1.Name = "toolbar1";
        this.toolbar1.ShowArrow = false;
        this.toolbar1.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
        this.table1.Add(this.toolbar1);
        Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.toolbar1]));
        w7.TopAttach = ((uint)(1));
        w7.BottomAttach = ((uint)(2));
        w7.RightAttach = ((uint)(3));
        w7.YOptions = ((Gtk.AttachOptions)(4));
        this.Add(this.table1);
        if ((this.Child != null))
        {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 533;
        this.DefaultHeight = 436;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
        this.AddCounterAction.Activated += new System.EventHandler(this.AddCounter);
        this.QuitAction.Activated += new System.EventHandler(this.OnQuit);
        this.quitAction.Activated += new System.EventHandler(this.OnQuit);
        this.preferencesAction.Activated += new System.EventHandler(this.OnPreferences);
        this.ClearAction.Activated += new System.EventHandler(this.OnClear);
        this.mediaPauseAction.Activated += new System.EventHandler(this.OnPause);
        this.mediaPlayAction.Activated += new System.EventHandler(this.OnPlay);
        this.SaveAsAction.Activated += new System.EventHandler(this.OnSaveAs);
        this.AddCounterSetAction.Activated += new System.EventHandler(this.OnAddSet);
    }
}
