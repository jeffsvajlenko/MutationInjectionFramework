// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !

package sun.awt.X11;

import sun.misc.*;

import java.util.logging.*;
public class XErrorEvent extends XWrapperBase
{
    private Unsafe unsafe = XlibWrapper.unsafe;
    private final boolean should_free_memory;
    public static int getSize()
    {
        return 20;
    }
    public int getDataSize()
    {
        return getSize();
    }

    long pData;

    public long getPData()
    {
        return pData;
    }


    public XErrorEvent(long addr)
    {
        log.finest("Creating");
        pData=addr;
        should_free_memory = false;
    }


    public XErrorEvent()
    {
        log.finest("Creating");
        pData = unsafe.allocateMemory(getSize());
        should_free_memory = true;
    }


    public void dispose()
    {
        log.finest("Disposing");
        if (should_free_memory)
        {
            log.finest("freeing memory");
            unsafe.freeMemory(pData);
        }
    }
    public int get_type()
    {
        log.finest("");
        return (Native.getInt(pData+0));
    }
    public void set_type(int v)
    {
        log.finest("");
        Native.putInt(pData+0, v);
    }
    public long get_display()
    {
        log.finest("");
        return (Native.getLong(pData+4));
    }
    public void set_display(long v)
    {
        log.finest("");
        Native.putLong(pData+4, v);
    }
    public long get_resourceid()
    {
        log.finest("");
        return (Native.getLong(pData+8));
    }
    public void set_resourceid(long v)
    {
        log.finest("");
        Native.putLong(pData+8, v);
    }
    public long get_serial()
    {
        log.finest("");
        return (Native.getLong(pData+12));
    }
    public void set_serial(long v)
    {
        log.finest("");
        Native.putLong(pData+12, v);
    }
    public byte get_error_code()
    {
        log.finest("");
        return (Native.getByte(pData+16));
    }
    public void set_error_code(byte v)
    {
        log.finest("");
        Native.putByte(pData+16, v);
    }
    public byte get_request_code()
    {
        log.finest("");
        return (Native.getByte(pData+17));
    }
    public void set_request_code(byte v)
    {
        log.finest("");
        Native.putByte(pData+17, v);
    }
    public byte get_minor_code()
    {
        log.finest("");
        return (Native.getByte(pData+18));
    }
    public void set_minor_code(byte v)
    {
        log.finest("");
        Native.putByte(pData+18, v);
    }


    String getName()
    {
        return "XErrorEvent";
    }


    String getFieldsAsString()
    {
        String ret="";

        ret += ""+"type = " + XlibWrapper.eventToString[get_type()] +", ";
        ret += ""+"display = " + get_display() +", ";
        ret += ""+"resourceid = " + get_resourceid() +", ";
        ret += ""+"serial = " + get_serial() +", ";
        ret += ""+"error_code = " + get_error_code() +", ";
        ret += ""+"request_code = " + get_request_code() +", ";
        ret += ""+"minor_code = " + get_minor_code() +", ";
        return ret;
    }


}



