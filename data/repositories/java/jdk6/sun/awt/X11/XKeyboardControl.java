// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !

package sun.awt.X11;

import sun.misc.*;

import java.util.logging.*;
public class XKeyboardControl extends XWrapperBase
{
    private Unsafe unsafe = XlibWrapper.unsafe;
    private final boolean should_free_memory;
    public static int getSize()
    {
        return 32;
    }
    public int getDataSize()
    {
        return getSize();
    }

    long pData;

    public long getPData()
    {
        return pData;
    }


    public XKeyboardControl(long addr)
    {
        log.finest("Creating");
        pData=addr;
        should_free_memory = false;
    }


    public XKeyboardControl()
    {
        log.finest("Creating");
        pData = unsafe.allocateMemory(getSize());
        should_free_memory = true;
    }


    public void dispose()
    {
        log.finest("Disposing");
        if (should_free_memory)
        {
            log.finest("freeing memory");
            unsafe.freeMemory(pData);
        }
    }
    public int get_key_click_percent()
    {
        log.finest("");
        return (Native.getInt(pData+0));
    }
    public void set_key_click_percent(int v)
    {
        log.finest("");
        Native.putInt(pData+0, v);
    }
    public int get_bell_percent()
    {
        log.finest("");
        return (Native.getInt(pData+4));
    }
    public void set_bell_percent(int v)
    {
        log.finest("");
        Native.putInt(pData+4, v);
    }
    public int get_bell_pitch()
    {
        log.finest("");
        return (Native.getInt(pData+8));
    }
    public void set_bell_pitch(int v)
    {
        log.finest("");
        Native.putInt(pData+8, v);
    }
    public int get_bell_duration()
    {
        log.finest("");
        return (Native.getInt(pData+12));
    }
    public void set_bell_duration(int v)
    {
        log.finest("");
        Native.putInt(pData+12, v);
    }
    public int get_led()
    {
        log.finest("");
        return (Native.getInt(pData+16));
    }
    public void set_led(int v)
    {
        log.finest("");
        Native.putInt(pData+16, v);
    }
    public int get_led_mode()
    {
        log.finest("");
        return (Native.getInt(pData+20));
    }
    public void set_led_mode(int v)
    {
        log.finest("");
        Native.putInt(pData+20, v);
    }
    public int get_key()
    {
        log.finest("");
        return (Native.getInt(pData+24));
    }
    public void set_key(int v)
    {
        log.finest("");
        Native.putInt(pData+24, v);
    }
    public int get_auto_repeat_mode()
    {
        log.finest("");
        return (Native.getInt(pData+28));
    }
    public void set_auto_repeat_mode(int v)
    {
        log.finest("");
        Native.putInt(pData+28, v);
    }


    String getName()
    {
        return "XKeyboardControl";
    }


    String getFieldsAsString()
    {
        String ret="";

        ret += ""+"key_click_percent = " + get_key_click_percent() +", ";
        ret += ""+"bell_percent = " + get_bell_percent() +", ";
        ret += ""+"bell_pitch = " + get_bell_pitch() +", ";
        ret += ""+"bell_duration = " + get_bell_duration() +", ";
        ret += ""+"led = " + get_led() +", ";
        ret += ""+"led_mode = " + get_led_mode() +", ";
        ret += ""+"key = " + get_key() +", ";
        ret += ""+"auto_repeat_mode = " + get_auto_repeat_mode() +", ";
        return ret;
    }


}



