    {

        Menu subMenu = initMenu(menu, "menu.scan");
//		initMenuItem(subMenu, "menu.scan.newWindow", "Ctrl+N", new Integer(SWT.MOD1 | 'N'), initListener(FileActions.NewWindow.class));
//		initMenuItem(subMenu, null, null, null, null);
        initMenuItem(subMenu, "menu.scan.exportAll", "Ctrl+S", new Integer(SWT.MOD1 | 'S'), initListener(ScanMenuActions.SaveAll.class), false);
        initMenuItem(subMenu, "menu.scan.exportSelection", null, null, initListener(ScanMenuActions.SaveSelection.class), false);
        initMenuItem(subMenu, null, null, null, null);
        initMenuItem(subMenu, "menu.scan.exportPreferences", null, null, null);
        initMenuItem(subMenu, "menu.scan.importPreferences", null, null, null);
        if (!Platform.MAC_OS)
        {
            initMenuItem(subMenu, null, null, null, null);
            initMenuItem(subMenu, "menu.scan.quit", "Ctrl+Q", new Integer(SWT.MOD1 | 'Q'), initListener(ScanMenuActions.Quit.class));
        }

        subMenu = initMenu(menu, "menu.goto");
        initMenuItem(subMenu, "menu.goto.next.aliveHost", "Ctrl+H", new Integer(SWT.MOD1 | 'H'), initListener(GotoMenuActions.NextAliveHost.class));
        initMenuItem(subMenu, "menu.goto.next.openPort", "Ctrl+J", new Integer(SWT.MOD1 | 'J'), initListener(GotoMenuActions.NextHostWithInfo.class));
        initMenuItem(subMenu, "menu.goto.next.deadHost", "Ctrl+K", new Integer(SWT.MOD1 | 'K'), initListener(GotoMenuActions.NextDeadHost.class));
        initMenuItem(subMenu, null, null, null, null);
        initMenuItem(subMenu, "menu.goto.prev.aliveHost", "Ctrl+Shift+H", new Integer(SWT.MOD1 | SWT.MOD2 | 'H'), initListener(GotoMenuActions.PrevAliveHost.class));
        initMenuItem(subMenu, "menu.goto.prev.openPort", "Ctrl+Shift+J", new Integer(SWT.MOD1 | SWT.MOD2 | 'J'), initListener(GotoMenuActions.PrevHostWithInfo.class));
        initMenuItem(subMenu, "menu.goto.prev.deadHost", "Ctrl+Shift+K", new Integer(SWT.MOD1 | SWT.MOD2 | 'K'), initListener(GotoMenuActions.PrevDeadHost.class));
        initMenuItem(subMenu, null, null, null, null);
        initMenuItem(subMenu, "menu.goto.find", "Ctrl+F", new Integer(SWT.MOD1 | 'F'), initListener(GotoMenuActions.Find.class));

        subMenu = initMenu(menu, "menu.commands");
        createCommandsMenuItems(subMenu);

        createFavoritesMenu(menu);

        subMenu = initMenu(menu, "menu.tools");
        initMenuItem(subMenu, "menu.tools.preferences", "Ctrl+O", new Integer(SWT.MOD1 | (Platform.MAC_OS ? ',' : 'O')), initListener(ToolsActions.Preferences.class), true);
        initMenuItem(subMenu, "menu.tools.fetchers", "Ctrl+Shift+O", new Integer(SWT.MOD1 | SWT.MOD2 | (Platform.MAC_OS ? ',' : 'O')), initListener(ToolsActions.ChooseFetchers.class), true);
        initMenuItem(subMenu, null, null, null, null);
        Menu selectMenu = initMenu(subMenu, "menu.tools.select");
        initMenuItem(subMenu, "menu.tools.scanStatistics", "Ctrl+T", new Integer(SWT.MOD1 | 'T'), initListener(ToolsActions.ScanStatistics.class));

        initMenuItem(selectMenu, "menu.tools.select.alive", null, null, initListener(ToolsActions.SelectAlive.class), true);
        initMenuItem(selectMenu, "menu.tools.select.dead", null, null, initListener(ToolsActions.SelectDead.class), true);
        initMenuItem(selectMenu, "menu.tools.select.withPorts", null, null, initListener(ToolsActions.SelectWithPorts.class), true);
        initMenuItem(selectMenu, "menu.tools.select.withoutPorts", null, null, initListener(ToolsActions.SelectWithoutPorts.class), true);
        initMenuItem(selectMenu, null, null, null, null);
        initMenuItem(selectMenu, "menu.tools.select.invert", "Ctrl+I", new Integer(SWT.MOD1 | 'I'), initListener(ToolsActions.SelectInvert.class), true);

        subMenu = initMenu(menu, "menu.help");
        initMenuItem(subMenu, "menu.help.gettingStarted", !Platform.MAC_OS ? "F1" : null, new Integer(Platform.MAC_OS ? SWT.HELP : SWT.F1), initListener(HelpMenuActions.GettingStarted.class));
        initMenuItem(subMenu, null, null, null, null);
        initMenuItem(subMenu, "menu.help.website", null, null, initListener(HelpMenuActions.Website.class));
        initMenuItem(subMenu, "menu.help.faq", null, null, initListener(HelpMenuActions.FAQ.class));
        initMenuItem(subMenu, "menu.help.plugins", null, null, initListener(HelpMenuActions.Plugins.class));
        initMenuItem(subMenu, null, null, null, null);
        initMenuItem(subMenu, "menu.help.cmdLine", null, null, initListener(HelpMenuActions.CommandLineUsage.class));

        if (!Platform.MAC_OS)
        {
            // mac will have these in the 'application' menu
            initMenuItem(subMenu, null, null, null, null);
            initMenuItem(subMenu, "menu.help.checkVersion", null, null, initListener(HelpMenuActions.CheckVersion.class));
            initMenuItem(subMenu, null, null, null, null);
            initMenuItem(subMenu, "menu.help.about", null, null, initListener(HelpMenuActions.About.class));
        }
    }
