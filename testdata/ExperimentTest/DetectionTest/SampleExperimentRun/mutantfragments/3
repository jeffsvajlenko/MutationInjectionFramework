    public StatusBar(Shell shell, GUIConfig guiConfig, ScannerConfig scannerConfig)
    {
        this.guiConfig = guiConfig;
        this.scannerConfig = scannerConfig;

        composite = new Composite(shell, SWT.NONE);
        composite.setLayoutData(LayoutHelper.formData(new FormAttachment(0), new FormAttachment(100), null, new FormAttachment(100)));

        composite.setLayout(LayoutHelper.formLayout(1, 1, 2));

        statusText = new Label(composite, SWT.BORDER);
        statusText.setLayoutData(LayoutHelper.formData(new FormAttachment(0), new FormAttachment(35), new FormAttachment(0), new FormAttachment(100)));
        setStatusText(null);

        displayMethodText = new Label(composite, SWT.BORDER);
        displayMethodText.setText(Labels.getLabel("text.display." + DisplayMethod.PORTS));
        displayMethodText.pack();
        displayMethodText.setLayoutData(LayoutHelper.formData(displayMethodText.getSize().x, SWT.DEFAULT, new FormAttachment(statusText), null, new FormAttachment(0), new FormAttachment(100)));
 
       displayMethodText.addListener(SWT.MouseDown, new ConfigTextClickListener());
        updateConfigText();

        threadsText = new Label(composite, SWT.BORDER);
        setRunningThreads(Math.min(scannerConfig.maxThreads, 200)); // this should set the longest possible text
        threadsText.pack(); // calculate the width
        threadsText.setLayoutData(LayoutHelper.formData(threadsText.getSize().x, SWT.DEFAULT, new FormAttachment(displayMethodText), null, new FormAttachment(0), new FormAttachment(100)));
        setRunningThreads(0); // set back to 0 at startup

        progressBar = new ProgressBar(composite, SWT.BORDER);
        progressBar.setLayoutData(LayoutHelper.formData(new FormAttachment(threadsText), new FormAttachment(100, Platform.MAC_OS ? -20 : 0), new FormAttachment(0), new FormAttachment(100)));
        progressBar.setSelection(0);
    }
