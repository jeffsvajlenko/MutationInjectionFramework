<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/XMLExporter.java" startline="31" endline="34">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/XMLExporter.java" startline="36" endline="39">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/XMLExporter.java" startline="41" endline="46">
@x
public void x (x x) {
    throw new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/XMLExporter.java" startline="48" endline="73">
@x
public void x (x x, x x) throws x {
    x = new x (new x (x, x));
    x.x (literal + x + literal);
    x.x (literal + x.x () + literal);
    x.x (literal + x.x + literal);
    x x = new x (literal);
    x.x (literal + x.x (new x ()) + literal);
    int x = x.x (literal);
    x x = literal;
    if (x >= literal) {
        x = x.x (literal, x);
        x = x.x (x + literal);
    }
    x.x (literal + (x != literal ? literal + x.x () + literal : literal) + literal);
    x.x (literal + x.x () + literal);
    x.x (literal);
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/XMLExporter.java" startline="75" endline="84">
@x
public void x () throws x {
    x.x (literal);
    x.x (literal);
    if (x.x ()) {
        throw new x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/XMLExporter.java" startline="86" endline="90">
public void x (x [] x) throws x {
    x = x.x (literal, x);
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/XMLExporter.java" startline="92" endline="105">
public void x (x [] x) throws x {
    x.x (literal + x [x] + literal);
    for (int x = literal;
    x < x.x; x ++) {
        if (x [x] != literal) {
            x.x (literal + x [x] + literal + x [x] + literal);
        }
    }
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/ExporterException.java" startline="18" endline="21">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/ExporterException.java" startline="23" endline="27">
public x (x x, x x) {
    x (x);
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/ExporterRegistry.java" startline="24" endline="32">
public x (x [] x) {
    x = new x < x, x > ();
    for (int x = literal;
    x < x.x; x ++) {
        x.x (x [x].x (), x [x]);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/ExporterRegistry.java" startline="37" endline="40">
public x < x > x () {
    return x.x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/ExporterRegistry.java" startline="47" endline="67">
public x x (x x) throws x {
    int x = x.x (literal) + literal;
    x x = x.x (x);
    x x = x.x (x);
    if (x == literal) {
        throw new x (literal);
    }
    try {
        return (x) x.x ();
    } catch (x x) {
        throw new x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/AbstractExporter.java" startline="28" endline="31">
public x x () {
    return x.x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/AbstractExporter.java" startline="33" endline="36">
public void x (x x) {
    x.x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/AbstractExporter.java" startline="38" endline="41">
public void x (x x, x x) throws x {
    x = new x (new x (x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/AbstractExporter.java" startline="43" endline="48">
public void x () throws x {
    if (x.x ()) throw new x ();

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/AbstractExporter.java" startline="50" endline="61">
public x x () {
    try {
        return (x) x.x ();
    } catch (x x) {
        return literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/ExportProcessor.java" startline="28" endline="33">
public x (x x, x x, boolean x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/ExportProcessor.java" startline="40" endline="94">
public void x (x x, x x) {
    x x = literal;
    try {
        if (x) {
            x.x (x);
        }
        x = new x (x, x);
        x.x (x, x.x ());
        x < x > x = x.x ();
        x [] x = new x [x.x ()];
        int x = literal;
        for (x x : x) {
            x [x ++] = x.x ();
        }
        x.x (x);
        int x = literal;
        for (x x : x) {
            if (x == literal || x.x (x, x)) {
                x.x (x.x ().x ());
            }
        }
        x.x ();
    } catch (x x) {
        throw x;
    } catch (x x) {
        throw new x (literal, x);
    } finally {
        if (x != literal) {
            try {
                x.x ();
            } catch (x x) {
            }
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/IPListExporter.java" startline="29" endline="32">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/IPListExporter.java" startline="34" endline="37">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/IPListExporter.java" startline="39" endline="43">
public void x (x [] x) throws x {
    x = x (x.x, x);
    x = x (x.x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/IPListExporter.java" startline="53" endline="64">
static int x (x x, x [] x) {
    x x = x.x (x);
    for (int x = literal;
    x < x.x; x ++) {
        if (x.x (x [x])) {
            return x;
        }
    }
    throw new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/IPListExporter.java" startline="66" endline="78">
public void x (x [] x) throws x {
    x x = x [x].x ();
    x x = x [x];
    if (x != literal && x instanceof x) {
        for (x x = new x (x.x ());
        x.x ();) {
            x.x (x + x + x.x ());
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/TXTExporter.java" startline="24" endline="27">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/TXTExporter.java" startline="29" endline="32">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/TXTExporter.java" startline="34" endline="51">
public void x (x x, x x) throws x {
    x.x (x, x);
    if (! x) {
        x.x (x.x (literal));
        x.x (x.x ());
        x.x (x.x);
        x.x ();
        x x = x.x (literal);
        x = x.x (literal, x);
        x.x (x);
        x.x (x.x ().x (new x ()));
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/TXTExporter.java" startline="53" endline="68">
public void x (x [] x) throws x {
    x = new int [x.x];
    for (int x = literal;
    x < x.x; x ++) {
        x [x] = x [x].x () * literal;
        if (! x) {
            x.x (x (x [x], x [x]));
        }
    }
    if (! x) {
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/TXTExporter.java" startline="70" endline="79">
public void x (x [] x) throws x {
    x.x (x (x [literal], x [literal]));
    for (int x = literal;
    x < x.x; x ++) {
        x x = x [x];
        x.x (x (x, x [x]));
    }
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/TXTExporter.java" startline="86" endline="103">
x x (x x, int x) {
    if (x < literal) x = literal;

    x x;
    if (x == literal) x = literal;
    else x = x.x ();

    if (x.x () >= x) {
        return x;
    }
    return x + literal.x (literal, x - x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/SQLExporter.java" startline="22" endline="25">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/SQLExporter.java" startline="27" endline="30">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/SQLExporter.java" startline="32" endline="34">
public void x (x [] x) throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/SQLExporter.java" startline="36" endline="39">
public void x (x [] x) throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/CSVExporter.java" startline="21" endline="24">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/CSVExporter.java" startline="26" endline="29">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/CSVExporter.java" startline="31" endline="43">
public void x (x [] x) throws x {
    if (! x) {
        x.x (x (x [literal]));
        for (int x = literal;
        x < x.x; x ++) {
            x.x (x);
            x.x (x (x [x]));
        }
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/CSVExporter.java" startline="45" endline="55">
public void x (x [] x) throws x {
    x.x (x (x [literal]));
    for (int x = literal;
    x < x.x; x ++) {
        x x = x [x];
        x.x (x);
        x.x (x (x));
    }
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/exporters/CSVExporter.java" startline="60" endline="65">
x x (x x) {
    if (x == literal) return literal;

    return x.x ().x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="46" endline="49">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="51" endline="53">
public x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="55" endline="65">
public x (x x) {
    try {
        x (new x (x));
    } catch (x x) {
        throw new x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="67" endline="70">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="72" endline="130">
private void x (x x) {
    x x = new x (x);
    x = literal;
    x = new x < x, x > ();
    try {
        x x;
        while ((x = x.x ()) != literal) {
            x x = x.x.x (x);
            while (x.x ()) {
                try {
                    x x = x.x ();
                    x x = x.x (x);
                    if (x == literal) x = new x (x.x (x));

                    if (! x.x () && x.x (x.x ()) == literal) {
                        x x = x.x (x.x (x.x () + literal));
                        if (x.x ()) {
                            x.x (x.x (x.x ()));
                        }
                    }
                    x.x (x, x);
                } catch (x x) {
                    x.x (x.x, literal, x);
                }
            }
        }
        if (x.x ()) {
            throw new x (literal);
        }
    } catch (x x) {
        throw new x (literal);
    } finally {
        try {
            x.x ();
        } catch (x x) {
        }
    }
    x = x.x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="132" endline="135">
public int x () {
    return x.x ((float) x * literal / x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="137" endline="140">
public boolean x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="142" endline="146">
public x x () {
    x ++;
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FileFeeder.java" startline="148" endline="152">
public x x () {
    return x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/AbstractFeeder.java" startline="19" endline="22">
public x x () {
    return x.x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/AbstractFeeder.java" startline="24" endline="28">
@x
public x x () {
    return x () + literal + x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FeederException.java" startline="18" endline="21">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/FeederException.java" startline="23" endline="27">
public x (x x, x x) {
    x (x);
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RandomFeeder.java" startline="36" endline="39">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RandomFeeder.java" startline="41" endline="43">
public x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RandomFeeder.java" startline="45" endline="73">
public x (x x, x x, int x) {
    try {
        x.x = x.x (x).x ();
    } catch (x x) {
        throw new x (literal);
    }
    try {
        x.x = x.x (x).x ();
    } catch (x x) {
        throw new x (literal);
    }
    if (x <= literal) {
        throw new x (literal);
    }
    x.x = literal;
    x.x = x;
    x.x = new byte [x.x];
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RandomFeeder.java" startline="75" endline="78">
public int x () {
    return x.x ((float) x * literal / x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RandomFeeder.java" startline="80" endline="83">
public boolean x () {
    return x < x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RandomFeeder.java" startline="85" endline="99">
public x x () {
    x ++;
    x.x (x);
    try {
        x.x (x, x, x);
        return new x (x.x (x));
    } catch (x x) {
        throw new x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RandomFeeder.java" startline="101" endline="112">
public x x () {
    try {
        return x + literal + x.x (x).x () + literal + x.x (x).x ();
    } catch (x x) {
        assert literal : x;
        return literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java" startline="37" endline="40">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java" startline="42" endline="44">
public x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java" startline="46" endline="63">
public x (x x, x x) {
    try {
        x.x = x.x = x.x (x);
        x.x = x.x = x.x (x);
    } catch (x x) {
        throw new x (literal);
    }
    if (x.x (x.x, x.x)) {
        throw new x (literal);
    }
    x ();
    x.x = x.x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java" startline="68" endline="79">
private void x () {
    long x = x.x (x.x.x ());
    long x = x.x (x.x.x ());
    x = x >= literal ? x : x + x.x;
    x = x >= literal ? x : x + x.x;
    x = literal / (x - x + literal);
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java" startline="81" endline="85">
public boolean x () {
    return ! x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java" startline="87" endline="93">
public x x () {
    x += x;
    x x = x.x;
    x.x = x.x (x);
    return new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java" startline="95" endline="98">
public int x () {
    return (int) x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RangeFeeder.java" startline="100" endline="104">
public x x () {
    return x.x () + literal + x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RescanFeeder.java" startline="33" endline="37">
public x (x x, x...x) {
    x.x = x;
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RescanFeeder.java" startline="42" endline="45">
public x x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RescanFeeder.java" startline="47" endline="51">
@x
public x x () {
    return x.x (literal) + x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RescanFeeder.java" startline="58" endline="76">
private int x (x...x) {
    if (x.x == literal) throw new x (literal);

    try {
        x = new x < x > (x.x);
        for (x x : x) {
            x.x (x.x (x));
        }
    } catch (x x) {
        throw new x (literal);
    }
    return x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RescanFeeder.java" startline="78" endline="81">
public boolean x () {
    return x < x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RescanFeeder.java" startline="83" endline="86">
public x x () {
    return new x (x.x (x ++));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RescanFeeder.java" startline="88" endline="91">
public int x () {
    return x * literal / x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/RescanFeeder.java" startline="96" endline="99">
public x x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/SmartTextFeeder.java" startline="25" endline="28">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/SmartTextFeeder.java" startline="30" endline="45">
public x (x x) {
    x = x.x (literal, literal);
    int x = x.x (literal);
    if (x >= literal) {
        x = x.x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/SmartTextFeeder.java" startline="47" endline="50">
public boolean x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/SmartTextFeeder.java" startline="52" endline="55">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/SmartTextFeeder.java" startline="57" endline="60">
public int x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/feeders/SmartTextFeeder.java" startline="62" endline="65">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java" startline="37" endline="40">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java" startline="42" endline="96">
protected void x () {
    x = new x ();
    x (x.x (literal, literal, literal));
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x.x (x.x (literal) + literal);
    x x = new x ();
    x.x = new x (literal);
    x.x = new x (x, literal, x.x);
    x.x = new x (x, literal, x.x);
    x.x (x);
    x.x (literal);
    x = new x (x.x (x.x, x.x).x, x.x);
    x.x = new x (literal);
    x.x = new x (x);
    x.x (x);
    x.x (literal);
    x.x (x.x (literal));
    x = new x ();
    x.x = new x (literal);
    x.x = new x (x, literal, x.x);
    x.x = new x (x);
    x.x (x);
    x.x (new x () {

        public void x (x x) {
            x (x);
        }

        public void x (x x) {
            x x = new x (x ());
            x.x (x.x (literal));
            x x = x.x ();
            if (x != literal) {
                x.x (x);
                x.x (x.x ());
            }
        }

    }

    );
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java" startline="76" endline="79">
public void x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java" startline="81" endline="91">
public void x (x x) {
    x x = new x (x ());
    x.x (x.x (literal));
    x x = x.x ();
    if (x != literal) {
        x.x (x);
        x.x (x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java" startline="98" endline="102">
public x x () {
    x = new x (x.x ());
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java" startline="104" endline="107">
public x [] x () {
    return new x [] {x.x ()};
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java" startline="109" endline="112">
public void x (x [] x) {
    x.x (x [literal]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FileFeederGUI.java" startline="114" endline="117">
public x [] x () {
    return new x [] {literal};
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="59" endline="62">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="64" endline="146">
protected void x () {
    x = new x ();
    x (x.x (literal, literal, literal));
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x.x (literal);
    int x = x.x (x.x, x.x).x;
    x.x (literal);
    x.x (x.x (literal) + literal);
    x.x (x.x (literal, new x (x, literal, x.x), new x (x, literal, x.x), literal));
    x.x (x.x (x, x.x, new x (x), literal, new x (literal), literal));
    x.x (new x ());
    x.x (x.x (literal));
    x.x (x.x (new x (x), literal, new x (x, literal, x.x), literal));
    x.x (x.x (x, x.x, new x (x), literal, literal, literal));
    x.x (new x ());
    x.x x = new x.x (x, x, x) {

        public void x (x x) {
            x = literal;
            x.x (x.x (literal));
            x.x (x);
        }

    }

    ;
    x.x (x);
    x.x (x.x (x, x.x, new x (x, literal, x.x), literal, new x (x), literal));
    x.x (x.x (literal));
    x x = new x ();
    x.x (x.x, x);
    x.x (x.x, x);
    x.x (x.x (literal) + literal);
    x.x (x.x (new x (literal), literal, new x (x, literal, x.x), literal));
    x.x (new x (x (), x.x ().x (literal)));
    x.x (x.x (literal));
    x.x (x);
    x.x (x.x (new x (x), literal, new x (x), ! x.x ? new x (x, literal, x.x) : literal));
    x.x (x.x (literal));
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x x = new x ();
    x.x (x.x, x);
    x.x (x.x, x);
    x.x (x.x (new x (x, literal), new x (x, literal, x.x), new x (x), new x (x, literal, x.x)));
    x.x (x.x (literal));
    x ();
    x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="98" endline="106">
public void x (x x) {
    x = literal;
    x.x (x.x (literal));
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="148" endline="152">
public x x () {
    x = new x (x.x (), x.x ());
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="154" endline="157">
public x [] x () {
    return new x [] {x.x (), x.x ()};
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="159" endline="166">
public void x (x [] x) {
    x.x (x [literal]);
    x.x (x [literal]);
    x.x (x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="168" endline="171">
public x [] x () {
    return new x [] {literal, literal};
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="175" endline="178">
public void x (x x) {
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="180" endline="182">
public void x (x x) {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="187" endline="192">
public void x (x x) {
    if (! x) x.x (x.x (literal));

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="197" endline="203">
public void x (x x) {
    if (x) {
        x.x (x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RangeFeederGUI.java" startline="208" endline="252">
public void x (x x) {
    if (x.x == x.x) {
        if (x.x != x.x) return;

        x.x = literal;
    }
    if (x.x == x.x) {
        if (x.x (x.x ()) < literal) return;

    }
    try {
        x x = x.x ();
        x x = x.x (x);
        x x = x.x (x.x ());
        x = literal;
        x.x (x.x (x, x).x ());
        x.x (x.x (x, x).x ());
        x = literal;
        x = literal;
    } catch (x x) {
        throw new x (literal);
    }
    if (x.x == x.x) {
        x ().x ();
    } else {
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java" startline="50" endline="53">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java" startline="55" endline="131">
protected void x () {
    x = new x ();
    x (x.x (literal, literal, literal));
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x = new x (x, x.x);
    x.x (literal);
    int x = x.x (x.x, x.x).x;
    x.x (literal);
    x.x (x.x (literal) + literal);
    x.x (x.x (literal, new x (x, literal, x.x), new x (x, literal, x.x), literal));
    x.x (x.x (x, x.x, new x (x), literal, new x (literal), literal));
    x.x (x.x (literal) + literal);
    x.x (x.x (new x (x, literal), literal, new x (x, literal, x.x), literal));
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (x.x (x - literal, x.x, new x (x), literal, new x (literal), new x (x, literal, x.x)));
    x.x x = new x.x (x, x, x);
    x.x (x);
    x.x (x.x (x, x.x, new x (x, literal, x.x), literal, new x (x), literal));
    x.x (x.x (literal) + literal);
    x.x (x.x (new x (literal), literal, new x (x, literal, x.x), literal));
    x.x (new x (x (), x.x ().x (literal)));
    x.x (x.x (literal));
    x.x (x);
    x.x (x.x (new x (x), literal, new x (x), ! x.x ? new x (x, literal, x.x) : literal));
    x.x (x.x (literal));
    x.x (x.x (new x (x, literal), literal, new x (x, literal, x.x), literal));
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x, literal, x.x), literal));
    x.x (new x () {

        public void x (x x) {
            x.x ();
            x.x ();
        }

    }

    );
    x ();
    x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java" startline="117" endline="124">
public void x (x x) {
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java" startline="133" endline="137">
public x x () {
    x = new x (x.x (), x.x (), x.x ());
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java" startline="139" endline="142">
public x [] x () {
    return new x [] {x.x (), x.x (), x.x (x.x ())};
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java" startline="144" endline="149">
public void x (x [] x) {
    x.x (x [literal]);
    x.x (x [literal]);
    x.x (x.x (x [literal]));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/RandomFeederGUI.java" startline="151" endline="154">
public x [] x () {
    return new x [] {literal, literal, literal};
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java" startline="37" endline="47">
public x (x [] x, x x, x x) {
    x.x = x.x (x);
    x.x = x;
    for (x x : x) {
        x.x (x.x ());
    }
    x.x = x;
    x.x = x [literal];
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java" startline="49" endline="52">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java" startline="57" endline="68">
public void x (int x) {
    x.x (literal);
    x = x.x (x);
    x.x = x;
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java" startline="70" endline="73">
public x < x > x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java" startline="78" endline="93">
public void x (x x) {
    for (int x = literal;
    x < x.x (); x ++) {
        x x = x.x (x);
        if (x.x ().x (x) || x.x ().x (x)) {
            x.x (x);
            x.x (x.x, literal);
            return;
        }
    }
    throw new x (literal + x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java" startline="98" endline="102">
public x x () {
    x = x ().x ();
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/FeederGUIRegistry.java" startline="108" endline="116">
public x x (x [] x) {
    x [] x = new x [x.x];
    for (int x = literal;
    x < x.x; x ++) {
        x [x] = x [x].x ();
    }
    return new x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java" startline="34" endline="39">
public x (x x) {
    x (x, x.x);
    x (literal);
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java" startline="46" endline="49">
public x x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java" startline="54" endline="57">
public x x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java" startline="62" endline="65">
public x x () {
    return x () + literal + x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java" startline="77" endline="114">
protected static void x (final x x, final x x) {
    new x () {

        public void x () {
            synchronized (x) {
                try {
                    if (x == literal) {
                        x = x.x ().x ();
                        x x = x.x (x);
                        x = x.x ();
                    }
                    x.x ().x (new x () {

                        public void x () {
                            if (literal.x (x.x ())) x.x (x);

                            if (literal.x (x.x ())) x.x (x);

                        }

                    }

                    );
                } catch (x x) {
                    x.x (x.x ());
                }
            }
        }

    }

    .x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java" startline="81" endline="112">
public void x () {
    synchronized (x) {
        try {
            if (x == literal) {
                x = x.x ().x ();
                x x = x.x (x);
                x = x.x ();
            }
            x.x ().x (new x () {

                public void x () {
                    if (literal.x (x.x ())) x.x (x);

                    if (literal.x (x.x ())) x.x (x);

                }

            }

            );
        } catch (x x) {
            x.x (x.x ());
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/feeders/AbstractFeederGUI.java" startline="96" endline="103">
public void x () {
    if (literal.x (x.x ())) x.x (x);

    if (literal.x (x.x ())) x.x (x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="45" endline="71">
public x (x x, x x, x x, x x, x x) {
    x = new x (x);
    x.x (x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (new x (x.class, x.class));
    x.x (x);
    x (x);
    x (x);
    x.x (new x (x));
    x.x (new x (x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="73" endline="76">
public void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="78" endline="80">
public void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="82" endline="146">
private void x (x x) {
    x x = x (x, literal);
    x (x, literal, literal, new x (x.x | literal), x (x.x.class), literal);
    x (x, literal, literal, literal, x (x.x.class), literal);
    x (x, literal, literal, literal, literal);
    x (x, literal, literal, literal, literal);
    x (x, literal, literal, literal, literal);
    if (! x.x) {
        x (x, literal, literal, literal, literal);
        x (x, literal, literal, new x (x.x | literal), x (x.x.class));
    }
    x = x (x, literal);
    x (x, literal, literal, new x (x.x | literal), x (x.x.class));
    x (x, literal, literal, new x (x.x | literal), x (x.x.class));
    x (x, literal, literal, new x (x.x | literal), x (x.x.class));
    x (x, literal, literal, literal, literal);
    x (x, literal, literal, new x (x.x | x.x | literal), x (x.x.class));
    x (x, literal, literal, new x (x.x | x.x | literal), x (x.x.class));
    x (x, literal, literal, new x (x.x | x.x | literal), x (x.x.class));
    x (x, literal, literal, literal, literal);
    x (x, literal, literal, new x (x.x | literal), x (x.x.class));
    x = x (x, literal);
    x (x);
    x (x);
    x = x (x, literal);
    x (x, literal, literal, new x (x.x | (x.x ? literal : literal)), x (x.x.class), literal);
    x (x, literal, literal, new x (x.x | x.x | (x.x ? literal : literal)), x (x.x.class), literal);
    x (x, literal, literal, literal, literal);
    x x = x (x, literal);
    x (x, literal, literal, new x (x.x | literal), x (x.x.class));
    x (x, literal, literal, literal, x (x.x.class), literal);
    x (x, literal, literal, literal, x (x.x.class), literal);
    x (x, literal, literal, literal, x (x.x.class), literal);
    x (x, literal, literal, literal, x (x.x.class), literal);
    x (x, literal, literal, literal, literal);
    x (x, literal, literal, new x (x.x | literal), x (x.x.class), literal);
    x = x (x, literal);
    x (x, literal, ! x.x ? literal : literal, new x (x.x ? x.x : x.x), x (x.x.class));
    x (x, literal, literal, literal, literal);
    x (x, literal, literal, literal, x (x.x.class));
    x (x, literal, literal, literal, x (x.x.class));
    x (x, literal, literal, literal, x (x.x.class));
    x (x, literal, literal, literal, literal);
    x (x, literal, literal, literal, x (x.x.class));
    if (! x.x) {
        x (x, literal, literal, literal, literal);
        x (x, literal, literal, literal, x (x.x.class));
        x (x, literal, literal, literal, literal);
        x (x, literal, literal, literal, x (x.x.class));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="148" endline="160">
private void x (x x) {
    x (x, literal, literal, literal, x (x.x.class));
    x (x, literal, literal, literal, literal);
    x (x, literal, literal, new x (x.x | literal), x (x.x.class), literal);
    x (x, literal, x.x ? literal : literal, literal, x (x.x.class), literal);
    x (x, literal, literal, literal, literal);
    x (x, literal, x.x ? literal : literal, literal, x (x.x.class));
    x (x, literal, literal, literal, x (x.x.class));
    x (x, literal, literal, literal, literal);
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="162" endline="168">
private void x (x x) {
    x x = (x) x.x (x.class);
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="170" endline="176">
private void x (x x) {
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = (x) x.x (x.class);
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="178" endline="187">
private static x x (x x, x x) {
    x x = new x (x, x.x);
    x.x (x.x (x));
    x x = new x (x.x (), x.x);
    x.x (x);
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="189" endline="196">
private x x (x < ? extends x > x) {
    if (x.x (x) == literal) x.x (x);

    return (x) x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="198" endline="201">
static x x (x x, x x, x x, x x, x x) {
    return x (x, x, x, x, x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="203" endline="224">
static x x (x x, x x, x x, x x, x x, boolean x) {
    x x = new x (x, x == literal ? x.x : x.x);
    if (x != literal) x.x (x.x (x) + (x != literal ? literal + x : literal));

    if (x != literal) x.x (x.x ());

    if (x != literal) x.x (x.x, x);
    else x.x (literal);

    if (x) {
        x.x (literal, x.x);
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="231" endline="234">
public x (x x) {
    x (x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="236" endline="236">
protected void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="244" endline="257">
public x (x x, x.x x, x.x x) {
    x (x, x.x);
    x (x, literal, literal, literal, x);
    x (x, literal, literal, literal, literal);
    x (x.x, x);
    x x = new x ();
    x.x = x;
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="258" endline="258">
protected void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="266" endline="275">
public x (x x, x.x x, x.x x, x.x x) {
    x (x, x.x);
    x (x, literal, literal, new x (x.x | literal), x);
    x (x, literal, literal, literal, x);
    x (x, literal, literal, literal, literal);
    x (x.x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="276" endline="276">
protected void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="285" endline="292">
public x (x x, x.x x, x.x x, x.x x) {
    x (x, x.x);
    x (x, literal, literal, literal, x);
    x (x, literal, literal, literal, x);
    x (x, literal, literal, literal, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="293" endline="293">
protected void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="304" endline="307">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="309" endline="314">
public void x (final x x, x x) {
    if (x != x.x && x != x.x) return;

    x (x, x == x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainMenu.java" startline="316" endline="330">
public void x (x x, boolean x) {
    for (x x : x.x ()) {
        if (x.x (literal) == x.x) {
            x.x (x);
        } else if (x.x () != literal) {
            x (x.x (), x);
        }

    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SWTAwareStateMachine.java" startline="26" endline="29">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SWTAwareStateMachine.java" startline="31" endline="45">
@x
protected void x (final x x) {
    if (x.x ()) return;

    x.x (new x () {

        public void x () {
            x.x.x (x);
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SWTAwareStateMachine.java" startline="40" endline="43">
public void x () {
    x.x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="54" endline="86">
public x (x x, x x, x x, x x, x x, x.x x, x.x x, x.x x) {
    x (x, x.x | x.x | x.x | x.x);
    x.x = x;
    x.x = x;
    x.x = x;
    x (literal);
    x (literal);
    x.x = x;
    x.x = x;
    x.x (x);
    x (x);
    x [x.x.x ()] = new x (literal, x.x ().x (literal));
    x [x.x.x ()] = new x (literal, x.x ().x (literal));
    x [x.x.x ()] = new x (literal, x.x ().x (literal));
    x [x.x.x ()] = new x (literal, x.x ().x (literal));
    x (x.x, x);
    x (x.x, new x.x (x, x, x));
    x (x.x, new x.x (x));
    x (x.x, new x.x (x, x));
    x (x.x, new x ());
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="91" endline="113">
public void x (x x) {
    x ();
    x [] x = x ();
    for (int x = literal;
    x < x.x; x ++) {
        x [x].x ();
    }
    for (x x : x.x ()) {
        x x = new x (x, x.x);
        x.x (x.x (x));
        x.x (x);
        x.x (x.x, x);
        x.x (x.x, x);
    }
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="115" endline="122">
public void x () {
    int x = literal;
    for (x x : x.x ()) {
        x (x ++).x (x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="124" endline="129">
protected void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="140" endline="167">
public void x (final x x) {
    if (x ()) return;

    x ().x (new x () {

        public void x () {
            if (x ()) return;

            if (x.x (x)) {
                int x = x.x (x);
                x (x);
            } else {
                int x = x ();
                x.x (x, x);
                new x (x.x, x.x);
            }
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="146" endline="165">
public void x () {
    if (x ()) return;

    if (x.x (x)) {
        int x = x.x (x);
        x (x);
    } else {
        int x = x ();
        x.x (x, x);
        new x (x.x, x.x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="172" endline="175">
public void x () {
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="182" endline="192">
public void x (int x, x x, x x) {
    int x = x.x (x.x);
    if (x >= literal) {
        x.x (x).x (x, x);
        x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="198" endline="202">
public x x () {
    int x = x ();
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="204" endline="210">
public void x (int [] x) {
    x.x (x);
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="212" endline="218">
public void x () {
    x.x ();
    x.x ();
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="224" endline="234">
public void x () {
    int [] x = x ();
    for (int x : x) {
        x.x (x).x ();
    }
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="239" endline="242">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="250" endline="266">
public void x (x x) {
    x x = (x) x.x;
    int x = x (x);
    x x = x.x (x);
    x < ? > x = x.x ();
    x [] x = new x [x.x ()];
    for (int x = literal;
    x < x.x (); x ++) {
        x x = x.x (x);
        if (x != literal) x [x] = x.x ();

    }
    x.x (x);
    x.x (literal, x [x.x ().x ()]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ResultTable.java" startline="270" endline="274">
public void x (x x, x x) {
    x (x ().x (x == x.x ? x.x : x.x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/util/LayoutHelper.java" startline="22" endline="29">
public static x x (int x, int x, int x) {
    x x = new x ();
    x.x = x;
    x.x = x;
    x.x = x;
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/util/LayoutHelper.java" startline="31" endline="39">
public static x x (int x, int x, x x, x x, x x, x x) {
    x x = new x (x, x);
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/util/LayoutHelper.java" startline="41" endline="44">
public static x x (x x, x x, x x, x x) {
    return x (x.x, x.x, x, x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="47" endline="52">
public x (x x, x x) {
    x.x = x;
    x.x = x;
    x.x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="54" endline="110">
@x
protected void x () {
    x.x (x.x (literal));
    x.x (x.x (literal, literal, literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (literal, x.x, new x (literal), new x (literal), new x (literal), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (new x (literal), literal, new x (x), literal));
    x = new x (x, x.x);
    x.x (literal);
    x.x (x.x (literal, x.x, new x (x), literal, new x (x, literal, x.x), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (new x (x, literal), literal, new x (x), literal));
    x = new x (x, x.x);
    x.x (literal);
    x.x (x.x (literal, x.x, new x (x), literal, new x (x, literal, x.x), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (new x (literal), literal, new x (x, literal), literal));
    x = new x (x, x.x);
    x.x (x.x (new x (x, - literal), new x (literal), new x (x, literal), literal));
    x = new x (x, x.x);
    x.x (x.x (new x (literal), new x (literal), new x (x), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (new x (literal), literal, new x (x, literal), literal));
    x = new x (x, x.x);
    x.x (x.x (new x (x, - literal), new x (literal), new x (x, literal), literal));
    x = new x (x, x.x);
    x.x (x.x (new x (literal), new x (literal), new x (x), literal));
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x ());
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x () {

        public void x (x x) {
            x.x ();
        }

    }

    );
    x (x, x, x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="101" endline="104">
public void x (x x) {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="112" endline="123">
public void x () {
    x.x ().x (new x () {

        public void x () {
            x ++;
            x.x (x.x (x));
            x.x (x);
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="116" endline="121">
public void x () {
    x ++;
    x.x (x.x (x));
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="125" endline="136">
public void x () {
    x.x ().x (new x () {

        public void x () {
            x ++;
            x.x (x.x (x));
            x.x (x);
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="129" endline="134">
public void x () {
    x ++;
    x.x (x.x (x));
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="138" endline="150">
private void x () {
    x.x (literal);
    x.x (literal);
    x = literal;
    x.x (literal);
    x.x (x.x ());
    x.x (literal);
    x = literal;
    x.x (literal);
    x.x (x.x ());
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="152" endline="179">
private void x () {
    x.x ().x (new x () {

        public void x () {
            x.x (x.x ());
            x.x (literal);
            x.x (literal);
            if (x.x () > x.x ()) {
                x x = new x (x, x.x | x.x);
                x.x (x.x (literal));
                x.x (x.x (x.x (literal), x.x (), x.x (), x.x ()));
                x.x ();
            } else {
                x x = new x (x, x.x | x.x);
                x.x (x.x (literal));
                x.x (x.x (x.x (literal), x.x));
                x.x ();
            }
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="156" endline="177">
public void x () {
    x.x (x.x ());
    x.x (literal);
    x.x (literal);
    if (x.x () > x.x ()) {
        x x = new x (x, x.x | x.x);
        x.x (x.x (literal));
        x.x (x.x (x.x (literal), x.x (), x.x (), x.x ()));
        x.x ();
    } else {
        x x = new x (x, x.x | x.x);
        x.x (x.x (literal));
        x.x (x.x (x.x (literal), x.x));
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="183" endline="198">
public void x (x x) {
    final x x = new x (x.x (), x.x (x.x ()));
    x ();
    new x () {

        public void x () {
            x.x (x);
            x ();
        }

    }

    .x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/ConfigDetectorDialog.java" startline="192" endline="196">
public void x () {
    x.x (x);
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java" startline="43" endline="46">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java" startline="48" endline="156">
@x
protected void x () {
    x x = x.x ();
    x x = x != literal ? x.x () : literal;
    x = new x (x, x.x | x.x);
    x.x (x.x (literal));
    x.x (x.x (literal, literal, literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (literal, literal, new x (x, literal), literal));
    x = new x (x, x.x | x.x | x.x);
    x.x (x.x (literal, literal, new x (literal), new x (x, literal, x.x), new x (x), literal));
    x < x > x = x.x ().x ();
    x.x ();
    while (x.x ()) {
        x x = x.x ();
        x.x (x.x ());
    }
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (literal));
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x), literal));
    x.x (x.x (new x (x), literal, new x (x), literal));
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x, literal), literal));
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x), literal));
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x, literal), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (new x (x, literal), literal, new x (x, literal), literal));
    x = new x (x, x.x | x.x | x.x);
    x.x (x.x (literal, literal, new x (x, literal), literal, new x (x), literal));
    x = x.x ().x ();
    x.x ();
    while (x.x ()) {
        x x = x.x ();
        x x = x.x ();
        x.x (x, x.x ());
        if (x.x (x) < literal) x.x (x);

    }
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x (x, x, x);
    x.x (x.x, new x (x));
    x.x (x.x, new x (x));
    x x = new x (x, x);
    x.x (x.x, x);
    x.x (x.x, x);
    x x = new x (x, x);
    x.x (x.x, x);
    x.x (x.x, x);
    x.x (x.x, new x ());
    x.x ();
    x x = x.x ();
    x.x (x.x (x.x + x.x - literal, x.x, new x (literal), literal, literal, literal));
    x.x ();
    x.x (x.x, new x () {

        public void x (x x) {
            x.x ();
            x.x ();
        }

    }

    );
    x.x (x.x, new x () {

        public void x (x x) {
            x (x.x ());
            x.x ();
            x.x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java" startline="141" endline="145">
public void x (x x) {
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java" startline="149" endline="154">
public void x (x x) {
    x (x.x ());
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java" startline="162" endline="173">
void x (x [] x) {
    x [] x = new x [x.x + literal];
    x [literal] = x.x;
    for (int x = literal;
    x < x.x; x ++) {
        x [x + literal] = x.x (x [x]);
    }
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java" startline="178" endline="190">
public void x (x x) {
    x [] x = x.x ();
    x x = x.x > literal ? x [literal] : x.x (literal);
    for (x x : x.x ()) {
        if (x.x (x.x ())) {
            x.x (x);
            break;
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java" startline="199" endline="203">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/SelectFetchersDialog.java" startline="205" endline="217">
public void x (x x) {
    int [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        x.x (x.x (x [x]));
    }
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditFavoritesDialog.java" startline="31" endline="34">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditFavoritesDialog.java" startline="36" endline="104">
@x
protected void x () {
    x x = x.x ();
    x x = x != literal ? x.x () : literal;
    x = new x (x, x.x | x.x);
    x.x (x.x (literal));
    x.x (x.x (literal, literal, literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x | x.x | x.x);
    x.x (x.x (literal, literal, new x (literal), literal, new x (x), literal));
    for (x x : x) {
        x.x (x);
    }
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x (x));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x (x));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x ();
    x.x (x.x, x);
    x.x (x.x, x);
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x ());
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x), literal));
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x), literal));
    x.x (x.x (new x (x), literal, new x (x, literal), literal));
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x (x, x, x);
    x.x ();
    x.x (new x.x.x.x.x () {

        public void x (x.x.x.x.x x) {
            x ();
            x.x ();
        }

    }

    );
    x.x (new x.x.x.x.x () {

        public void x (x.x.x.x.x x) {
            x.x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditFavoritesDialog.java" startline="91" endline="95">
public void x (x.x.x.x.x x) {
    x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditFavoritesDialog.java" startline="99" endline="102">
public void x (x.x.x.x.x x) {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditFavoritesDialog.java" startline="106" endline="110">
private void x () {
    x.x (x.x ());
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditFavoritesDialog.java" startline="114" endline="117">
public void x (x x) {
    x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditFavoritesDialog.java" startline="122" endline="135">
public void x (x x) {
    int x = x.x ();
    x x = new x (x.x (literal), literal);
    x x = x.x (x);
    x x = x.x (x);
    if (x != literal) {
        x.x (x, x.x (x));
        x.x (x, x);
    }
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatisticsDialog.java" startline="27" endline="31">
public x (x x) {
    x (x.x (literal), literal);
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatisticsDialog.java" startline="33" endline="53">
@x
public void x () {
    if (x.x ()) {
        x (x ());
        if (x != literal) {
            x.x ();
            x.x ();
        }
        x.x ();
    } else {
        throw new x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatisticsDialog.java" startline="55" endline="76">
x x () {
    x x = x.x ();
    x = x.x (x.x () ? literal : literal);
    x x = x.x (literal);
    x x = new x ();
    x.x (x.x (literal)).x (x (x.x ())).x (x);
    x.x (x.x (literal)).x (x ((double) x.x () / x.x ())).x (x);
    x.x (x).x (x.x ()).x (x).x (x.x ()).x (x).x (x);
    x.x (x.x (literal)).x (x.x ()).x (x);
    x.x (x.x (literal)).x (x.x ()).x (x);
    if (x.x () > literal) x.x (x.x (literal)).x (x.x ()).x (x);

    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatisticsDialog.java" startline="82" endline="93">
static x x (double x) {
    double x = x / literal;
    double x = x / literal;
    double x = x / literal;
    x x = new x (literal);
    if (x >= literal) return x.x (x) + x.x (literal);

    if (x >= literal) return x.x (x) + x.x (literal);

    return x.x (x) + x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="43" endline="53">
static void x (x x) {
    if (x.x () <= literal) {
        throw new x (literal);
    } else if (x.x () < literal) {
        throw new x (literal);
    }

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="60" endline="66">
public x (x x, x x) {
    x.x = x;
    x.x = x;
    x.x (x.x, x);
    x.x (x.x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="68" endline="77">
public void x (x x) {
    if (x.x == x.x || (x.x () >= literal && (x.x == x.x || x.x == x.x))) {
        x.x = literal;
        x (x);
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="86" endline="91">
public x (x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="93" endline="110">
public void x (x x) {
    if (x.x == x.x && x.x != x.x) return;

    if (! x.x (x.x)) return;

    x (x);
    int x = x.x ();
    x.x (x.x ());
    x.x (x);
    x.x = x;
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="118" endline="122">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="124" endline="128">
public void x (x x) {
    x (x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="139" endline="142">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="144" endline="160">
public void x (x x) {
    if (x.x == x.x) {
        if ((x.x != literal && x.x != x.x) || x.x () < literal) return;

    } else {
        x (x);
    }
    x x = new x (x.x);
    x.x (new x [] {x.x (x.x ()).x ()}, new x [] {x.x ()});
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="167" endline="170">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="172" endline="178">
public void x (x x) {
    x (x);
    x x = new x (x.x);
    x.x (new x [] {x.x ().x ()}, new x [] {x.x ()});
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="187" endline="191">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="193" endline="220">
public void x (x x) {
    x x = (x) x.x;
    x [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        x [x].x ();
    }
    int x = literal;
    for (x x : x) {
        x x = new x (x, x.x);
        x ++;
        if (x <= literal) {
            x += literal + x;
            x.x (x.x | (literal + x));
        }
        x.x (x);
        x.x (new x (x));
        x.x (x.x, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="229" endline="233">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="235" endline="238">
public void x (x x) {
    new x (x, x).x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="249" endline="255">
public x (x x, x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/CommandsMenuActions.java" startline="257" endline="287">
public void x (x x) {
    x x = (x) x.x;
    x x = x.x ();
    int x = x.x (literal);
    if (x >= literal) {
        x = x.x (literal, x);
    }
    x x = x.x (x);
    int x = x.x ();
    if (x < literal) {
        throw new x (literal);
    }
    try {
        x.x (x.x (literal) + x);
        x.x (x, x);
        x.x (literal);
    } catch (x x) {
    } finally {
        x.x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/OpenerLauncher.java" startline="34" endline="38">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/OpenerLauncher.java" startline="40" endline="76">
public void x (x x, int x) {
    x x = x (x.x, x);
    if (x.x (literal) || x.x (literal) || x.x (literal) || x.x (literal) || x.x (literal)) {
        x.x (x);
    } else {
        try {
            if (x.x) {
                x.x (x, x.x);
            } else {
                if (x.x) {
                    x.x ().x (new x [] {literal, literal, x}, literal, x.x);
                } else {
                    x.x ().x (x (x), literal, x.x);
                }
            }
        } catch (x x) {
            throw new x (literal, x);
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/OpenerLauncher.java" startline="83" endline="112">
static x [] x (x x) {
    x x = new x (x);
    x < x > x = new x < x > ();
    while (x.x ()) {
        x x = x.x (literal);
        try {
            if (x.x (literal)) {
                x = x.x (literal) + x.x (literal);
                x.x (literal);
            } else if (x.x (literal)) {
                x = x.x (literal) + x.x (literal);
                x.x (literal);
            }

        } catch (x x) {
        }
        x.x (x);
    }
    return x.x (new x [x.x ()]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/OpenerLauncher.java" startline="120" endline="141">
x x (x x, int x) {
    x x = x.x (literal);
    x x = x.x (x);
    x x = new x (literal);
    while (x.x ()) {
        x x = x.x (literal);
        x x = x (x, x);
        if (x == literal || x instanceof x) {
            throw new x (literal, x);
        }
        x.x (x, x.x ());
    }
    x.x (x);
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/OpenerLauncher.java" startline="143" endline="161">
private x x (int x, x x) {
    int x = x.x (x);
    if (x < literal) {
        throw new x (literal, x);
    }
    x x = x.x (x).x ().x (x);
    if ((x == literal || x instanceof x) && x.x (x.x)) {
        x = x.x (x).x ().x ();
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="40" endline="43">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="45" endline="55">
public void x (x x) {
    x x = (x) x.x;
    if (x.x && x.x ().x (x.x ().x () - literal) == x) return;

    x.x ((x) x.x (), x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="64" endline="68">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="70" endline="104">
public void x (x x) {
    x x = (x) x.x;
    x x = (x) x.x ();
    x x = x.x (literal);
    x x = x.x (literal);
    x x = x.x (literal);
    if (x.x ().x () == x) {
        x.x (x.x (literal));
    } else {
        x.x (x.x (literal) + x.x ());
    }
    x.x (x.x (x.x));
    x.x (x.x () != literal && x.x (x.x));
    x.x (x.x (literal) + x.x ());
    x.x ().x ();
    x.x (x);
    x.x (x.x.x ());
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="112" endline="115">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="117" endline="136">
public void x (x x) {
    x x = (x) ((x) x.x).x ().x ();
    x x = x.x ();
    if (x.x () != x) {
        x.x (x);
        x.x (x.x);
    } else {
        x.x (x.x () == x.x ? x.x : x.x);
    }
    x.x (x.x (x), x.x () == x.x);
    ((x) x).x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="144" endline="147">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="149" endline="160">
public void x (x x) {
    x x = (x) ((x) x.x).x ().x ();
    x x = (x) x.x ();
    x.x (x);
    x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ColumnsActions.java" startline="166" endline="182">
public void x (x x) {
    x x = (x) ((x) x.x).x ().x ();
    x x = (x) x.x ();
    x x = new x (x.x ().x (), x.x | x.x);
    x.x (x.x (literal) + x.x ());
    x x = x.x ();
    if (x == literal) {
        x = x.x (literal);
    }
    x.x (x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="43" endline="48">
public x (x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="50" endline="59">
public void x (x x) {
    x.x ();
    x.x ();
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="67" endline="70">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="72" endline="75">
public void x (x x) {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="85" endline="92">
public x (x x, x x, x x, x x) {
    x.x = x;
    x.x = x;
    if (! x.x ()) x.x (x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="94" endline="97">
public void x (x x) {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="99" endline="106">
public void x (x x, x x) {
    if (x == x.x && x.x) {
        x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="117" endline="121">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="123" endline="134">
public void x (x x) {
    if (x.x (x.x)) {
        x x = (x) x.x;
        int x = x.x ();
        if (x > literal) x.x (x + x.x (literal));
        else x.x (literal);

    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="144" endline="149">
public x (x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="151" endline="165">
public void x (x x) {
    int x = x.x ();
    x.x ();
    for (int x = literal;
    x < x; x ++) {
        if (x (x.x (x).x ())) {
            x.x (x);
        }
    }
    x.x = x;
    x.x (x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="172" endline="175">
public x (x x, x x, x x) {
    x (x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="177" endline="180">
boolean x (x x) {
    return x.x () >= x.x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="185" endline="188">
public x (x x, x x, x x) {
    x (x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="190" endline="193">
boolean x (x x) {
    return x == x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="198" endline="201">
public x (x x, x x, x x) {
    x (x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="203" endline="206">
boolean x (x x) {
    return x == x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="211" endline="214">
public x (x x, x x, x x) {
    x (x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="216" endline="219">
boolean x (x x) {
    return x == x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="231" endline="235">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="237" endline="248">
public void x (x x) {
    if (x.x == x.x && x.x == literal && x.x == x.x) {
        x.x ();
        x.x = x;
        x.x (x);
        x.x = literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="256" endline="260">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ToolsActions.java" startline="262" endline="279">
public void x (x x) {
    int x = x.x ();
    x.x (literal);
    for (int x = literal;
    x < x; x ++) {
        if (x.x (x)) x.x (x);
        else x.x (x);

    }
    x.x (literal);
    x.x ();
    x.x = x;
    x.x (x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="65" endline="84">
x (x x) {
    x.x = x;
    x [x.x.x ()] = new x (x, x.x ().x (literal));
    x [x.x.x ()] = new x (x, x.x ().x (literal));
    x [x.x.x ()] = x [x.x.x ()];
    x [x.x.x ()] = x [x.x.x ()];
    x [x.x.x ()] = new x (x, x.x ().x (literal));
    x [x.x.x ()] = x [x.x.x ()];
    x [x.x.x ()] = x.x (literal);
    x [x.x.x ()] = x.x (literal);
    x [x.x.x ()] = x [x.x.x ()];
    x [x.x.x ()] = x [x.x.x ()];
    x [x.x.x ()] = x.x (literal);
    x [x.x.x ()] = x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="86" endline="106">
public x (x x, x x, x x, x x, x x, x x, x x, x x) {
    x (x.x ());
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
    x.x (x);
    x x = x.x ();
    x.x (x [x.x ()]);
    x.x (x [x.x ()]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="111" endline="114">
public void x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="119" endline="128">
public void x (x x) {
    if (x.x (x.x)) {
        if (! x ()) return;

    }
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="130" endline="148">
private final boolean x () {
    x.x ();
    if (x.x && x.x () > literal) {
        x x = new x (x.x (), x.x | x.x | x.x);
        x.x (x.x (literal));
        x.x (x.x (literal));
        if (x.x () != x.x) {
            return literal;
        }
    }
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="150" endline="208">
public void x (final x x, final x x) {
    if (x.x () || x == x.x) return;

    switch (x) {
        case x :
            x.x (literal);
            x (literal, literal, literal);
            x.x (literal);
            break;
        case x :
            x.x ();
            try {
                x = x.x (x.x (), x.x, x (x));
                x.x ();
                x = x.x ().x ();
            } catch (x x) {
                x.x ();
                throw x;
            }
            break;
        case x :
            x.x ();
            try {
                x = x.x (x.x (x.x ()), x.x, x (x));
                x.x ();
                x = x.x ().x ();
            } catch (x x) {
                x.x ();
                throw x;
            }
            break;
        case x :
            x.x ();
            break;
        case x :
            x.x (x.x (literal));
            break;
        case x :
            x.x (literal);
            x.x (x.x (literal));
            break;
    }
    x.x (x [x.x ()]);
    x.x (x [x.x ()]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="213" endline="259">
private final x x (x x) {
    if (x.x == x.x || x == x.x) {
        return new x () {

            public void x (x x) {
                x.x (x);
            }

            public void x (x x) {
                x.x (x);
            }

        }

        ;
    }
    if (x.x == x.x) {
        return new x () {

            public void x (x x) {
            }

            public void x (x x) {
                if (x.x ().x () >= x.x.x ()) x.x (x);

            }

        }

        ;
    }
    if (x.x == x.x) {
        return new x () {

            public void x (x x) {
            }

            public void x (x x) {
                if (x.x () == x.x) x.x (x);

            }

        }

        ;
    }
    throw new x (x.x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="220" endline="223">
public void x (x x) {
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="224" endline="227">
public void x (x x) {
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="234" endline="236">
public void x (x x) {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="237" endline="241">
public void x (x x) {
    if (x.x ().x () >= x.x.x ()) x.x (x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="248" endline="250">
public void x (x x) {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="251" endline="255">
public void x (x x) {
    if (x.x () == x.x) x.x (x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="261" endline="290">
public void x (final x x, final int x, final int x) {
    if (x.x ()) return;

    x.x (new x () {

        public void x () {
            if (x.x ()) return;

            if (x != literal) {
                x.x (x.x (literal) + x.x ());
            }
            x.x (x);
            x.x (x);
            if (! x.x (x.x)) x.x ().x (x + literal + x);
            else x.x ().x (x);

            x.x (x [x.x ().x ()]);
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/StartStopScanningAction.java" startline="267" endline="288">
public void x () {
    if (x.x ()) return;

    if (x != literal) {
        x.x (x.x (literal) + x.x ());
    }
    x.x (x);
    x.x (x);
    if (! x.x (x.x)) x.x ().x (x + literal + x);
    else x.x ().x (x);

    x.x (x [x.x ().x ()]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/BrowserLauncher.java" startline="25" endline="35">
public static void x (x x) {
    try {
        x.x ().x (new x (x));
    } catch (x x) {
        throw new x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="39" endline="43">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="45" endline="62">
public void x (x x) {
    x x = x.x ().x ();
    x x = new x (x.x (literal), x.x (literal));
    x x = x.x (x);
    if (x != literal) {
        if (x.x (x) != literal) {
            throw new x (literal);
        }
        x.x (x, x.x ());
        x.x.x ().x (x + literal + x.x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="71" endline="76">
public x (x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="78" endline="89">
public void x (x x) {
    x x = (x) x.x;
    x x = x.x ();
    x.x (x.x (x));
    x.x ().x (x.x (x));
    x.x.x ().x (x + literal + x.x);
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="91" endline="94">
public void x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="101" endline="104">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="106" endline="109">
public void x (x x) {
    new x (x).x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="118" endline="124">
public x (x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FavoritesMenuActions.java" startline="126" endline="147">
public void x (x x) {
    x x = (x) x.x;
    x [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        x [x].x ();
    }
    for (x x : x) {
        x x = new x (x, x.x);
        x.x (x);
        x.x (x.x (x.x));
        x.x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/TerminalLauncher.java" startline="42" endline="105">
public static void x (x x, x x) {
    try {
        if (x.x) {
            x x = x.x (literal, literal);
            x.x ();
            x x = new x (x);
            x.x (literal + literal + x);
            x.x ();
            x.x ().x (x.x (), literal, x);
        } else if (x.x) {
            x.x ().x (new x [] {literal, literal, literal + x + literal}, literal, x);
        } else {
            if (x == x) {
                x ();
            }
            switch (x) {
                case x :
                    x.x ().x (new x [] {literal, literal, literal, literal, x + literal}, literal, x);
                    break;
                case x :
                    x.x ().x (new x [] {literal, literal, literal, literal, x + literal}, literal, x);
                    break;
                case x :
                    x.x ().x (new x [] {literal, literal, literal, literal, x + literal}, literal, x);
                    break;
                default :
                    x.x ().x (new x [] {literal, literal, literal, literal, x + literal}, literal, x);
            }
        }

    } catch (x x) {
        x.x (x.x, literal, x);
        if (x != x) {
            x = x;
            x (x, x);
        } else {
            throw new x (literal, x);
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/TerminalLauncher.java" startline="107" endline="125">
private static void x () throws x, x {
    if (x.x ().x (new x [] {literal, literal}).x () == literal) {
        x = x;
    } else if (x.x ().x (new x [] {literal, literal, literal, literal, literal}).x () == literal) {
        x = x;
    } else if (x.x ().x (new x [] {literal, literal}).x () == literal) {
        x = x;
    } else {
        x = x;
    }

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FeederActions.java" startline="40" endline="45">
public x (x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FeederActions.java" startline="47" endline="50">
public void x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FeederActions.java" startline="52" endline="83">
public void x (x x) {
    x x = x.x ();
    try {
        if (x.x (x.x ().x ())) {
            x ();
        } else {
            x x = x.x (x);
            x.x (x.x ());
            x x = x.x ();
            if (! x.x ().x (x)) {
                x.x (x);
                x.x (x.x ());
            }
        }
    } catch (x x) {
        throw new x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FeederActions.java" startline="85" endline="92">
public void x (x x) {
    if (x.x == x.x) {
        x (literal);
        x.x = literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FeederActions.java" startline="97" endline="154">
private void x () {
    try {
        x x = new x (x.x ().x (), x.x);
        x x = new x () {

            public void x (x x) {
                x x = (x) x.x;
                x x = (x) x.x ();
                x.x (x.x (literal, x.x (literal)));
                x.x (x.x (x.x (literal)));
                x.x ().x ();
            }

        }

        ;
        for (x < x > x = x.x ();
        x.x ();) {
            x x = x.x ();
            for (x x : x.x ()) {
                x x = x.x ();
                if (! x.x () && x instanceof x) {
                    x x = new x (x, literal);
                    x.x (x.x () + literal + x.x ());
                    x.x (x.x () + literal + x.x ());
                    x.x (x.x, x);
                }
            }
        }
        if (x.x () > literal) {
            x.x (x.x ().x ());
            x.x (literal);
        } else {
            if (x.x () == literal) {
                x x = new x ();
                x.x = x.x (literal);
                x.x (x);
                x.x ();
            }
        }
    } catch (x x) {
        x.x (x.x, literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/FeederActions.java" startline="104" endline="112">
public void x (x x) {
    x x = (x) x.x;
    x x = (x) x.x ();
    x.x (x.x (literal, x.x (literal)));
    x.x (x.x (x.x (literal)));
    x.x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="42" endline="45">
public void x (x x) {
    x.x.x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="56" endline="63">
x (x x, x x, x x, x x, boolean x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="65" endline="127">
public void x (x x) {
    if (x.x () <= literal) {
        throw new x (literal);
    }
    if (! x.x (x.x)) {
        x x = new x (x.x (), x.x | x.x | x.x);
        x.x (x.x);
        x.x (x.x (literal));
        if (x.x () != x.x) return;

    }
    x x = new x (x.x (), x.x);
    x < x > x = new x < x > ();
    x < x > x = new x < x > ();
    x x = new x (x.x (x ? literal : literal));
    x (x, x, x);
    x.x (x.x ());
    x.x (x.x (new x [x.x ()]));
    x.x (x.x (new x [x.x ()]));
    x x = x.x ();
    if (x != literal) {
        x x = x.x (x);
        x.x (x.x (literal));
        x x = new x (x, new x (x), literal);
        x x = literal;
        if (x) {
            x = new x () {

                public boolean x (int x, x x) {
                    return x.x (x);
                }

            }

            ;
        }
        x.x (x.x (), x);
        x.x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="116" endline="119">
public boolean x (int x, x x) {
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="129" endline="141">
private final void x (x < x > x, x < x > x, x x) {
    x.x (literal);
    for (x x : x) {
        x.x (literal + x.x ());
        x.x (x.x ()).x (literal);
        x.x (x.x (x.x ()));
    }
    x.x (x.x () - literal, x.x ());
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="146" endline="149">
public x (x x, x x, x x, x x) {
    x (x, x, x, x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="154" endline="157">
public x (x x, x x, x x, x x) {
    x (x, x, x, x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="162" endline="173">
public void x (x x) {
    new x (literal) {

        public void x () {
            x.x ();
        }

    }

    .x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/ScanMenuActions.java" startline="168" endline="171">
public void x () {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="36" endline="40">
x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="42" endline="45">
protected int x (int x) {
    return x + literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="47" endline="50">
protected int x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="52" endline="78">
public final void x (x x) {
    x x = x.x ();
    int x = x.x ();
    int x = x ();
    for (int x = x (x);
    x < x && x >= literal; x = x (x)) {
        x x = x.x (x);
        if (x.x (x.x ())) {
            x.x (x);
            x.x ();
            return;
        }
    }
    if (x >= literal && x < x) {
        x.x ();
        x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="85" endline="88">
public x (x x, x x) {
    x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="90" endline="93">
protected int x (int x) {
    return x - literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="95" endline="99">
protected int x () {
    int x = x.x ();
    return x >= literal ? x : x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="104" endline="107">
public x (x x) {
    x (x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="112" endline="115">
public x (x x) {
    x (x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="120" endline="123">
public x (x x) {
    x (x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="128" endline="131">
public x (x x) {
    x (x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="136" endline="139">
public x (x x) {
    x (x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="144" endline="147">
public x (x x) {
    x (x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="157" endline="161">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="163" endline="182">
public void x (x x) {
    x x = new x (x.x (literal), x.x (literal));
    x x = x.x (x, x.x (literal));
    if (x == literal) {
        return;
    }
    x = x;
    try {
        x.x (x.x (literal));
        x (x, x.x ());
    } finally {
        x.x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/GotoMenuActions.java" startline="184" endline="220">
private final void x (x x, x x) {
    x x = x.x ();
    int x = x.x () + literal;
    int x = x.x (x, x);
    if (x >= literal) {
        x.x (x);
        x.x ();
        return;
    }
    if (x > literal) {
        x x = new x (x, x.x | x.x | x.x);
        x.x (x.x (literal));
        x.x (x.x (literal) + literal + x.x (literal));
        if (x.x () == x.x) {
            x.x ();
            x (x, x);
        }
    } else {
        x x = new x (x, x.x | x.x);
        x.x (x.x (literal));
        x.x (x.x (literal));
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="40" endline="43">
public void x (x x) {
    new x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="50" endline="53">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="55" endline="60">
public void x (x x) {
    x x = new x (x.x, x.x (literal));
    x.x (x.x ());
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="67" endline="71">
public x (x x) {
    x ();
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="73" endline="76">
public void x (x x) {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="81" endline="84">
public void x (x x) {
    x.x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="89" endline="92">
public void x (x x) {
    x.x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="97" endline="100">
public void x (x x) {
    x.x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="107" endline="110">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="112" endline="115">
public void x (final x x) {
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="117" endline="185">
public void x () {
    x.x (x.x (literal));
    x x = new x () {

        public void x () {
            x x = literal;
            x x = literal;
            int x = x.x;
            try {
                x x = new x (x.x);
                x x = x.x ();
                x = new x (new x (x.x ()));
                x x = x.x ();
                x = x.x (x.x (literal) + literal);
                if (! x.x ().x (x)) {
                    x = x.x (literal);
                    x = x.x (literal, x);
                    x = x.x (literal, x.x ());
                    x = x.x | x.x | x.x;
                } else {
                    x = x.x (literal);
                    x = x.x;
                }
            } catch (x x) {
                x = x.x (literal);
                x.x (x ().x ()).x (x.x, x, x);
            } finally {
                try {
                    if (x != literal) x.x ();

                } catch (x x) {
                }
                final x x = x;
                final int x = x;
                x.x ().x (new x () {

                    public void x () {
                        x.x (literal);
                        x x = new x (x.x (), x);
                        x.x (x.x ());
                        x.x (x);
                        if (x.x () == x.x) {
                            x.x (x.x);
                        }
                    }

                }

                );
            }
        }

    }

    new x (x).x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="123" endline="182">
public void x () {
    x x = literal;
    x x = literal;
    int x = x.x;
    try {
        x x = new x (x.x);
        x x = x.x ();
        x = new x (new x (x.x ()));
        x x = x.x ();
        x = x.x (x.x (literal) + literal);
        if (! x.x ().x (x)) {
            x = x.x (literal);
            x = x.x (literal, x);
            x = x.x (literal, x.x ());
            x = x.x | x.x | x.x;
        } else {
            x = x.x (literal);
            x = x.x;
        }
    } catch (x x) {
        x = x.x (literal);
        x.x (x ().x ()).x (x.x, x, x);
    } finally {
        try {
            if (x != literal) x.x ();

        } catch (x x) {
        }
        final x x = x;
        final int x = x;
        x.x ().x (new x () {

            public void x () {
                x.x (literal);
                x x = new x (x.x (), x);
                x.x (x.x ());
                x.x (x);
                if (x.x () == x.x) {
                    x.x (x.x);
                }
            }

        }

        );
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/actions/HelpMenuActions.java" startline="169" endline="179">
public void x () {
    x.x (literal);
    x x = new x (x.x (), x);
    x.x (x.x ());
    x.x (x);
    if (x.x () == x.x) {
        x.x (x.x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AboutDialog.java" startline="27" endline="95">
@x
protected void x () {
    x.x (x.x (literal));
    x.x (new x (literal, literal));
    x x = new x (x, x.x);
    x.x (literal, literal);
    if (x.x () != literal) {
        x.x (x.x ());
    }
    x.x ();
    int x = x.x ().x + literal;
    x x = x.x (literal);
    x = x.x (literal, x.x);
    x = x.x (literal, x.x ());
    x = x.x (literal, x.x ());
    x = x.x (literal, x.x);
    x x = new x (x, x.x);
    x.x (x);
    x.x (x, literal);
    x.x ();
    final x x = new x (x, x.x);
    x.x (new x (literal, literal, literal, literal));
    x.x (x.x ().x (x.x));
    x.x (x.x);
    x.x (x, literal + x.x ().x);
    x.x (x.x, new x () {

        public void x (x x) {
            x.x (x.x);
            x.x (new x (literal, literal, literal, literal));
        }

    }

    );
    x.x ();
    x x = x.x (literal);
    x = x.x (literal, x.x (literal) + literal + x.x (literal));
    x = x.x (literal, x.x (literal) + literal + x.x (literal) + literal + x.x (literal) + literal);
    x x = new x (x, x.x);
    x.x (x);
    x.x (x, literal + x.x ().x + x.x ().x);
    x.x ();
    x x = x ();
    x x = new x (x, x.x | x.x | x.x | x.x | x.x);
    x.x (x, x.x ().x + x.x ().x + literal, x.x ().x - x - literal, x.x ().x - x.x ().x - x.x ().x - literal);
    x.x (x.x ().x (x.x));
    x.x (literal + x.x + literal + literal + literal + literal + x.x + literal + literal + literal + literal + literal + literal + literal + literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AboutDialog.java" startline="59" endline="63">
public void x (x x) {
    x.x (x.x);
    x.x (new x (literal, literal, literal, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/GettingStartedDialog.java" startline="31" endline="83">
@x
protected void x () {
    x x = x.x ();
    x x = x != literal ? x.x () : literal;
    x = new x (x, x.x | x.x);
    x.x (x.x (literal));
    x.x (new x (literal, literal));
    x x = new x (x, x.x);
    x.x (literal, literal);
    if (x != literal) {
        x.x (x.x ());
        x.x (x.x ());
    }
    x.x ();
    int x = x.x ().x + literal;
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x ();
    x (x, x);
    x = new x (x, x.x | x.x | x.x | x.x | x.x);
    x.x (x, literal, x.x ().x - x - literal, x.x ().x - literal);
    x.x (x.x ().x (x.x));
    x.x (x.x, new x () {

        public void x (x x) {
            x.x ();
            x.x ();
        }

    }

    );
    x.x (x.x, new x () {

        public void x (x x) {
            x ++;
            x ();
        }

    }

    );
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/GettingStartedDialog.java" startline="67" endline="71">
public void x (x x) {
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/GettingStartedDialog.java" startline="75" endline="79">
public void x (x x) {
    x ++;
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/GettingStartedDialog.java" startline="85" endline="102">
void x () {
    x x = x.x (literal + x);
    x.x (x);
    try {
        x.x (literal + (x + literal));
    } catch (x x) {
        x.x (literal);
        x.x (x);
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="71" endline="135">
public x (x x, x x, x x, x x, x x, x x, x x, x x, x x, x x, x x, final x x, x.x x, x.x x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x (x);
    x (x, x);
    x (x, x, x, x, x, x);
    x (x, x, x);
    x.x (x.x ());
    x.x ();
    if (x.x) {
        x.x (literal);
    } else {
        x.x (x.x ());
    }
    if (x.x) {
        x.x ().x (new x () {

            public void x () {
                if (x.x) {
                    if (x (x.x (literal), x.x | x.x) == x.x) {
                        x.x (x.x);
                    }
                }
                if (x.x) {
                    x (x.x (literal), x.x);
                }
                x.x.x.x ();
                new x ().x ();
                x.x.x.x = literal;
            }

        }

        );
    }
    x.x (new x ());
    x.x ().x (new x () {

        public void x () {
            x.x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="103" endline="121">
public void x () {
    if (x.x) {
        if (x (x.x (literal), x.x | x.x) == x.x) {
            x.x (x.x);
        }
    }
    if (x.x) {
        x (x.x (literal), x.x);
    }
    x.x.x.x ();
    new x ().x ();
    x.x.x.x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="129" endline="133">
public void x () {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="137" endline="143">
private int x (x x, int x) {
    x x = new x (x.x.x, x.x | x);
    x.x (x.x);
    x.x (x);
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="148" endline="165">
private void x (final x x) {
    x x = new x ();
    x.x (x);
    x x = new x (x.x (), x.x ().x (literal));
    x.x (x);
    x.x (x.x, new x () {

        public void x (x x) {
            x.x (x.x (), x.x ());
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="159" endline="163">
public void x (x x) {
    x.x (x.x (), x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="170" endline="173">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="178" endline="181">
public boolean x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="186" endline="190">
private void x (x x, x x, x x) {
    x.x (x.x (new x (literal), new x (literal), new x (x, literal), new x (x.x (), - literal)));
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="192" endline="199">
private void x (x x, x x) {
    x.x = x;
    x.x (x.x (new x (literal), literal, new x (literal), literal));
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="200" endline="264">
public x (x x, x x, x x, x x, x x, x x, x x, x x, x x, x x, x x, final x x, x.x x, x.x x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x (x);
    x (x, x);
    x (x, x, x, x, x, x);
    x (x, x, x);
    x.x (x.x ());
    x.x ();
    if (x.x) {
        x.x (literal);
    } else {
        x.x (x.x ());
    }
    if (x.x) {
        x.x ().x (new x () {

            public void x () {
                if (x.x) {
                    if (x (x.x (literal), x.x | x.x) == x.x) {
                        x.x (x.x);
                    }
                }
                if (x.x) {
                    x (x.x (literal), x.x);
                }
                x.x.x.x ();
                new x ().x ();
                x.x.x.x = literal;
            }

        }

        );
    }
    x.x (new x ());
    x.x ().x (new x () {

        public void x () {
            x.x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="232" endline="250">
public void x () {
    if (x.x) {
        if (x (x.x (literal), x.x | x.x) == x.x) {
            x.x (x.x);
        }
    }
    if (x.x) {
        x (x.x (literal), x.x);
    }
    x.x.x.x ();
    new x ().x ();
    x.x.x.x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="258" endline="262">
public void x () {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="269" endline="312">
private void x (final x x, final x x, final x x, final x x, final x.x x, final x.x x) {
    x.x (x.x (new x (x), new x (literal), new x (literal), new x (x, literal, x.x)));
    x.x (x.x (literal, literal, literal));
    x x = x.x ().x () [literal];
    x = x.x ().x + literal;
    x.x = x;
    x.x ();
    x x = new x ();
    x.x (x);
    x.x (x.x);
    x.x (x.x (literal));
    x.x = x;
    x.x (x);
    x.x (x);
    x.x (new x [] {x, x});
    x = new x (x, x.x);
    x.x (x.x ().x (x.x));
    x x = new x (x, x.x);
    x.x (new x (literal, x.x ().x (literal)));
    x.x (x.x (literal));
    x.x (x.x, x);
    x = new x (x, x.x);
    x.x (x.x ().x (x.x));
    x = new x (x, x.x);
    x.x (new x (literal, x.x ().x (literal)));
    x.x (x.x (literal));
    x.x (x.x, x);
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="314" endline="331">
private void x () {
    boolean x = x.x (x.x ().x ().x - x * literal) <= literal;
    x.x (x.x (x.x, x, new x (literal), literal, new x (literal), literal));
    if (x) {
        x.x (x.x (x.x ().x, x.x ? x.x : x, new x (literal), literal, new x (x, literal), literal));
        x.x (x.x (new x (x), literal, new x (x, literal, x.x), literal));
        x.x (x.x (new x (x), literal, new x (x, literal, x.x), literal));
    } else {
        x.x (x.x (x.x ().x, x.x ? x.x : x, new x (x), literal, new x (- literal), literal));
        x.x (x.x (new x (x), literal, new x (x, literal, x.x), literal));
        x.x (x.x (new x (x), literal, new x (x, literal, x.x), literal));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="338" endline="341">
public void x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="343" endline="358">
public void x (x x) {
    x.x (x.x ());
    x x = x.x ().x ();
    x x = ((x) x.x ());
    x.x = x.x;
    x.x = x.x;
    x ();
    x.x ();
    x.x (x.x ().x () + literal + x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="363" endline="374">
public void x (final x x, x x) {
    if (x != x.x && x != x.x) return;

    boolean x = x == x.x;
    x.x (x);
    x.x (x);
    x.x (x);
    x.x (x);
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="380" endline="383">
public x (x x) {
    x (x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="385" endline="390">
@x
public int x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/MainWindow.java" startline="392" endline="396">
@x
protected void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/fetchers/PortTextFetcherPrefs.java" startline="33" endline="35">
public x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/fetchers/PortTextFetcherPrefs.java" startline="37" endline="41">
public void x (x x) {
    x.x = (x) x;
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/fetchers/PortTextFetcherPrefs.java" startline="43" endline="79">
@x
protected void x () {
    x = new x (x.x ().x (), x.x);
    x.x (x.x ());
    x.x (x.x (literal, literal, literal));
    x x = new x (x, x.x | x.x);
    x.x (x.x (literal));
    x.x (literal);
    x.x (x.x (literal, new x (literal), new x (literal), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (new x (literal), literal, literal, new x (x, literal, x.x)));
    x x = new x (x, x.x | x.x);
    x.x (x (x.x ()));
    x.x (x.x (new x (literal), new x (literal), new x (x), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (new x (literal), literal, new x (x), literal));
    x x = new x (x, x.x | x.x);
    x.x (x.x ().x ());
    x.x (x.x (new x (literal), new x (x, literal, x.x), new x (x), literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (new x (literal), literal, new x (x), literal));
    x x = new x (x, x.x | x.x);
    x.x (literal);
    x.x (x.x (new x (literal), new x (x, literal, x.x), new x (x), literal));
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/fetchers/PortTextFetcherPrefs.java" startline="84" endline="99">
private x x (x x) {
    x x = new x ();
    for (char x : x.x ()) {
        if (x == literal) x.x (literal);
        else if (x == literal) x.x (literal);
        else if (x == literal) x.x (literal);
        else x.x (x);

    }
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/fetchers/PortsFetcherPrefs.java" startline="23" endline="26">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/fetchers/PortsFetcherPrefs.java" startline="28" endline="31">
public void x (x x) {
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/fetchers/PingFetcherPrefs.java" startline="23" endline="26">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/fetchers/PingFetcherPrefs.java" startline="28" endline="31">
public void x (x x) {
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="46" endline="76">
public x (x x, x x, x x) {
    x.x = x;
    x.x = x;
    x = new x (x, x.x);
    x.x (x.x (new x (literal), new x (literal), literal, new x (literal)));
    x.x (x.x (literal, literal, literal));
    x = new x (x, x.x);
    x.x (x.x (new x (literal), new x (literal), new x (literal), new x (literal)));
    x (literal);
    x = new x (x, x.x);
    x.x (x.x (literal + x.x));
    x.x ();
    x.x (x.x (x.x ().x, x.x, new x (x), literal, new x (literal), new x (literal)));
    x.x (x.x, new x ());
    x ();
    x = new x (x, x.x);
    x (x.x (x.x, literal));
    x.x ();
    x.x (x.x (x.x ().x, x.x, new x (x), literal, new x (literal), new x (literal)));
    x (literal);
    x = new x (x, x.x);
    x.x (x.x (new x (x), new x (literal, x.x ? - literal : literal), new x (literal), new x (literal)));
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="81" endline="84">
public void x () {
    x.x (x.x (literal + x.x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="89" endline="92">
x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="97" endline="100">
public boolean x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="106" endline="114">
public void x (x x) {
    if (x == literal) {
        x = x.x (literal);
    }
    if (! x.x.x ()) x.x.x (x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="116" endline="131">
public void x (int x) {
    if (! x.x ()) {
        boolean x = x == x.x;
        if (x || x) {
            x x = x.x ().x (x ? x.x : x.x);
            x.x (x);
        }
        x = x;
        x.x (x.x (literal) + x + (x ? x.x (literal) : literal));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="133" endline="137">
public void x (int x) {
    if (! x.x ()) x.x (x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="139" endline="142">
public x x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="144" endline="148">
public void x (boolean x) {
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/StatusBar.java" startline="153" endline="175">
public void x (x x) {
    if (x.x == x.x) {
        x x = new x (x (), x.x);
        for (x x : x.x ()) {
            x x = new x (x, literal);
            x.x (x.x (literal + x));
            x.x (x);
            x.x (x.x, x);
        }
        x.x (literal);
    }
    if (x.x == x.x) {
        x.x = (x) x.x.x ();
        x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="48" endline="52">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="54" endline="150">
@x
protected void x () {
    x x = x.x ();
    x x = x != literal ? x.x () : literal;
    x = new x (x, x.x | x.x);
    x.x (x.x (literal));
    x.x (x.x (literal, literal, literal));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x | x.x | x.x);
    x = new x (x, x.x);
    x.x (x.x (literal, literal, literal, literal, new x (x, literal), new x (x, literal, x.x)));
    for (x x : x) {
        x.x (x);
    }
    x.x (x.x, new x ());
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x (x));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x (x));
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x ());
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x ());
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x, literal), literal));
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x), literal));
    x.x (x.x (new x (x), new x (x, literal, x.x), new x (x, literal), literal));
    x.x (x.x (new x (x), literal, new x (x), literal));
    x.x (x.x (new x (x, literal), literal, new x (x, literal), literal));
    x x = new x (x.x);
    x.x = literal;
    x.x = literal;
    x.x = literal;
    x.x (x);
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, literal);
    x = new x (x, x.x);
    x.x (x.x, literal);
    x.x (x.x, new x ());
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, literal);
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, literal);
    x = new x (x, x.x);
    x.x (x.x, literal);
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, new x ());
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x, literal);
    x = new x (x, x.x);
    x.x (x.x, literal);
    x.x ();
    x.x ();
    x x = x ();
    x.x (x.x (literal, x.x, literal, new x (x, literal, x.x), new x (x, literal), literal));
    x.x ();
    x.x (literal);
    x ();
    x.x (x.x, new x () {

        public void x (x x) {
            x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="145" endline="148">
public void x (x x) {
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="152" endline="160">
private void x () {
    x ();
    x.x (x.x ());
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="162" endline="172">
private void x () {
    x x = x.x ();
    if (x.x () == literal || x.x () == literal) return;

    x = x.x ();
    x x = x.x ().x () > literal ? new x (x.x ()) : literal;
    x.x (x, new x.x (x.x (), x.x (), x));
    x.x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="174" endline="187">
private void x () {
    x = x.x ();
    if (x < literal) return;

    x x = x.x (x);
    x.x (x);
    x x = x.x (x);
    x.x (x);
    x.x (x.x);
    x.x (x.x != literal ? x.x.x () : literal);
    x.x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="192" endline="205">
public void x (x x) {
    x x = new x (x.x (literal));
    for (x x : x.x ()) {
        x.x (literal).x (x.x ()).x (literal).x (x.x ()).x (literal);
    }
    x x = new x (x, x.x | x.x);
    x.x (x.x (literal));
    x.x (x.x ());
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="211" endline="217">
public void x (x x) {
    int x = x.x ();
    x.x (x.x ());
    x.x (x);
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="223" endline="245">
public void x (x x) {
    x ();
    x = x.x ();
    if (x < literal) {
        x = x.x ();
    }
    x x = x.x (literal);
    x.x (x, x);
    x.x (x);
    x.x (x);
    x.x (x);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x ();
    x.x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="251" endline="258">
public void x (x x) {
    if (x.x () == literal) return;

    x ();
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/EditOpenersDialog.java" startline="264" endline="269">
public void x (x x) {
    x x = x.x ();
    x.x (x);
    x.x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="35" endline="64">
public void x () {
    if (x == literal || x.x ()) {
        x ();
    }
    if (x.x () != literal) {
        x x = x.x ().x ();
        x x = x.x ();
        int x = x.x + (x.x - x.x) / literal;
        int x = x.x + (x.x - x.x) / literal;
        x.x (x, x);
    }
    x.x ();
    x x = x.x ();
    while (x != literal && ! x.x ()) {
        if (! x.x ()) x.x ();

    }
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="71" endline="96">
protected final void x () {
    x x = literal;
    try {
        x = x.x ().x () [literal];
    } catch (x x) {
    }
    x = new x (x, x ());
    x x = literal;
    if (x != literal) {
        x = x.x ();
    }
    if (x == literal) {
        x = new x (x.x (), x.x ().x (literal));
    }
    x.x (x);
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="101" endline="104">
protected int x () {
    return x.x | x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="112" endline="141">
protected void x (x x, x x) {
    x.x (x);
    x x = x.x ();
    x x = x.x (literal, x.x);
    x.x (x);
    if (x != literal) {
        x.x (x);
        if (x.x || x.x) {
            x x = x;
            x = x;
            x = x;
        }
        int x = x.x / literal;
        x.x (x.x - x.x - literal, x.x - x.x - literal);
        x.x (x.x - x.x * literal - literal - x, x.x - x.x - literal);
    } else {
        x.x (x.x - x.x - literal, x.x - x.x - literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="150" endline="167">
protected void x (x x, x x, x x) {
    x.x (x);
    if (x.x || x.x) {
        x x = x;
        x = x;
        x = x;
    }
    x.x ();
    x.x (x.x (x.x (literal, x.x ().x), x.x, literal, new x (x, literal, x.x), new x (x, literal), literal));
    x.x ();
    x x = x.x ();
    x.x (x.x (x.x (literal, x.x), x.x, literal, new x (x, - x.x / literal), new x (x, literal), literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="172" endline="199">
protected x x () {
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x (x, literal);
    x.x (x.x, new x () {

        public void x (x x) {
            x.x ();
            x.x ();
        }

    }

    );
    if (x.x) {
        x x = x.x ();
        x.x (x.x, x.x - x.x ().x);
        x.x (literal);
    } else {
        x.x ();
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="180" endline="184">
public void x (x x) {
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="208" endline="211">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="213" endline="239">
public void x (x x) {
    if (x.x () == literal || x.x (literal)) {
        return;
    }
    int [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        int x = x [x];
        x.x (x);
        x x = x.x (x - literal);
        x.x (x - literal, x.x (x));
        x.x (x, x);
        x.x (x - literal);
    }
    if (! x.x) {
        x.x (x [literal] - literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="247" endline="250">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/AbstractModalDialog.java" startline="252" endline="278">
public void x (x x) {
    if (x.x () == literal || x.x (x.x () - literal)) {
        return;
    }
    int [] x = x.x ();
    for (int x = x.x - literal;
    x >= literal; x --) {
        int x = x [x];
        x.x (x);
        x x = x.x (x + literal);
        x.x (x + literal, x.x (x));
        x.x (x, x);
        x.x (x + literal);
    }
    if (! x.x) {
        x.x (x [literal]);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/DetailsWindow.java" startline="37" endline="42">
public x (x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/DetailsWindow.java" startline="44" endline="48">
@x
protected int x () {
    return x.x | x.x | x.x | x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/DetailsWindow.java" startline="50" endline="87">
@x
protected void x () {
    x.x (x.x (literal));
    x.x (x.x (literal, literal, literal));
    x.x (x.x);
    x x = x.x ();
    x = new x (x, x.x);
    x.x ();
    x.x (x.x (new x (literal), new x (literal), literal, new x (literal)));
    x x = new x ();
    x.x (x);
    x.x (x);
    x x = x.x (x.x ());
    if (x != literal) {
        x.x (x);
    } else {
        x.x (literal);
    }
    x x = new x (x, x.x | x.x | x.x | x.x | x.x);
    x.x (x.x ());
    x.x (x.x ().x (x.x));
    x.x (literal);
    x.x (x.x (new x (literal), new x (literal), new x (literal), new x (x)));
    x x = new x ();
    x.x (x.x, x);
    x.x (x.x, x);
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/DetailsWindow.java" startline="93" endline="100">
public void x (x x) {
    if (x.x ().x (x)) {
        x.x (literal);
        x.x (x.x ().x (x.x));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/DetailsWindow.java" startline="102" endline="109">
public void x (x x) {
    if (x.x ().x () == literal) {
        x.x (x);
        x.x (x.x ().x (x.x));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/DetailsWindow.java" startline="111" endline="121">
public void x (x x) {
    x x = x.x ();
    if (! x.x (x)) {
        x.x (x.x ().x (), x);
        x.x (x.x (), x.x, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/DetailsWindow.java" startline="126" endline="134">
public void x (x x) {
    if (x.x == x.x) {
        x.x = x.x ();
        x.x ();
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InputDialog.java" startline="34" endline="40">
public x (x x, x x) {
    x ();
    x.x (x);
    x.x (x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InputDialog.java" startline="42" endline="78">
@x
protected void x () {
    x x = x.x ();
    x x = x != literal ? x.x () : literal;
    x = new x (x, x.x | x.x);
    x.x (x.x (literal, literal, literal));
    x = new x (x, x.x);
    x.x (x.x (new x (literal), literal, new x (literal), literal));
    x = new x (x, x.x);
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (new x.x.x.x.x () {

        public void x (x.x.x.x.x x) {
            x = x.x ();
            x.x ();
        }

    }

    );
    x.x (new x.x.x.x.x () {

        public void x (x.x.x.x.x x) {
            x = literal;
            x.x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InputDialog.java" startline="64" endline="68">
public void x (x.x.x.x.x x) {
    x = x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InputDialog.java" startline="72" endline="76">
public void x (x.x.x.x.x x) {
    x = literal;
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InputDialog.java" startline="80" endline="87">
private void x (x x) {
    x.x.x (x != literal ? x : literal);
    x.x.x (literal, - literal);
    x.x.x ();
    x.x.x (x.x (x.x (x.x.x ().x, literal), x.x, new x (literal), literal, new x (x), literal));
    x.x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InputDialog.java" startline="94" endline="105">
public x x (x x, x x) {
    x.x (x);
    x (x);
    x (x, x, x.x);
    x.x ();
    x ();
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InputDialog.java" startline="111" endline="114">
public x x (x x) {
    return x (x, x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InfoDialog.java" startline="32" endline="36">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InfoDialog.java" startline="38" endline="65">
@x
protected void x () {
    x.x (x);
    x.x (x.x (literal, literal, literal));
    x x = new x (x, x.x);
    x.x (x.x (new x (literal), literal, new x (literal), literal));
    x.x (x.x ());
    x x = new x (x, x.x);
    x x = x.x ().x ().x () [literal];
    x.x (x.x (new x (x), literal, new x (literal), literal));
    x.x (new x (literal, x.x (), x.x () + literal, x.x () | x.x));
    x.x (x);
    x x = new x (x, x.x | x.x);
    x.x (x.x ().x (x.x));
    x.x (x.x (new x (x), literal, new x (x), literal));
    x.x (x);
    x.x ();
    x x = x ();
    x x = x.x ();
    x.x (x.x (x.x, x.x, literal, new x (x, literal, x.x), new x (x), literal));
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InfoDialog.java" startline="70" endline="73">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/InfoDialog.java" startline="78" endline="81">
public void x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="78" endline="84">
public x (x x, x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="86" endline="90">
@x
public void x () {
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="96" endline="111">
public void x (int x) {
    x ();
    x ();
    x.x (x);
    if (x.x (x) == x) {
        x.x ();
    }
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="113" endline="147">
@x
protected void x () {
    x.x (x.x (literal));
    x.x (x.x (literal, literal, literal));
    x ();
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x.x (literal));
    x (x, x, x);
    x.x ();
    x.x ();
    x.x (new x () {

        public void x (x x) {
            x ();
            x.x ();
        }

    }

    );
    x.x (new x () {

        public void x (x x) {
            x.x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="134" endline="138">
public void x (x x) {
    x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="142" endline="145">
public void x (x x) {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="152" endline="179">
private void x () {
    x = new x (x, x.x);
    x ();
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x = x;
    x ();
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x = x;
    x ();
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="184" endline="257">
private void x () {
    x x = x ();
    x = new x (x, x.x);
    x.x (x);
    x x = new x ();
    x.x = literal;
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x x = new x (literal, x.x);
    x x;
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x);
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x);
    x x = new x (x, x.x);
    x.x (x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x | x.x);
    x.x (x);
    x [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        x.x (x.x (x [x]));
        x.x (x.x (x), x [x]);
    }
    x.x (literal);
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x);
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x);
    x x = new x ();
    x.x = literal;
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x x = new x (x, x.x);
    x.x (x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x.x (literal));
    x x = new x ();
    x.x = literal;
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="262" endline="314">
private void x () {
    x x = x ();
    x = new x (x, x.x);
    x.x (x);
    x x = new x ();
    x.x = literal;
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x.x (new x (literal, x.x));
    x = new x [x.x ().x];
    x x = new x (x, x.x);
    x.x (x.x (literal + literal + x.x));
    x [x.x.x ()] = x;
    x x = new x (x, x.x);
    x.x (x.x (literal + literal + x.x));
    x [x.x.x ()] = x;
    x x = new x (x, x.x);
    x.x (x.x (literal + literal + x.x));
    x [x.x.x ()] = x;
    x = new x ();
    x.x = literal;
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x x = new x ();
    x.x = literal;
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x);
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x);
    x = new x ();
    x.x = literal;
    x x = new x (x, x.x);
    x.x (x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="319" endline="375">
private void x () {
    x x = x ();
    x = new x (x, x.x);
    x.x (x);
    x x = new x ();
    x.x = literal;
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x x = new x ();
    x.x = literal;
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x);
    x x = new x ();
    x.x = literal;
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x.x (x.x, new x () {

        public void x (x x) {
            x.x (x.x ());
        }

    }

    );
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x);
    x.x (x);
    x x = new x (x.x);
    x.x = literal;
    x.x = literal;
    x.x = literal;
    x x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x);
    x = new x (x, x.x);
    x.x (x.x (literal));
    x = new x (x, x.x | x.x | x.x);
    x.x (new x (x.x, literal));
    x.x (new x ());
    x = new x (x, x.x);
    x.x (x.x (literal));
    x.x (x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="346" endline="349">
public void x (x x) {
    x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="392" endline="401">
private x x () {
    x x = new x ();
    x.x = x.x.x.x.x;
    x.x = literal;
    x.x = literal;
    x.x = literal;
    x.x = literal;
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="403" endline="430">
private void x () {
    x.x (x.x (x.x));
    x.x (x.x (x.x));
    x [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        if (x.x.x (x [x])) {
            x.x (x);
        }
    }
    x.x (x.x (x.x));
    x.x (x.x (x.x));
    x.x (x.x);
    x.x (x.x);
    x.x (x.x (x.x));
    x.x (x.x);
    x.x (x.x (x.x));
    x.x (x.x);
    x.x (x.x);
    x.x (x.x);
    x.x (x.x);
    x.x (x.x);
    x [x.x.x ()].x (literal);
    x.x (x.x);
    x.x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="432" endline="474">
private void x () {
    try {
        new x (x.x ());
    } catch (x x) {
        x.x (x);
        x.x ();
        throw new x (literal, x);
    }
    x.x = (x) x.x (x.x (x.x ()));
    if (! x.x ()) {
        x.x (x);
        x.x ();
        throw new x (literal);
    }
    x.x = x (x);
    x.x = x (x);
    x.x = x (x);
    x.x = x (x);
    x.x = x.x ();
    x.x = x.x ();
    x.x = x (x);
    x.x = x.x ();
    x.x = x (x);
    x.x = x.x ();
    x.x = x.x ();
    x.x = x.x ();
    x.x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        if (x [x].x ()) x.x = x.x () [x];

    }
    x.x = x.x ();
    x.x = x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="479" endline="490">
private static int x (x x) {
    try {
        return x.x (x.x ());
    } catch (x x) {
        x.x ();
        throw x;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="494" endline="525">
public void x (x x) {
    x x = (x) x.x ();
    if (x.x == x.x) {
        x.x ().x (x.x);
        x.x = literal;
        return;
    } else if (x.x == x.x) {
        if ((x.x & x.x) > literal) {
            x.x = literal;
        } else {
            x.x ().x (x.x);
            x.x = literal;
            return;
        }
    } else if (x.x (x.x)) {
        return;
    }

    x.x = x (x.x, x.x (), x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="527" endline="544">
boolean x (char x, x x, int x) {
    char x = literal;
    for (int x = x - literal;
    x >= literal; x --) {
        x = x.x (x);
        if (! x.x (x)) break;

    }
    boolean x = x >= literal && x <= literal;
    boolean x = x >= literal && x <= literal;
    return x && (x || x == literal || x == literal) || x && (x == literal || x == literal || x == literal) || x.x (x) && x == literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="546" endline="548">
public void x (x x) {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/gui/PreferencesDialog.java" startline="553" endline="557">
public void x (x x) {
    x.x = x.x (x.x ());
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/SequenceIterator.java" startline="21" endline="28">
public x (x < x >...x) {
    x.x = x;
    if (! x [x.x - literal].x ()) throw new x ();

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/SequenceIterator.java" startline="30" endline="34">
public boolean x () {
    return x [x.x - literal].x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/SequenceIterator.java" startline="36" endline="43">
public x x () {
    if (! x [x].x ()) x ++;

    return x [x].x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/SequenceIterator.java" startline="45" endline="48">
public void x () {
    x [x].x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/InetAddressUtils.java" startline="34" endline="52">
public static x x (x x, x x) {
    byte [] x = x.x ();
    byte [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        x [x] = (byte) (x [x] & x [x]);
    }
    try {
        return x.x (x);
    } catch (x x) {
        return literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/InetAddressUtils.java" startline="54" endline="72">
public static x x (x x, x x) {
    byte [] x = x.x ();
    byte [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        x [x] = (byte) (x [x] | ~ (x [x]));
    }
    try {
        return x.x (x);
    } catch (x x) {
        return literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/InetAddressUtils.java" startline="78" endline="90">
public static boolean x (x x, x x) {
    byte [] x = x.x ();
    byte [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        if ((x [x] & literal) > (x [x] & literal)) return literal;
        else if ((x [x] & literal) < (x [x] & literal)) break;

    }
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/InetAddressUtils.java" startline="95" endline="113">
public static x x (x x) {
    try {
        byte [] x = x.x ();
        for (int x = x.x - literal;
        x >= literal; x --) {
            if (++ x [x] != literal) break;

        }
        return x.x (x);
    } catch (x x) {
        assert literal : x;
        return literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/InetAddressUtils.java" startline="125" endline="146">
public static x x (x x) throws x {
    if (x.x (literal)) {
        int x = x.x (x.x (literal));
        byte [] x = new byte [literal];
        for (int x = literal;
        x < x.x; x ++) {
            int x = x >= literal ? literal : x;
            x -= x;
            x [x] = (byte) ((((literal << x) - literal) << (literal - x)) & literal);
        }
        return x.x (x);
    }
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/InetAddressUtils.java" startline="155" endline="161">
public static void x (byte [] x, byte [] x, byte [] x) {
    for (int x = literal;
    x < x.x; x ++) {
        x [x] = (byte) ((x [x] & ~ x [x]) | (x [x] & x [x]));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/InetAddressUtils.java" startline="167" endline="171">
public static boolean x (x x) {
    byte [] x = x.x ();
    return x [x.x - literal] == literal || x [x.x - literal] == (byte) literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/util/InetAddressUtils.java" startline="180" endline="210">
public static x x (x x) throws x {
    x x = x.x (x);
    if (x.x ()) {
        try {
            x : for (x < x > x = x.x ();
            x.x ();) {
                x x = x.x ();
                for (x < x > x = x.x ();
                x.x ();) {
                    x x = x.x ();
                    if (! x.x () && x instanceof x) {
                        x = x;
                        break x;
                    }
                }
            }
        } catch (x x) {
            x.x (x.x, literal, x);
        }
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/Main.java" startline="55" endline="116">
public static void x (x...x) {
    long x = x.x ();
    x ();
    x x;
    try {
        x.x (x.x);
        x = x.x ();
        x.x (literal + (x.x () - x));
    } catch (x x) {
        x.x (literal, literal);
        return;
    }
    x.x (x.x ());
    x x = x.x ();
    x.x (literal + (x.x () - x));
    x x = new x ();
    x.x (literal + (x.x () - x));
    x (x, x);
    x x = x.x ();
    x.x (literal + (x.x () - x));
    while (! x.x ()) {
        try {
            if (! x.x ()) x.x ();

        } catch (x x) {
            if (x instanceof x && x.x () != literal) x = x.x ();

            x x = x (x);
            x x = x.x ();
            x (x != literal ? x : x.x (), x instanceof x ? x.x : x.x, x.x (x instanceof x ? literal : literal), x);
        }
    }
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/Main.java" startline="118" endline="124">
private static void x (x x, int x, x x, x x) {
    x x = new x (x, x.x | x);
    x.x (x);
    x.x (x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/Main.java" startline="126" endline="133">
private static void x () {
    x.x (literal, literal);
    x.x (literal, literal);
    x.x (literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/Main.java" startline="135" endline="150">
private static void x (x [] x, x x) {
    if (x.x != literal) {
        x x = x.x ();
        try {
            x.x (x);
        } catch (x x) {
            x (x.x () + literal + x);
            x.x (literal);
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/Main.java" startline="155" endline="180">
private static void x (x x) {
    boolean x = ! x.x;
    try {
        x = x.class.x (literal).x (literal) != literal;
    } catch (x x) {
    }
    if (x) {
        x.x.x (x);
    } else {
        x x = new x (x.x, x.x (literal));
        x.x (x);
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/Main.java" startline="186" endline="217">
static x x (x x) {
    x x;
    try {
        if (x instanceof x) {
            x = x.x ();
        } else {
            x x = x.x ().x ();
            x x = x.x ();
            x = x.x (literal + x + (x != literal ? literal + x : literal));
        }
        if (x.x () != literal) {
            x += literal + x.x ().x ();
        }
        x.x (x.x, literal, x);
    } catch (x x) {
        x = x.x ();
        x.x (x.x, literal, x);
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/LoggerFactory.java" startline="21" endline="26">
public static x x () {
    x x = new x ();
    x x = x.x () [literal];
    return x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Labels.java" startline="41" endline="44">
private x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Labels.java" startline="46" endline="49">
public static final x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Labels.java" startline="56" endline="95">
public static void x (x x) {
    if (x != literal && x.x (x.x)) {
        return;
    }
    x = new x ();
    x.x = x;
    x x = literal;
    try {
        x = x.class.x ().x (literal);
        if (x == literal) {
            throw new x (literal, x.class.x (), literal);
        }
        x.x = new x (x);
        x.x ();
    } catch (x x) {
        throw new x (x.x (), x.class.x (), literal);
    }
    try {
        x = x.class.x ().x (literal + x.x () + literal);
        x.x = new x (x);
        x.x ();
    } catch (x x) {
        x.x = x.x;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Labels.java" startline="101" endline="105">
public x x (x x) {
    x x = x (x);
    return x ().x ().x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Labels.java" startline="111" endline="123">
public x x (x x) {
    try {
        return x.x (x);
    } catch (x x) {
        x x = x.x (x);
        x.x (literal + x);
        return x;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Labels.java" startline="128" endline="131">
public static x x (x x) {
    return x ().x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="37" endline="40">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="42" endline="45">
public void x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="47" endline="65">
public void x (x x) {
    x = x.x ();
    x = new x ();
    x = new x ();
    x < x > x = new x < x > ();
    for (int x = literal;
    x < x.x; x ++) {
        x x = new x (x);
        x.x (x);
        x.x ();
    }
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="67" endline="80">
private void x (x < x > x) {
    try {
        for (x x : x) {
            x.x ();
        }
        x.x ();
    } catch (x x) {
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="82" endline="85">
public int x () {
    return x.x * x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="87" endline="90">
public int x () {
    return (int) (x () * x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="92" endline="95">
public int x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="97" endline="100">
public int x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="112" endline="115">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ConfigDetector.java" startline="117" endline="165">
public void x () {
    for (int x = literal;
    x < x; x ++) {
        if (x != literal) x.x ();

        x x = new x ();
        try {
            x.x (x.x);
            x.x (literal);
            x.x (literal, literal);
            if (x.x () > (literal - x)) {
                x.x ();
                x.x (x, x.x);
            } else {
                x.x (new x (x.x (new byte [] {(byte) literal, (byte) literal, (byte) (x.x () * literal), (byte) (x.x () * literal)}), literal + (int) (x.x () * literal)), x.x);
            }
            x.x ();
            if (x != literal) {
                x.x ();
            }
            x (literal);
        } catch (x x) {
        } catch (x x) {
            x.x (x.x, literal + x);
        } finally {
            try {
                x.x ();
            } catch (x x) {
            }
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="44" endline="48">
x (x < x > x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="50" endline="57">
public x (x < x > x, x x, x x, x x) {
    x (x, x);
    x.x = x;
    x.x = x;
    if (x != literal) x.x (x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="59" endline="62">
public boolean x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="64" endline="67">
public boolean x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="69" endline="125">
public void x (x...x) {
    for (int x = literal;
    x < x.x; x ++) {
        x x = x [x];
        if (x.x (literal)) {
            if (x != literal) throw new x (literal);

            x = x (literal + x.x (literal));
            x = new x [x.x ().x];
            for (int x = literal;
            x < x.x; x ++) {
                x [x] = x [++ x];
                if (x [x].x (literal)) throw new x (x.x () + literal + x.x + literal);

            }
        } else if (x.x (literal)) {
            if (x != literal) throw new x (literal);

            x = x [++ x];
            if (x.x (literal)) throw new x (literal);

            x = x (x);
            x = literal;
        } else if (x.x (literal)) {
            for (char x : x.x (literal).x ()) {
                switch (x) {
                    case literal :
                        x = literal;
                        break;
                    case literal :
                        x = literal;
                        break;
                    case literal :
                        x = literal;
                        break;
                    default :
                        throw new x (literal + x);
                }
            }
        } else throw new x (literal + x);

    }
    if (x == literal) throw new x (literal);

    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="127" endline="154">
@x
public x x () {
    x x = new x ();
    x.x (literal);
    x.x (literal);
    x.x (literal);
    for (x x : x) {
        x.x (literal).x (x (x.x ()));
        for (x x : x.x ()) {
            x.x (literal).x (x.x (x)).x (literal);
        }
        x.x (literal);
    }
    x.x (literal);
    for (x x : x) {
        x.x (literal).x (x (x.x ())).x (literal).x (x.x (x.x ())).x (literal);
    }
    x.x (literal);
    x.x (literal);
    x.x (literal);
    x.x (literal);
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="156" endline="159">
private x x (x x) {
    return x.x (x.x (literal) + literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="161" endline="171">
private x x (x x) {
    for (x x : x) {
        if (x.x (x.x ())) {
            return x;
        }
    }
    throw new x (literal + x (x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="173" endline="176">
private x x (x x) {
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommandLineProcessor.java" startline="178" endline="201">
public void x (x x, x x) {
    if (x == x.x) {
        if (x != literal) x.x (x.x ());

        if (x) x.x ();

    } else if (x == x.x && x == x.x && x != literal) {
        x x = new x (x, new x (x), x);
        x.x (x, literal);
        if (x) {
            x.x.x (literal + x);
            x.x (literal);
        }
    }

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ComponentRegistry.java" startline="82" endline="223">
public x () {
    x x = new x ();
    x.x = x;
    x x = new x ();
    x x = x.x ();
    x.x (x.x ());
    x.x (x.x ());
    x.x (x.x ());
    x.x (x.x ());
    x.x (x.x ());
    x.x (x.x ());
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class, x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class, x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.x ());
    x.x (literal, x.class);
    x.x (literal, x.class, new x [] {new x (literal), new x (new x (x.x))});
    x.x (literal, x.class);
    x.x (literal, x.class, new x [] {new x (literal), new x (new x (x.x))});
    x.x (literal, x.class, new x [] {new x (literal), new x (new x (x.x))});
    x.x (literal, x.class, new x [] {new x (literal), new x (new x (x.x))});
    x.x (literal, x.class, new x [] {new x (literal)});
    x.x (x.class);
    x [] x = new x [] {new x (literal)};
    x.x (x.class, x.class, x);
    x.x (x.class, x.class, x);
    x.x (x.class, x.class, x);
    x.x (x.class);
    x.x (x.class, x.class, new x [] {new x (literal), x, new x (literal), new x (literal), new x (literal), new x (literal), x, x, x, x, x, x, x, x});
    x.x (x.class, x.class, new x [] {new x (literal), x, x, x, x, x, x, x});
    x.x (x.class, x.class, new x [] {new x (literal), x, x});
    x.x (x.class, x.class, new x [] {new x (literal), new x (literal), new x (literal), x, new x (x)});
    x.x (x.x.class, x.x.class, new x [] {new x (literal), x, x, x});
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    x.x (x.x.class);
    if (x.x) {
        try {
            x.x (x.x (literal));
        } catch (x x) {
            x.x (x ().x ()).x (literal + x);
        }
    }
    new x ().x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ComponentRegistry.java" startline="225" endline="232">
private void x () {
    if (! x) {
        x = literal;
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ComponentRegistry.java" startline="234" endline="240">
public x x () {
    x ();
    return (x) x.x (x.class);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ComponentRegistry.java" startline="242" endline="246">
public x x () {
    x ();
    return (x) x.x (x.class);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ScannerConfig.java" startline="40" endline="58">
x (x x) {
    x.x = x;
    x = x.x (literal, x.x ? literal : literal);
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x = x.x (literal, x.x && ! x.x ? literal : literal);
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x = x.x (literal, ! x.x);
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x = x.x (literal, x.x (literal));
    x = x.x (literal, x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/ScannerConfig.java" startline="63" endline="79">
public void x () {
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/OpenersConfig.java" startline="22" endline="41">
public x (x x) {
    x (x, literal);
    if (x () == literal) {
        x x = x.x ();
        if (x.x) x (x.x (literal), new x (literal, literal, literal));

        x (x.x (literal), new x (literal, literal, literal));
        x (x.x (literal), new x (literal, literal, literal));
        x (x.x (literal), new x (literal, literal, literal));
        x (x.x (literal), new x (literal, literal, literal));
        x (x.x (literal), new x ((x.x ? literal : x.x ? literal : literal) + literal, literal, literal));
        if (! x.x) x (x.x (literal), new x (literal, literal, literal));

        if (! x.x) x (x.x (literal), new x (literal, literal, literal));

        x (x.x (literal), new x (literal, literal, literal));
        x (x.x (literal), new x (literal, literal, literal));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/OpenersConfig.java" startline="43" endline="46">
x x (x x) {
    return new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/OpenersConfig.java" startline="48" endline="55">
public void x (x x, x x) {
    if (x instanceof x) x.x (x, x);
    else throw new x ();

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/OpenersConfig.java" startline="57" endline="60">
public x x (x x) {
    return (x) x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/OpenersConfig.java" startline="68" endline="82">
x (x x) {
    try {
        x [] x = x.x (literal);
        x = x [literal];
        x = x [literal].x (literal) == literal;
        x = x.x >= literal && x [literal].x () > literal ? new x (x [literal]) : literal;
    } catch (x x) {
        x.x (literal + x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/OpenersConfig.java" startline="84" endline="89">
public x (x x, boolean x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/OpenersConfig.java" startline="91" endline="94">
public x x () {
    return x + literal + (x ? literal : literal) + literal + (x != literal ? x.x () : literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="28" endline="33">
x (x x, x x) {
    x.x = x;
    x.x = x;
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="38" endline="53">
public void x () {
    if (x == literal) {
        return;
    }
    x [] x = x.x (x, literal).x (literal);
    for (int x = literal;
    x < x.x; x += literal) {
        if (x [x].x () > literal) {
            x.x (x [x], x (x [x + literal]));
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="55" endline="58">
x x (x x) {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="63" endline="75">
public void x () {
    x x = new x (literal);
    for (x.x < x, x > x : x.x ()) {
        x.x (x.x ()).x (literal).x (x.x ()).x (literal);
    }
    if (x.x () > literal) {
        x.x (x.x () - literal, x.x ());
    }
    x.x (x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="81" endline="84">
public void x (x x, x x) {
    x.x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="90" endline="94">
public x x (x x) {
    x x = x.x (x);
    return x != literal ? x.x () : literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="100" endline="103">
public x x (x x) {
    return x.x (x).x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="108" endline="111">
public x < x > x () {
    return x.x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="113" endline="116">
public int x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/NamedListConfig.java" startline="124" endline="133">
public void x (x [] x) {
    x < x, x > x = new x < x, x > ();
    for (int x = literal;
    x < x.x; x ++) {
        x.x (x [x], x.x (x [x]));
    }
    x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/GUIConfig.java" startline="43" endline="47">
x (x x) {
    x.x = x;
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/GUIConfig.java" startline="49" endline="68">
private void x () {
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x = x.x (x.x (literal, x.x.x ()));
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x = x.x (literal, literal);
    x x = x.x ().x ();
    x = new x (x.x (literal, x.x + x.x / literal - literal / literal), x.x (literal, x.x + x.x / literal - literal / literal), x.x (literal, literal), x.x (literal, literal));
    x = new x (x.x (literal, literal), x.x (literal, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/GUIConfig.java" startline="70" endline="89">
public void x () {
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x.x ());
    x.x (literal, x);
    x.x (literal, x);
    x.x (literal, x);
    if (! x) {
        x.x (literal, x.x);
        x.x (literal, x.x);
        x.x (literal, x.x);
        x.x (literal, x.x);
    }
    x.x (literal, x.x);
    x.x (literal, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/GUIConfig.java" startline="91" endline="94">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/GUIConfig.java" startline="100" endline="107">
public void x (x x, boolean x) {
    if (! x) {
        x = x;
    }
    x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/GUIConfig.java" startline="113" endline="127">
public int x (x x) {
    int x = x.x (literal + x.x (), literal);
    if (x == literal) {
        if (x instanceof x || x instanceof x) x = literal;
        else if (x instanceof x) x = literal;
        else x = literal;

    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/GUIConfig.java" startline="134" endline="137">
public void x (x x, int x) {
    x.x (literal + x.x (), x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Config.java" startline="31" endline="38">
private x () {
    x = x.x ().x (literal);
    x = new x (x);
    x = new x (x);
    x = new x (x);
    x = new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Config.java" startline="43" endline="50">
public static x x () {
    if (x == literal) {
        x = new x ();
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Config.java" startline="52" endline="58">
public void x () {
    x.x ();
    x.x ();
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Config.java" startline="60" endline="63">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Config.java" startline="68" endline="71">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Config.java" startline="76" endline="79">
x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Config.java" startline="84" endline="87">
x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Config.java" startline="92" endline="95">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommentsConfig.java" startline="21" endline="25">
public x (x x) {
    x.x = x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommentsConfig.java" startline="27" endline="30">
public x x (x x) {
    return x.x (x.x (), literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/CommentsConfig.java" startline="32" endline="38">
public void x (x x, x x) {
    if (x == literal || x.x () == literal) x.x (x.x ());
    else x.x (x.x (), x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Version.java" startline="44" endline="51">
public static x x () {
    if (x == literal) {
        x ();
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Version.java" startline="56" endline="63">
public static x x () {
    if (x == literal) {
        x ();
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Version.java" startline="65" endline="86">
private static void x () {
    x x = x.class.x ().x (x.class.x ().x (literal, literal) + literal).x ();
    if (x.x (literal)) {
        x = x.x (literal, x.x (literal));
        try {
            x x = new x (new x (x).x ());
            x x = x.x ().x ();
            x = x.x (literal);
            x = x.x (literal);
            return;
        } catch (x x) {
            x.x ().x (x.x, literal, x);
        }
    }
    x = literal;
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/Version.java" startline="88" endline="91">
public static x x () {
    return x + literal + x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/FavoritesConfig.java" startline="20" endline="23">
public x (x x) {
    x (x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/FavoritesConfig.java" startline="25" endline="34">
public void x (x x, x x) {
    x x = new x (x.x ());
    x.x (literal);
    for (x x : x.x ()) {
        x.x (x).x (literal);
    }
    x.x (x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/FavoritesConfig.java" startline="36" endline="41">
public x x (x x) {
    x x = x (x);
    int x = x.x (literal);
    return x.x (literal, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/config/FavoritesConfig.java" startline="43" endline="48">
public x [] x (x x) {
    x x = x (x);
    int x = x.x (literal);
    return x.x (x + literal).x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="44" endline="62">
public x (x [] x, x x, x x) {
    x.x = x;
    x x = new x (x);
    x.x = new x < x, x > (x.x);
    for (x x : x) {
        x.x.x (x.x (), x);
        x < ? extends x > x = x.x ();
        if (x != literal && x.x (x) == literal) x.x (x);

    }
    x.x = x.x (x.x);
    x.x = x;
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="64" endline="91">
private void x (x x) {
    x x = x.x (x, literal);
    if (x == literal) {
        x = new x < x, x > ();
        x.x (x.x, x.x (x.x));
        x.x (x.x, x.x (x.x));
        x.x (x.x, x.x (x.x));
        x.x (x.x, x.x (x.x));
    } else {
        x [] x = x.x (literal);
        x = new x < x, x > (x.x ());
        for (int x = literal;
        x < x.x; x ++) {
            x x = x.x (x [x]);
            if (x != literal) {
                x.x (x [x], x);
            }
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="93" endline="105">
private void x (x x) {
    x x = new x ();
    for (x x : x.x ()) {
        x.x (x).x (literal);
    }
    x x = x.x ();
    if (x.x (literal)) x = x.x (literal, x.x () - literal);

    x.x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="107" endline="110">
public void x (x x) {
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="112" endline="115">
public x < x > x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="117" endline="120">
public x < x > x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="122" endline="134">
public int x (x x) {
    int x = literal;
    for (x x : x.x ()) {
        if (x.x (x.x ())) {
            return x;
        }
        x ++;
    }
    return - literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="136" endline="154">
public void x (x [] x) {
    x < x, x > x = new x < x, x > ();
    for (int x = literal;
    x < x.x; x ++) {
        x.x (x [x], x.x (x [x]));
    }
    x = x;
    for (x x : x) {
        x.x (x);
    }
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherRegistryImpl.java" startline="156" endline="164">
public void x (x x) throws x {
    x < ? extends x > x = x.x ();
    if (x == literal) throw new x (literal);

    x x = (x) x.x (x);
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingFetcher.java" startline="42" endline="46">
public x (x x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingFetcher.java" startline="48" endline="51">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingFetcher.java" startline="53" endline="57">
@x
public x < ? extends x > x () {
    return x.class;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingFetcher.java" startline="59" endline="85">
protected x x (x x) {
    x x = literal;
    if (x.x (x.x)) {
        x = (x) x.x (x.x);
    } else {
        try {
            x = x.x (x, x.x);
        } catch (x x) {
            x.x (x.x, literal, x);
            x = new x (x.x ());
        }
        x.x (x.x, x);
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingFetcher.java" startline="87" endline="99">
public x x (x x) {
    x x = x (x);
    x.x (x.x () ? x.x : x.x);
    if (! x.x () && ! x.x) {
        x.x ();
    }
    return x.x () ? new x (x.x (), literal) : literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingFetcher.java" startline="101" endline="107">
public void x () {
    if (x == literal) {
        x = x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingFetcher.java" startline="109" endline="123">
public void x () {
    try {
        if (x != literal) {
            x.x ();
        }
    } catch (x x) {
        throw new x (x);
    }
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/NetBIOSInfoFetcher.java" startline="44" endline="47">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/NetBIOSInfoFetcher.java" startline="49" endline="52">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/NetBIOSInfoFetcher.java" startline="54" endline="107">
public x x (x x) {
    x x = literal;
    try {
        x = new x ();
        x.x (x.x);
        x.x (x.x (), x);
        x.x (new x (x, x.x));
        byte [] x = new byte [literal];
        x x = new x (x, x.x);
        x.x (x);
        if (x.x () < x) {
            return literal;
        }
        int x = x [x - literal] & literal;
        if (x.x () < x + x * (x - literal)) {
            return literal;
        }
        return x (x, x);
    } catch (x x) {
        return literal;
    } catch (x x) {
        return literal;
    } catch (x x) {
        x.x (x.x, literal, x);
        return literal;
    } finally {
        if (x != literal) {
            x.x ();
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/NetBIOSInfoFetcher.java" startline="109" endline="141">
static x x (byte [] x, int x) {
    x x = x (x, literal);
    x x = literal;
    for (int x = literal;
    x < x; x ++) {
        if (x (x, x) == x && (x (x, x) & x) > literal) {
            x = x (x, x);
            break;
        }
    }
    x x = literal;
    for (int x = x - literal;
    x > literal; x --) {
        if (x (x, x) == x) {
            x = x (x, x);
            break;
        }
    }
    x x = x.x (literal, x (x, x, literal), x (x, x, literal), x (x, x, literal), x (x, x, literal), x (x, x, literal), x (x, x, literal));
    return (x != literal ? x + literal : literal) + (x != literal ? x + literal : literal) + x + literal + x + literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/NetBIOSInfoFetcher.java" startline="143" endline="148">
private static x x (byte [] x, int x) {
    return new x (x, x + x * x, x).x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/NetBIOSInfoFetcher.java" startline="150" endline="153">
private static int x (byte [] x, int x, int x) {
    return x [x + x * x + x] & literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/NetBIOSInfoFetcher.java" startline="155" endline="159">
private static int x (byte [] x, int x) {
    return x [x + x * x + x + literal] & literal + (x [x + x * x + x + literal] & literal) * literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/NetBIOSInfoFetcher.java" startline="161" endline="164">
private static int x (byte [] x, int x) {
    return x [x + x * x + x] & literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortTextFetcher.java" startline="44" endline="50">
public x (x x, int x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortTextFetcher.java" startline="52" endline="108">
public x x (x x) {
    x < x > x = x.x () ? x.x () : x.x (x).x ();
    while (x.x () && ! x.x ().x ()) {
        x x = new x ();
        try {
            x.x (new x (x.x (), x.x ()), x.x ());
            x.x (literal);
            x.x (x.x * literal);
            x.x (literal, literal);
            x.x ().x (x.x ());
            x x = new x (new x (x.x ()));
            x x;
            while ((x = x.x ()) != literal) {
                x x = x.x (x);
                if (x.x ()) {
                    x.x (x.x);
                    return x.x (literal);
                }
            }
        } catch (x x) {
        } catch (x x) {
        } catch (x x) {
        } catch (x x) {
            x.x (x.x, x.x ().x (), x);
        } finally {
            try {
                x.x ();
            } catch (x x) {
            }
        }
    }
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortTextFetcher.java" startline="110" endline="114">
@x
public x < ? extends x > x () {
    return x.class;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortTextFetcher.java" startline="116" endline="119">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortTextFetcher.java" startline="121" endline="124">
public void x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortTextFetcher.java" startline="126" endline="129">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortTextFetcher.java" startline="131" endline="134">
public void x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FilteredPortsFetcher.java" startline="23" endline="26">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FilteredPortsFetcher.java" startline="28" endline="31">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FilteredPortsFetcher.java" startline="33" endline="41">
public x x (x x) {
    boolean x = x (x);
    if (! x) return x.x;

    x < x > x = x (x);
    return x.x () > literal ? new x (x, x) : literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PacketLossFetcher.java" startline="19" endline="22">
public x (x x, x x) {
    x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/LastAliveTimeFetcher.java" startline="21" endline="25">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/LastAliveTimeFetcher.java" startline="27" endline="31">
public x x (x x) {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/CommentFetcher.java" startline="22" endline="25">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/CommentFetcher.java" startline="27" endline="30">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/CommentFetcher.java" startline="32" endline="35">
public x x (x x) {
    return x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherException.java" startline="18" endline="21">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherException.java" startline="23" endline="26">
public x (x x, x x) {
    x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/FetcherException.java" startline="28" endline="31">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="46" endline="49">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="51" endline="54">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="56" endline="61">
@x
public x x () {
    int x = new x (x.x).x ();
    return x () + literal + x + (x.x ? literal : literal) + literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="63" endline="67">
@x
public x < ? extends x > x () {
    return x.class;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="75" endline="147">
@x(literal)
protected boolean x (x x) {
    x < x > x = x (x);
    if (x == literal) {
        x = new x < x > ();
        x < x > x = new x < x > ();
        x.x (x, x);
        x.x (x, x);
        int x = x.x ();
        x x = literal;
        x < x > x = x.x ();
        if (x.x && x.x ()) {
            x = new x < x > (x, x.x ());
        }
        if (! x.x ()) {
            return literal;
        }
        while (x.x () && ! x.x ().x ()) {
            x = new x ();
            int x = x.x ();
            try {
                x.x (literal);
                x.x (literal);
                x.x (new x (x.x (), x), x);
                x.x (literal, literal);
                x.x (literal);
                x.x (literal);
                if (x.x ()) {
                    x.x (x);
                }
            } catch (x x) {
                x.x (x);
            } catch (x x) {
                assert x instanceof x : x;
            } finally {
                try {
                    x.x ();
                } catch (x x) {
                }
            }
        }
    }
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="153" endline="157">
@x(literal)
protected x < x > x (x x) {
    return (x < x >) x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="163" endline="167">
@x(literal)
protected x < x > x (x x) {
    return (x < x >) x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="172" endline="185">
public x x (x x) {
    boolean x = x (x);
    if (! x) return x.x;

    x < x > x = x (x);
    boolean x = x.x () > literal;
    if (x) {
        x.x (x.x);
    }
    return x ? new x (x, x) : literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PortsFetcher.java" startline="187" endline="191">
public void x () {
    x.x = new x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/IPFetcher.java" startline="21" endline="24">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/IPFetcher.java" startline="26" endline="29">
public x x (x x) {
    return new x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/WebDetectFetcher.java" startline="19" endline="22">
public x (x x) {
    x (x, literal, literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/WebDetectFetcher.java" startline="24" endline="27">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/HTTPSenderFetcher.java" startline="19" endline="23">
public x (x x) {
    x (x, literal, literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/HTTPSenderFetcher.java" startline="25" endline="28">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/AbstractFetcher.java" startline="20" endline="23">
public x x () {
    return x.x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/AbstractFetcher.java" startline="25" endline="28">
public x x () {
    return x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/AbstractFetcher.java" startline="30" endline="40">
public x x () {
    try {
        return x.x (x () + literal);
    } catch (x x) {
        return literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/AbstractFetcher.java" startline="42" endline="46">
public x < ? extends x > x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/AbstractFetcher.java" startline="48" endline="51">
public void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/AbstractFetcher.java" startline="53" endline="56">
public void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/HostnameFetcher.java" startline="19" endline="22">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/HostnameFetcher.java" startline="24" endline="29">
public x x (x x) {
    x x = x.x ().x ();
    return x.x ().x ().x (x) ? literal : x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingTTLFetcher.java" startline="22" endline="25">
public x (x x, x x) {
    x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingTTLFetcher.java" startline="27" endline="30">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/fetchers/PingTTLFetcher.java" startline="32" endline="37">
public x x (x x) {
    x x = x (x);
    x.x (x.x () ? x.x : x.x);
    return x.x () && x.x () > literal ? new x (x.x ()) : literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/Scanner.java" startline="24" endline="27">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/Scanner.java" startline="34" endline="57">
public void x (x x, x x) {
    int x = literal;
    boolean x = literal;
    for (x x : x.x ()) {
        x x = x.x;
        if (! x.x () && ! x) {
            x = x.x (x);
            x = x.x ().x ();
            if (x == literal) x = x ? x.x : x.x;

        }
        x.x (x, x);
        x ++;
    }
    x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/Scanner.java" startline="62" endline="68">
public void x () {
    for (x x : x.x ()) {
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/Scanner.java" startline="73" endline="79">
public void x () {
    for (x x : x.x ()) {
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="51" endline="56">
public x (x x) {
    x.x = x;
    x.x = new x < x, x > ();
    x.x = x.x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="58" endline="61">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="66" endline="69">
public void x (x x, x x) {
    x.x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="75" endline="78">
public x x (x x) {
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="84" endline="87">
public boolean x (x x) {
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="92" endline="95">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="101" endline="104">
public void x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="109" endline="112">
public boolean x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="117" endline="120">
public void x () {
    x.x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="122" endline="125">
public boolean x () {
    return x != literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="130" endline="133">
public x < x > x () {
    return x == literal ? literal : x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="138" endline="143">
public void x (x x) {
    if (x == literal) x = new x < x > ();

    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="148" endline="166">
public int x () {
    if (x > literal) return x;

    x x = (x) x (x);
    if (x != literal) {
        if (x.x && x.x ()) {
            x = x.x (x.x (x.x () * literal, x.x), x.x);
            return x;
        }
    }
    return x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningSubject.java" startline="168" endline="181">
@x
public x x () {
    x x = new x (x.x ());
    if (x != literal) {
        x.x (literal);
        for (x x : x) x.x (x).x (literal);

        if (x.x (x.x () - literal) == literal) x.x (x.x () - literal);

    }
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPPinger.java" startline="35" endline="38">
public x (int x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPPinger.java" startline="40" endline="57">
private x x () throws x {
    x x = new x ();
    x.x (x.x, x.x);
    try {
        x.x (x);
        x.x (x);
    } catch (x.x.x x) {
        x.x (literal);
        x.x (x);
        x.x (x);
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPPinger.java" startline="59" endline="120">
private void x (x x, x x, int x, x x) throws x {
    x x = new x (literal);
    byte [] x = new byte [literal];
    x.x (x);
    x.x (literal);
    x.x (literal);
    x.x (x.x);
    x.x (literal);
    x.x (x () & literal);
    x.x (x);
    int x = x.x ();
    int x = x + x.x ();
    int x = x.x ();
    x.x (x.x (), x, x);
    x.x ();
    x.x (x, x, x, x);
    try {
        int x = literal;
        do {
            x.x (x, x);
            x ++;
        } while (x.x () != x.x || x.x () != (x () & literal) || x.x () != x);
        if (x.x ().x (x)) {
            long x = x.x ();
            long x = x.x (x, x);
            long x = x - x;
            x.x (x);
            x.x (x.x () & literal);
        }
    } catch (x x) {
        x.x (literal);
    } catch (x x) {
        x.x (x.x, literal, x);
    } catch (x x) {
        x.x (x.x, literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPPinger.java" startline="129" endline="156">
public x x (x x, int x) throws x {
    x x = new x (x.x ());
    x x = x ();
    try {
        for (int x = literal;
        x < x && ! x.x ().x (); x ++) {
            try {
                x (x, x.x (), x, x);
            } catch (x x) {
            }
        }
    } finally {
        x.x ();
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPPinger.java" startline="158" endline="160">
public void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/TCPPinger.java" startline="33" endline="37">
public x (int x) {
    x.x = x + x / literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/TCPPinger.java" startline="39" endline="112">
public x x (x x, int x) throws x {
    x x = new x (x.x ());
    int x = - literal;
    for (int x = literal;
    x < x && ! x.x ().x (); x ++) {
        x x = new x ();
        long x = x.x ();
        try {
            int x = x >= literal ? x : x [x % x.x];
            if (x == literal && x.x ()) {
                x = x.x ().x ();
            }
            x.x (literal);
            x.x (literal);
            x.x (new x (x.x (), x), x);
            if (x.x ()) {
                x (x, x);
                x = x;
            }
        } catch (x x) {
        } catch (x x) {
            break;
        } catch (x x) {
            x x = x.x ();
            if (x.x (literal)) {
                x (x, x);
            } else if (x.x (literal) || x.x (literal) || x.x (literal)) {
                break;
            } else {
                x.x (x.x, x.x (), x);
            }

        } finally {
            try {
                x.x ();
            } catch (x x) {
            }
        }
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/TCPPinger.java" startline="114" endline="119">
private void x (x x, long x) {
    x.x (x.x () - x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/TCPPinger.java" startline="121" endline="124">
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingerRegistryImpl.java" startline="36" endline="51">
public x (x x) {
    x.x = x;
    x = new x < x, x < ? extends x > > ();
    if (x.x && ! x.x) {
        x.x (literal, x.class);
    }
    x.x (literal, x.class);
    x.x (literal, x.class);
    x.x (literal, x.class);
    x.x (literal, x.class);
    x.x (literal, x.class);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingerRegistryImpl.java" startline="53" endline="56">
public x [] x () {
    return x.x ().x (new x [x.x ()]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingerRegistryImpl.java" startline="61" endline="64">
public x x () throws x {
    return x (x.x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingerRegistryImpl.java" startline="69" endline="87">
x x (x x, int x) throws x {
    x < ? extends x > x = x.x (x);
    x < ? extends x > x;
    try {
        x = x.x (new x [] {int.class});
        return x.x (new x [] {new x (x)});
    } catch (x x) {
        x x = x instanceof x ? x.x () : x;
        x x = literal + x;
        x.x (x.x, x, x);
        if (x instanceof x) throw (x) x;

        throw new x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingerRegistryImpl.java" startline="89" endline="109">
public boolean x () {
    if (x.x.x (literal)) {
        try {
            x x = x (x.x, literal);
            x.x (new x (x.x ()), literal);
        } catch (x x) {
            x.x (literal + x);
            x.x = x.x && ! x.x ? literal : literal;
            return literal;
        }
    }
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/UDPPinger.java" startline="34" endline="37">
public x (int x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/UDPPinger.java" startline="39" endline="85">
public x x (x x, int x) throws x {
    x x = new x (x.x ());
    x x = new x ();
    x.x (x);
    x.x (x.x (), x);
    for (int x = literal;
    x < x && ! x.x ().x (); x ++) {
        x x = new x (new byte [] {}, literal);
        long x = x.x ();
        try {
            x.x (x);
            x.x (x);
        } catch (x x) {
            x.x (x.x () - x);
        } catch (x x) {
        } catch (x x) {
            break;
        } catch (x x) {
            if (x.x ().x (literal)) {
                break;
            }
        } catch (x x) {
            x.x (x.x, x.x (), x);
        }
    }
    x.x ();
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/UDPPinger.java" startline="87" endline="90">
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="26" endline="29">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="31" endline="39">
public void x (long x) {
    x ++;
    if (x > x) x = x;

    x += x;
    x = x > literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="41" endline="44">
public int x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="46" endline="49">
public void x (int x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="51" endline="54">
public int x () {
    return (int) (x / x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="56" endline="59">
public int x () {
    return (int) x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="61" endline="64">
public int x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="69" endline="72">
public boolean x () {
    return x > literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="74" endline="78">
public void x () {
    if (x ()) x = literal;

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/PingResult.java" startline="80" endline="83">
public boolean x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/WindowsPinger.java" startline="29" endline="43">
public x (int x) {
    x.x = x;
    if (x == literal) {
        try {
            x = (x) x.x (literal, x.class);
        } catch (x x) {
            x = (x) x.x (literal, x.class);
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/WindowsPinger.java" startline="45" endline="81">
public x x (x x, int x) throws x {
    x x = new x (x.x ());
    byte [] x = new byte [literal];
    byte [] x = new byte [literal + literal];
    int x = x.x ();
    if (x < literal) {
        throw new x (literal);
    }
    try {
        for (int x = literal;
        x <= x && ! x.x ().x (); x ++) {
            if (x.x (x, x.x ().x (), x, x.x, literal, x, x.x, x) > literal) {
                int x = x [literal] + (x [literal] << literal) + (x [literal] << literal) + (x [literal] << literal);
                if (x == literal) {
                    int x = x [literal] + (x [literal] << literal) + (x [literal] << literal) + (x [literal] << literal);
                    int x = x [literal] & literal;
                    x.x (x);
                    x.x (x);
                }
            }
        }
    } finally {
        x.x (x);
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/WindowsPinger.java" startline="83" endline="86">
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/WindowsPinger.java" startline="106" endline="110">
public static void x (x [] x) throws x {
    x x = new x (literal).x (new x (x.x ()), literal);
    x.x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPSharedPinger.java" startline="48" endline="75">
public x (int x) throws x {
    x = new x ();
    x.x (x.x, x.x);
    x = new x ();
    x.x (x.x, x.x);
    x.x = x;
    try {
        x.x (x);
        x.x (x);
    } catch (x.x.x x) {
        x.x (literal);
        x.x (literal);
        x.x (x);
        x.x (x);
    }
    x = new x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPSharedPinger.java" startline="77" endline="84">
public void x () throws x {
    synchronized (x) {
        x.x ();
    }
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPSharedPinger.java" startline="86" endline="166">
public x x (x x, int x) throws x {
    x x = x.x ();
    x x = new x (x);
    x.x (x, x);
    x x = new x (literal);
    byte [] x = new byte [literal];
    x.x (x);
    x.x (literal);
    x.x (literal);
    x.x (x.x);
    x.x (literal);
    x.x (x () & literal);
    try {
        for (int x = literal;
        x <= x && ! x.x ().x (); x ++) {
            x.x (x);
            int x = x.x ();
            x = x + x.x ();
            int x = x.x ();
            x.x (x.x (), x, x);
            x.x ();
            if (x.x (x.x)) {
                x.x (literal + x + x.x);
            }
            synchronized (x) {
                x.x (x.x, x, x, x);
            }
            try {
                x.x (literal);
            } catch (x x) {
                x.x ().x ();
            }
        }
        int x = x * x;
        while (x > literal && x.x () < x) {
            if (x.x (x.x)) {
                x.x (literal + x + literal + x);
            }
            synchronized (x) {
                try {
                    x.x (x);
                } catch (x x) {
                }
            }
            x -= x;
        }
        return x;
    } finally {
        x.x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPSharedPinger.java" startline="174" endline="179">
public x () {
    x (literal);
    x (literal);
    x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/ICMPSharedPinger.java" startline="181" endline="279">
public void x () {
    x x = new x (literal);
    byte [] x = new byte [literal];
    x.x (x);
    x.x (literal);
    x.x (literal);
    x x = literal;
    try {
        x = x.x ();
    } catch (x x) {
        x.x (x.x, literal, x);
    }
    try {
        x.x (x, x);
    } catch (x x) {
        x.x (x.x, literal, x);
    }
    do {
        try {
            x.x (x, x);
            if (x.x () == x.x && x.x () == (x.x.x () & literal) && x.x () > literal) {
                long x = x.x ();
                x x = x.x (x.x ());
                if (x == literal) {
                    x.x (literal + x.x ());
                    continue;
                }
                long x = x.x (x, x);
                long x = x - x;
                if (x.x (x.x)) {
                    x.x (literal + x.x () + x.x () + literal + x);
                }
                x.x (x);
                x.x (x.x () & literal);
                synchronized (x) {
                    x.x ();
                }
            } else if (x.x () == x.x) {
            }

        } catch (x x) {
            x.x (literal);
        } catch (x x) {
            x.x (x.x, literal, x);
        } catch (x x) {
            x.x (x.x, literal, x);
        }
    } while (! x ());
    try {
        x.x ();
    } catch (x x) {
    }
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/CombinedUnprivilegedPinger.java" startline="25" endline="29">
public x (int x) {
    x = new x (x);
    x = new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/CombinedUnprivilegedPinger.java" startline="31" endline="41">
public x x (x x, int x) throws x {
    x x = x.x (x, x);
    if (! x.x ()) {
        x = x.x (x, x);
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/net/CombinedUnprivilegedPinger.java" startline="43" endline="47">
public void x () throws x {
    x.x ();
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultComparator.java" startline="19" endline="60">
@x(literal)
public int x (x x, x x) {
    x x = x.x ().x (x);
    x x = x.x ().x (x);
    if (x == literal) x = x.x;

    if (x == literal) x = x.x;

    int x;
    if (x == x) {
        x = literal;
    } else if (x.x () == x.x () && ! (x instanceof x) && x instanceof x) {
        x = ((x) x).x (x);
    } else {
        if (x instanceof x) x = ((x) x).x (x);
        else if (x instanceof x) x = - ((x) x).x (x);
        else {
            x = x.x ().x (x.x ());
        }

    }

    if (x == literal && x != literal) {
        x = ((x) x.x ().x (literal)).x (x.x ().x (literal));
    }
    return x * (x ? literal : - literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultComparator.java" startline="62" endline="69">
public void x (int x, boolean x) {
    x.x = x;
    x.x = x;
    x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScannerDispatcherThreadFactory.java" startline="27" endline="33">
public x (x x, x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScannerDispatcherThreadFactory.java" startline="35" endline="38">
public x x (x x, x x, x x) {
    return new x (x, x, x, x, x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="53" endline="56">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="58" endline="62">
public x (x x, x x) {
    x (x);
    x.x (new x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="68" endline="71">
public x < x > x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="76" endline="79">
public boolean x () {
    return ! x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="84" endline="87">
public boolean x () {
    return x != literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="92" endline="95">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="100" endline="103">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="110" endline="119">
public synchronized x x (x x) {
    x.x ++;
    x x = x.x (x);
    if (x == literal) {
        return new x (x, x.x ().x ());
    }
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="128" endline="140">
public synchronized void x (int x, x x) {
    if (x.x (x.x (), x) != literal) throw new x (x.x () + literal);

    x.x = x;
    x.x (x, x);
    if (x.x ()) x (x);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="145" endline="148">
public synchronized boolean x (x x) {
    return x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="154" endline="161">
public synchronized int x (x x) {
    if (x.x ()) x (x);

    return x.x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="166" endline="172">
public synchronized void x () {
    x.x ();
    x.x ();
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="178" endline="187">
public synchronized void x (x x) {
    x = new x < x > (x.x ());
    x.x = x.x ();
    x.x = x.x ();
    x.x = new x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="192" endline="195">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="202" endline="205">
public synchronized x < x > x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="211" endline="214">
public synchronized x x (int x) {
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="220" endline="236">
public synchronized void x (int [] x) {
    x < x > x = new x < x > (x);
    x < x, x > x = new x < x, x > (x);
    for (int x = literal;
    x < x.x (); x ++) {
        if (x.x (x, x) < literal) {
            x.x (x.x (x));
            x.x (x.x (x).x (), x.x () - literal);
        }
    }
    x = x;
    x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="243" endline="255">
public synchronized void x (int x, boolean x) {
    x.x (x, x);
    x.x (x, x);
    x = new x < x, x > (x);
    for (int x = literal;
    x < x.x (); x ++) {
        x.x (x.x (x).x (), x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="263" endline="280">
public int x (x x, int x) {
    x = x.x ();
    for (int x = x;
    x < x.x (); x ++) {
        x x = x (x);
        for (x x : x.x ()) {
            if (x != literal && x.x ().x ().x (x)) {
                return x;
            }
        }
    }
    return - literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="282" endline="293">
private void x (x x) {
    if (x.x () == x.x) {
        x.x ++;
    } else if (x.x () == x.x) {
        x.x ++;
        x.x ++;
    }

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="314" endline="320">
public long x () {
    long x = x.x;
    if (x == literal) x = x.x ();

    return x - x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="325" endline="328">
public int x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="333" endline="336">
public int x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="341" endline="344">
public int x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="349" endline="352">
public boolean x () {
    return x && ! x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResultList.java" startline="357" endline="371">
public void x (x x, x x) {
    synchronized (x.x) {
        if (x == x.x && x == x.x) {
            x.x = x.x ();
            x.x = literal;
        } else if (x == x.x) {
            x.x = literal;
        }

    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/plugins/PluginLoader.java" startline="12" endline="31">
public void x (x x) {
    x x = x.x (literal);
    if (x != literal) {
        x [] x = x.x (literal);
        for (x x : x) {
            try {
                x x = x.x (x);
                x.x (x);
            } catch (x x) {
                x.x (literal + x);
            }
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="27" endline="32">
public boolean x (x x) {
    if (x.x () <= x.x ()) return x.x () <= x.x ();

    return x.x () <= x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="51" endline="57">
x (x x, int x) {
    x.x = x;
    x = new x [x];
    x [literal] = x.x ();
    x = x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="63" endline="68">
public void x () {
    x = new x [x.x];
    x [literal] = x.x ();
    x = x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="70" endline="73">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="78" endline="81">
public boolean x () {
    return x != x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="86" endline="89">
public x < x > x () {
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="94" endline="97">
void x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="102" endline="105">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="112" endline="115">
public void x (int x, x x) {
    x [x] = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScanningResult.java" startline="124" endline="141">
public x x () {
    x x = x.x (literal);
    x x = new x (literal);
    x < ? > x = x ().x ();
    x < x > x = x.x ();
    for (int x = literal;
    x.x (); x ++) {
        x x = x.x (x).x ();
        x.x (x).x (literal);
        x x = x.x ();
        x.x (x != literal ? x : literal);
        x.x (x);
    }
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/ScanningState.java" startline="29" endline="46">
x x () {
    switch (x) {
        case x :
            return x;
        case x :
            return x;
        case x :
            return x;
        case x :
            return x;
        case x :
            return x;
        default :
            return literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="35" endline="38">
public boolean x (x x) {
    return x.x == x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="43" endline="46">
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="52" endline="63">
public void x (x x) {
    try {
        x.x ().x ();
        x.x (x);
    } finally {
        x.x ().x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="69" endline="80">
public void x (x x) {
    try {
        x.x ().x ();
        x.x (x);
    } finally {
        x.x ().x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="87" endline="94">
void x (x x, x x) {
    if (x != x) {
        x = x;
        x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="96" endline="110">
protected void x (x x) {
    try {
        x.x ().x ();
        for (x x : x) {
            x.x (x, x);
        }
    } finally {
        x.x ().x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="116" endline="123">
public void x () {
    if (x != x.x) {
        x (x.x (), x.x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="128" endline="143">
public void x () {
    if (x == x.x) {
        x (x.x, x.x);
    } else if (x == x.x) {
        x (x.x);
    } else {
        throw new x (literal + x);
    }

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="148" endline="158">
public void x () {
    if (x == x.x || x == x.x) {
        x (x.x, x.x);
    } else {
        throw new x (literal + x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="163" endline="173">
public void x () {
    if (x == x.x) {
        x (x.x, x.x);
    } else {
        throw new x (literal + x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="178" endline="188">
public void x () {
    if (x == x.x || x == x.x) {
        x (x.x, x.x);
    } else {
        throw new x (literal + x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="193" endline="197">
public void x () {
    x = x.x;
    x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/state/StateMachine.java" startline="202" endline="206">
public void x () {
    x = x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/PortIterator.java" startline="33" endline="61">
public x (x x) {
    if (x != literal && (x = x.x ()).x () > literal) {
        x [] x = x.x (literal);
        x = new int [x.x + literal];
        x = new int [x.x];
        for (int x = literal;
        x < x.x; x ++) {
            x x = x [x];
            int x = x.x (literal) + literal;
            int x = x.x (x.x (x));
            x [x] = x;
            x [x] = x == literal ? x : x.x (x.x (literal, x - literal));
            if (x <= literal || x >= literal) {
                throw new x (x + literal);
            }
        }
        x = x [literal];
        x = x.x - literal;
        x = x >= literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/PortIterator.java" startline="66" endline="69">
public boolean x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/PortIterator.java" startline="74" endline="86">
public x x () {
    int x = x ++;
    if (x > x [x]) {
        x = x < x;
        x ++;
        x = x [x];
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/PortIterator.java" startline="88" endline="99">
public int x () {
    int x = literal;
    if (x != literal) {
        for (int x = literal;
        x <= x; x ++) {
            x += x [x] - x [x] + literal;
        }
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/PortIterator.java" startline="105" endline="116">
public x x () {
    try {
        return (x) x.x ();
    } catch (x x) {
        assert literal : literal;
        return literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/PortIterator.java" startline="118" endline="121">
public void x () {
    throw new x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScannerDispatcherThread.java" startline="45" endline="75">
public x (x x, x x, x x, x x, x x, x x, x x) {
    x (x ().x ());
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = new x (x ());
    x.x = x.x (x.x, x);
    x (literal);
    x.x = x;
    x.x = x;
    x.x = x;
    try {
        x.x.x (x);
        x.x ();
    } catch (x x) {
        x.x ();
        throw x;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScannerDispatcherThread.java" startline="77" endline="157">
public void x () {
    try {
        x.x (x);
        long x = literal;
        try {
            x x = literal;
            while (x.x () && x.x (x.x)) {
                x.x (x.x);
                if ((x.x () < x.x)) {
                    x = x.x ();
                    if (x.x && x.x (x.x ())) {
                        continue;
                    }
                    x x = x.x (x.x ());
                    x.x (x);
                    x x = new x (x, x);
                    x.x (x);
                }
                long x = x.x ();
                if (x - x >= x) {
                    x = x;
                    x.x (x.x (), x.x (), x.x ());
                }
            }
        } catch (x x) {
        }
        x.x ();
        x.x ();
        try {
            while (! x.x (x, x.x)) {
                x.x (literal, x.x (), literal);
            }
        } catch (x x) {
        }
        x.x ();
        x.x ();
    } finally {
        x.x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScannerDispatcherThread.java" startline="163" endline="170">
public void x (x x, x x) {
    if (x == x.x) {
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScannerDispatcherThread.java" startline="175" endline="183">
public x x (x x) {
    x x = new x (x, x);
    x.x (literal);
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScannerDispatcherThread.java" startline="194" endline="199">
x (x x, x x) {
    x.x = x;
    x.x = x;
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/ScannerDispatcherThread.java" startline="201" endline="215">
public void x () {
    x.x ().x (x ().x () + literal + x);
    try {
        x.x (x, x);
        x.x (x);
    } finally {
        x.x ();
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/InetAddressHolder.java" startline="22" endline="26">
public x (x x) {
    x = x.x ();
    x = x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/InetAddressHolder.java" startline="28" endline="45">
public int x (x x) {
    byte [] x = x.x;
    byte [] x = x.x;
    for (int x = literal;
    x < x.x; x ++) {
        if (x [x] == x [x]) continue;
        else if ((x [x] & literal) > (x [x] & literal)) return literal;
        else return - literal;

    }
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/InetAddressHolder.java" startline="47" endline="51">
@x
public x x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/InetAddressHolder.java" startline="53" endline="57">
@x
public int x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/InetAddressHolder.java" startline="59" endline="77">
@x
public boolean x (x x) {
    if (x == x) return literal;

    if (x == literal) return literal;

    if (x () != x.x ()) return literal;

    final x x = (x) x;
    if (x == literal) {
        if (x.x != literal) return literal;

    } else if (! x.x (x.x)) return literal;

    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NotAvailable.java" startline="18" endline="18">
private x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NotAvailable.java" startline="23" endline="26">
public x x () {
    return x.x ().x ().x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NotAvailable.java" startline="28" endline="35">
@x
public int x (x x) {
    if (x == x.x) return - x;

    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/Empty.java" startline="25" endline="28">
public static void x (boolean x) {
    x.x = x ? literal : - literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/Empty.java" startline="30" endline="36">
public int x (x x) {
    if (x == x) return literal;

    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NumericRangeList.java" startline="32" endline="43">
public x (x < x > x, boolean x) {
    x.x = new int [x.x ()];
    int x = literal;
    for (x x : x) {
        x.x [x ++] = x.x ();
    }
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NumericRangeList.java" startline="48" endline="94">
public x x () {
    x x = new x ();
    int x = x.x;
    int x = literal;
    boolean x = literal;
    int x = literal;
    if (x.x > literal) {
        x = x [literal];
        x.x (x);
    }
    while (++ x < x.x) {
        int x = x [x];
        if (x && x + literal == x) {
            if (! x) {
                x = literal;
                x = x;
            }
        } else {
            if (x) {
                x.x (x + literal == x ? literal : literal).x (x);
                x = literal;
            }
            x.x (literal).x (x);
        }
        x = x;
    }
    if (x) {
        x.x (x + literal == x ? literal : literal).x (x);
    }
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NumericRangeList.java" startline="96" endline="109">
public int x (x x) {
    int x = x.x.x - x.x.x;
    if (x == literal) {
        for (int x = literal;
        x < x.x.x && x == literal; x ++) {
            x = x.x [x] - x.x [x];
        }
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NotScanned.java" startline="18" endline="18">
private x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NotScanned.java" startline="23" endline="26">
public x x () {
    return x.x ().x ().x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/NotScanned.java" startline="28" endline="35">
@x
public int x (x x) {
    if (x == x.x) return x;

    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/IntegerWithUnit.java" startline="22" endline="26">
public x (int x, x x) {
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/IntegerWithUnit.java" startline="28" endline="31">
public int x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/IntegerWithUnit.java" startline="33" endline="36">
public x x () {
    return x + x.x (literal + x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/IntegerWithUnit.java" startline="38" endline="41">
public int x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/IntegerWithUnit.java" startline="43" endline="52">
public boolean x (x x) {
    if (x == x) return literal;

    if (x == literal) return literal;

    if (x instanceof x) return x == ((x) x).x;

    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/values/IntegerWithUnit.java" startline="54" endline="61">
public int x (x x) {
    if (x == x) return literal;

    if (x == literal) return literal;

    return x == x.x ? literal : x > x.x ? literal : - literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/LibraryLoader.java" startline="23" endline="59">
public static void x (x x) {
    x x = x.x (x);
    x x = x.x (literal) + x.x (literal) + x;
    try {
        x.x (x);
    } catch (x x) {
        try {
            x x = x.class.x ().x (x);
            if (x == literal) {
                throw new x (x + literal);
            }
            byte [] x = new byte [literal];
            x x = new x (x);
            int x;
            while ((x = x.x (x)) != - literal) {
                x.x (x, literal, x);
            }
            x.x ();
            x.x ();
            new x (x).x (literal, literal);
            x.x (x);
        } catch (x x) {
            throw new x (literal + x, x);
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/UserErrorException.java" startline="21" endline="24">
public x (x x) {
    x (x.x (literal + x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/UserErrorException.java" startline="26" endline="30">
public x (x x, x x) {
    x (x);
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src/net/azib/ipscan/core/UserErrorException.java" startline="32" endline="35">
public x (x x, x x) {
    x (x.x (literal + x) + x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src-platform/mac/net/azib/ipscan/platform/mac/MacApplicationMenu.java" startline="43" endline="49">
public x (x x, x x, x x, x x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src-platform/mac/net/azib/ipscan/platform/mac/MacApplicationMenu.java" startline="51" endline="61">
public void x () {
    final x x = x.x ();
    x.x (new x () {

        public void x () {
            x (x);
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src-platform/mac/net/azib/ipscan/platform/mac/MacApplicationMenu.java" startline="56" endline="59">
public void x () {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src-platform/mac/net/azib/ipscan/platform/mac/MacApplicationMenu.java" startline="63" endline="65">
public void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src-platform/mac/net/azib/ipscan/platform/mac/MacApplicationMenu.java" startline="72" endline="164">
public void x (final x x) {
    x x = new x () {

        @x(literal)
        int x (int x, int x, int x) {
            if (x.x (x) == x.x) {
                x x = new x ();
                x.x (x, x.x, x.x, literal, x.x, literal, x);
                switch (x.x) {
                    case x :
                        x.x ();
                        return x.x;
                    case x :
                        x.x ();
                        return x.x;
                    case x :
                        x.x ();
                        return x.x;
                    case x :
                        x.x ();
                        return x.x;
                }
            }
            return x.x;
        }

    }

    ;
    final x x = new x (x, literal, literal);
    long x = x.x ();
    if (x == literal) {
        x.x ();
        return;
    }
    int [] x = new int [] {x.x, x.x};
    x.x (x.x (), (int) x, x.x / literal, x, literal, literal);
    int [] x = new int [literal];
    short [] x = new short [literal];
    if (x.x (literal, x, literal, x, x) == x.x && x [literal] != literal) {
        int x = x [literal];
        x x = x.x (literal) + literal + x.x;
        char x [] = new char [x.x ()];
        x.x (literal, x.x, x, literal);
        int x = x.x (x.x, x, x.x);
        x.x (x, x, (short) literal, literal, x);
        x.x (x);
        x.x (x, literal, (short) literal, x.x, literal);
        x.x (x, x);
        x x = x.x (literal).x (literal, literal);
        x = new char [x.x ()];
        x.x (literal, x.x, x, literal);
        x = x.x (x.x, x, x.x);
        x.x (x, x, (short) literal, literal, x);
        x.x (x);
        x.x (x, literal, (short) literal, x.x, literal);
        x x = x.x (literal).x (literal, literal);
        x = new char [x.x ()];
        x.x (literal, x.x, x, literal);
        x = x.x (x.x, x, x.x);
        x.x (x, x, (short) literal, literal, x);
        x.x (x);
        x.x (x, x);
    }
    x.x (new x () {

        public void x () {
            x.x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src-platform/mac/net/azib/ipscan/platform/mac/MacApplicationMenu.java" startline="77" endline="101">
@x(literal)
int x (int x, int x, int x) {
    if (x.x (x) == x.x) {
        x x = new x ();
        x.x (x, x.x, x.x, literal, x.x, literal, x);
        switch (x.x) {
            case x :
                x.x ();
                return x.x;
            case x :
                x.x ();
                return x.x;
            case x :
                x.x ();
                return x.x;
            case x :
                x.x ();
                return x.x;
        }
    }
    return x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/src-platform/mac/net/azib/ipscan/platform/mac/MacApplicationMenu.java" startline="159" endline="162">
public void x () {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPEchoPacket.java" startline="44" endline="47">
public x (int x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPEchoPacket.java" startline="55" endline="58">
public x (x x) {
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPEchoPacket.java" startline="61" endline="64">
public int x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPEchoPacket.java" startline="72" endline="76">
public final void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPEchoPacket.java" startline="82" endline="86">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPEchoPacket.java" startline="94" endline="98">
public final void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPEchoPacket.java" startline="104" endline="108">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="32" endline="32">
private x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="41" endline="47">
public static final int x (byte [] x, int x) {
    return (((x [x] & literal) << literal) | ((x [x + literal] & literal) << literal) | ((x [x + literal] & literal) << literal) | (x [x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="53" endline="56">
public static final int x (byte [] x) {
    return x (x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="66" endline="76">
public static final long x (byte [] x, int x) {
    return (((x [x] & literal) << literal) | ((x [x + literal] & literal) << literal) | ((x [x + literal] & literal) << literal) | ((x [x + literal] & literal) << literal) | ((x [x + literal] & literal) << literal) | ((x [x + literal] & literal) << literal) | ((x [x + literal] & literal) << literal) | (x [x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="82" endline="85">
public static final long x (byte [] x) {
    return x (x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="95" endline="105">
public static final void x (x x, byte [] x, int x) {
    x.x (x [x ++] & literal);
    x.x (literal);
    x.x (x [x ++] & literal);
    x.x (literal);
    x.x (x [x ++] & literal);
    x.x (literal);
    x.x (x [x ++] & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="111" endline="114">
public static final void x (x x, byte [] x) {
    x (x, x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="124" endline="133">
public static final void x (x x, int x) {
    x.x (literal & (x>>> literal));
    x.x (literal);
    x.x (literal & (x>>> literal));
    x.x (literal);
    x.x (literal & (x>>> literal));
    x.x (literal);
    x.x (literal & x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="144" endline="151">
public static final void x (int x, byte [] x, int x) {
    x [x] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="157" endline="160">
public static final void x (int x, byte [] x) {
    x (x, x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="170" endline="181">
public static final void x (long x, byte [] x, int x) {
    x [x] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & (x>>> literal));
    x [x + literal] = (byte) (literal & x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/OctetConverter.java" startline="187" endline="190">
public static final void x (long x, byte [] x) {
    x (x, x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="98" endline="102">
public x (int x) {
    x (x);
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="110" endline="115">
public x (x x) {
    x (x.x ());
    x (x);
    x = x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="124" endline="165">
public void x () {
    int x = x ();
    int x = x + literal;
    if (x > x) {
        x += x;
        x += x;
        x : do {
            byte x = x [x];
            switch (x) {
                case x :
                    ++ x;
                    break;
                case x :
                    break x;
                case x :
                    x [x] = x;
                    x [x + literal] = x;
                    break x;
                default :
                    x += x [x + literal];
                    break;
            }
        } while (x < x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="175" endline="187">
public final void x (x x) {
    if (x.x < x.x.x) {
        byte [] x = new byte [x.x.x];
        x.x (x, literal, x, literal, x ());
        x = x;
    }
    int x = x.x ();
    x.x (x.x, x.x (), x, x (), x);
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="193" endline="196">
public boolean x (int x) {
    return ((x [x + x] & x) == x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="203" endline="206">
public boolean x (int x) {
    return ((x [x + x] & x) != literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="214" endline="218">
public boolean x (int x) {
    int x = x [x + x] & literal;
    return ((x & x) == x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="227" endline="232">
public void x (int x) {
    int x = x [x + x] & literal;
    x |= x;
    x [x + x] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="240" endline="246">
public void x (int x) {
    int x = x [x + x] & literal;
    x |= x;
    x ^= x;
    x [x + x] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="254" endline="257">
public void x (int x) {
    x [x + x] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="260" endline="264">
public void x (byte [] x) {
    x.x (x);
    x = x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="272" endline="276">
public final void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="284" endline="288">
public final void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="294" endline="298">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="304" endline="308">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="316" endline="320">
public final void x (long x) {
    x.x ((int) (x & literal), x, x + x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="326" endline="332">
public final long x () {
    return (((x [x + x] & literal) << literal) | ((x [x + x + literal] & literal) << literal) | ((x [x + x + literal] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="340" endline="344">
public final void x (long x) {
    x.x ((int) (x & literal), x, x + x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="350" endline="356">
public final long x () {
    return (((x [x + x] & literal) << literal) | ((x [x + x + literal] & literal) << literal) | ((x [x + x + literal] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="359" endline="363">
public void x (int x) {
    x.x (x);
    x = x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="371" endline="375">
public final void x (int x) {
    x [x + x] &= literal;
    x [x + x] |= ((x << literal) & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="381" endline="384">
public final int x () {
    return (x [x + x] & literal)>> literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="390" endline="393">
public final int x () {
    return x () << literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="401" endline="405">
public final void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="411" endline="415">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="423" endline="427">
public final void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="433" endline="437">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="443" endline="447">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="454" endline="457">
public final int x () {
    return x () - x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="463" endline="466">
public final int x () {
    return x + x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="474" endline="480">
public final void x (int x) {
    if (x < literal) x = literal;

    x (x () + x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="483" endline="486">
public final int x () {
    return x () - x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="489" endline="504">
private final int x () {
    int x = ((x [x] & literal) << literal) | (x [x + literal] & literal);
    int x = ((x [x + literal] & literal) << literal) | (x [x + literal] & literal);
    int x = ((x [x] & literal) << literal) | (x [x + literal] & literal);
    int x = ((x [x + literal] & literal) << literal) | (x [x + literal] & literal);
    return x + x + x + x + x () + x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="516" endline="521">
public final int x (boolean x) {
    return x (x, x + x, x (), x (), x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/TCPPacket.java" startline="529" endline="532">
public final int x () {
    return x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="56" endline="60">
public x (int x) {
    x (x);
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="68" endline="73">
public x (x x) {
    x (x.x ());
    x (x);
    x = x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="83" endline="95">
public final void x (x x) {
    if (x.x < x.x.x) {
        byte [] x = new byte [x.x.x];
        x.x (x, literal, x, literal, x ());
        x = x;
    }
    int x = x.x ();
    x.x (x.x, x.x (), x, x (), x);
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="98" endline="102">
public void x (byte [] x) {
    x.x (x);
    x = x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="110" endline="114">
public final void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="122" endline="126">
public final void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="132" endline="136">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="142" endline="146">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="149" endline="153">
public void x (int x) {
    x.x (x);
    x = x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="161" endline="165">
public void x (int x) {
    x [x + x] = (byte) ((x>> literal) & literal);
    x [x + x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="171" endline="175">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="181" endline="185">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="194" endline="197">
public final int x () {
    return x () - x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="203" endline="206">
public final int x () {
    return x + x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="214" endline="220">
public final void x (int x) {
    if (x < literal) x = literal;

    x (x () + x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="223" endline="226">
public final int x () {
    return x () - x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="229" endline="244">
private final int x () {
    int x = ((x [x] & literal) << literal) | (x [x + literal] & literal);
    int x = ((x [x + literal] & literal) << literal) | (x [x + literal] & literal);
    int x = ((x [x] & literal) << literal) | (x [x + literal] & literal);
    int x = ((x [x + literal] & literal) << literal) | (x [x + literal] & literal);
    return x + x + x + x + x () + x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="256" endline="261">
public final int x (boolean x) {
    return x (x, x + x, x (), x (), x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/UDPPacket.java" startline="269" endline="272">
public final int x () {
    return x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="66" endline="70">
public x (int x) {
    x (x);
    x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="78" endline="83">
public x (x x) {
    x (x.x ());
    x (x);
    x = x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="90" endline="94">
public void x (int x) {
    x.x (x);
    x = x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="100" endline="103">
public final int x () {
    return x + x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="111" endline="117">
public final void x (int x) {
    if (x < literal) x = literal;

    x (x () + x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="123" endline="126">
public final int x () {
    return x () - x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="133" endline="136">
public final int x () {
    return x () - x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="146" endline="158">
public final void x (x x) {
    if (x.x < x.x.x) {
        byte [] x = new byte [x.x.x];
        x.x (x, literal, x, literal, x ());
        x = x;
    }
    int x = x.x ();
    x.x (x.x, x.x (), x, x (), x);
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="161" endline="165">
public void x (byte [] x) {
    x.x (x);
    x = x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="173" endline="176">
public final void x (int x) {
    x [x + x] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="182" endline="185">
public final int x () {
    return (x [x + x] & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="193" endline="196">
public final void x (int x) {
    x [x + x] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="202" endline="205">
public final int x () {
    return (x [x + x] & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="211" endline="215">
public final int x () {
    return (((x [x + x] & literal) << literal) | (x [x + x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="227" endline="231">
public final int x (boolean x) {
    return x (x, x + x, x (), literal, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/ICMPPacket.java" startline="239" endline="242">
public final int x () {
    return x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="92" endline="95">
public x (int x) {
    x (new byte [x]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="101" endline="104">
public int x () {
    return x.x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="117" endline="120">
public void x (byte [] x) {
    x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="129" endline="132">
public void x (byte [] x) {
    x.x (x, literal, x, literal, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="142" endline="147">
public final void x (x x) {
    if (x.x != x.x ()) x (new byte [x.x ()]);

    x.x (x.x, literal, x, literal, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="155" endline="159">
public final void x (int x) {
    x [literal] &= literal;
    x [literal] |= ((x << literal) & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="167" endline="170">
public final int x () {
    return ((x [literal] & literal)>> literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="180" endline="185">
public void x (int x) {
    x [literal] &= literal;
    x [literal] |= (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="191" endline="194">
public final int x () {
    return (x [literal] & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="200" endline="203">
public final int x () {
    return x () << literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="213" endline="216">
public final void x (int x) {
    x [x] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="224" endline="227">
public final int x () {
    return (x [x] & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="235" endline="239">
public final void x (int x) {
    x [x] = (byte) ((x>> literal) & literal);
    x [x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="245" endline="249">
public final int x () {
    return (((x [x] & literal) << literal) | (x [x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="257" endline="261">
public void x (int x) {
    x [x] = (byte) ((x>> literal) & literal);
    x [x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="269" endline="273">
public final int x () {
    return (((x [x] & literal) << literal) | (x [x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="283" endline="287">
public final void x (int x) {
    x [x] &= literal;
    x [x] |= ((x << literal) & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="295" endline="298">
public final int x () {
    return ((x [x] & literal)>> literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="307" endline="312">
public void x (int x) {
    x [x] &= literal;
    x [x] |= ((x>> literal) & literal);
    x [x + literal] = (byte) (x & literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="320" endline="324">
public final int x () {
    return (((x [x] & literal) << literal) | (x [x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="332" endline="335">
public final void x (int x) {
    x [x] = (byte) x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="341" endline="344">
public final int x () {
    return x [x];
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="352" endline="355">
public final void x (int x) {
    x [x] = (byte) x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="361" endline="364">
public final int x () {
    return x [x];
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="372" endline="411">
protected int x (int x, int x, int x, int x, boolean x) {
    int x = literal;
    int x = x;
    int x = x;
    while (x < x) x += (((x [x ++] & literal) << literal) | (x [x ++] & literal));

    x = x + literal;
    x = x - (x % literal);
    while (x < x) x += (((x [x ++] & literal) << literal) | (x [x ++] & literal));

    if (x < x) x += ((x [x] & literal) << literal);

    x += x;
    while ((x & literal) != literal) x = (x & literal) + (x>>> literal);

    x = (~ x & literal);
    if (x) {
        x [x] = (byte) (x>> literal);
        x [x + literal] = (byte) (x & literal);
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="423" endline="427">
public final int x (boolean x) {
    return x (literal, x, x (), literal, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="435" endline="438">
public final int x () {
    return x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="444" endline="448">
public final int x () {
    return (((x [x] & literal) << literal) | (x [x + literal] & literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="457" endline="462">
public final void x (byte [] x) {
    x.x (x, x, x, literal, (x.x < x ? x.x : x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="471" endline="476">
public final void x (byte [] x) {
    x.x (x, x, x, literal, (x.x < x ? x.x : x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="484" endline="487">
public final void x (x x) {
    x.x (x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="495" endline="498">
public final void x (x x) {
    x.x (x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="506" endline="509">
public final void x (int x) {
    x.x (x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="517" endline="520">
public final void x (int x) {
    x.x (x, x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="526" endline="529">
public final int x () {
    return x.x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="535" endline="538">
public final int x () {
    return x.x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="544" endline="550">
public final x x () throws x {
    byte [] x = new byte [literal];
    x (x);
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/vserv-tcpip/src/java/org/savarese/vserv/tcpip/IPPacket.java" startline="557" endline="563">
public final x x () throws x {
    byte [] x = new byte [literal];
    x (x);
    return x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="91" endline="94">
public void x () {
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="110" endline="113">
x () {
    x = x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="115" endline="123">
void x (int x) {
    x = x / literal;
    if (x > literal) x -= (x * literal);

    x = x * literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="125" endline="128">
int x () {
    return (x * literal + x / literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="130" endline="133">
boolean x () {
    return (x == literal && x == literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="148" endline="161">
public x () {
    x = x;
    x = x;
    x = new x ();
    x = new x ();
    x x = x.x (literal);
    if (x != literal && x.x (literal)) x (literal);
    else x (literal);

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="168" endline="171">
public boolean x () {
    return (x > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="184" endline="189">
private static x x () {
    x x = new x ();
    x (x);
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="191" endline="194">
private static void x () throws x {
    throw new x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="196" endline="199">
private static void x () throws x {
    throw new x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="201" endline="205">
private static void x () throws x {
    throw new x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="237" endline="251">
public void x (int x, int x) throws x, x {
    if (x ()) throw new x ();

    x = x (x, x);
    if (x < literal) {
        x = x;
        x ();
    }
    x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="260" endline="268">
public void x () throws x {
    int x = x (x);
    x = x;
    x = x;
    if (x != literal) x ();

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="293" endline="299">
public void x (boolean x) throws x {
    int x = x (x, x);
    if (x < literal) x ();

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="308" endline="316">
public boolean x () throws x {
    int x = x (x);
    if (x < literal) x ();

    return (x > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="327" endline="333">
public void x (int x) throws x {
    int x = x (x, x);
    if (x < literal) x ();

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="344" endline="352">
public int x () throws x {
    int x = x (x);
    if (x < literal) x ();

    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="363" endline="369">
public void x (int x) throws x {
    int x = x (x, x);
    if (x < literal) x ();

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="380" endline="388">
public int x () throws x {
    int x = x (x);
    if (x < literal) x ();

    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="413" endline="416">
public void x (boolean x) {
    x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="429" endline="432">
public boolean x () {
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="444" endline="456">
public void x (int x) throws x {
    x.x (x);
    if (! x ()) {
        int x = x (x, x);
        if (x < literal) x ();

    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="467" endline="482">
public int x () throws x {
    int x;
    if (x ()) x = x.x ();
    else {
        x = x (x);
        if (x < literal) x ();

    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="494" endline="506">
public void x (int x) throws x {
    x.x (x);
    if (! x ()) {
        int x = x (x, x);
        if (x < literal) x ();

    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="517" endline="532">
public int x () throws x {
    int x;
    if (x ()) x = x.x ();
    else {
        x = x (x);
        if (x < literal) x ();

    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="554" endline="585">
public int x (x x, byte [] x, int x, int x) throws x, x, x {
    if (x < literal || x < literal || x > x.x - x) throw new x (literal);

    int x = literal;
    if (x () && ! x.x ()) x = x (x, literal, x.x, x.x);

    if (x == literal) x = x (x, x, x, x, x, x.x ());

    if (x < literal) {
        if (x ()) x ();
        else x ();

    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="589" endline="593">
public int x (x x, byte [] x) throws x, x {
    return x (x, x, literal, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="616" endline="642">
public int x (x x, byte [] x, int x, int x) throws x, x, x {
    if (x < literal || x < literal || x > x.x - x) throw new x (literal);

    int x = literal;
    if (x () && ! x.x ()) x = x (x, literal, x.x, x.x);

    if (x == literal) x = x (x, x, x, x, x, x.x ());

    if (x < literal) {
        if (x ()) x ();
        else x ();

    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/ext/rocksaw/src/java/org/savarese/rocksaw/net/RawSocket.java" startline="646" endline="650">
public int x (x x, byte [] x) throws x, x {
    return x (x, x, literal, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="36" endline="41">
@x
public void x () throws x {
    x = new x ();
    x = x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="43" endline="47">
@x
public void x () {
    x (x.x (x.x ()));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="49" endline="53">
@x
public void x () {
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="55" endline="84">
@x
public void x () throws x {
    final boolean x [] = new boolean [] {literal, literal};
    x x = x ();
    x x = new x () {

        public void x (int x) throws x {
        }

        public void x () throws x {
            x [literal] = literal;
        }

        public void x () {
            x [literal] = literal;
        }

    }

    ;
    x.x (x, literal);
    x.x (new x [] {x.x (literal), x.x (literal)});
    x.x (new x [] {literal, literal});
    x.x ();
    x (x [literal]);
    x (x [literal]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="62" endline="64">
public void x (int x) throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="65" endline="68">
public void x () throws x {
    x [literal] = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="69" endline="72">
public void x () {
    x [literal] = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="86" endline="101">
@x
public void x () throws x {
    x.x (x, literal);
    x.x (new x [] {literal, literal, literal});
    x.x (new x [] {x.x ().x (), literal, new x (literal)});
    x.x (new x [] {x.x ().x (), literal, new x (- literal)});
    x.x ();
    x (x.x ().x ());
    x (literal);
    x (literal);
    x (literal);
    x (literal);
    x (literal);
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="103" endline="112">
@x
public void x () throws x {
    x.x (x, literal);
    x.x (new x [] {literal, literal, literal});
    x.x ();
    x (literal);
    x (literal);
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="114" endline="124">
@x
public void x () throws x {
    x.x (literal);
    x.x (x, literal);
    x.x (new x [] {literal, literal, literal});
    x.x ();
    x (literal);
    x (literal);
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="126" endline="131">
@x
public void x () throws x {
    x x = (x) x.x ();
    x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="133" endline="140">
@x
public void x () throws x {
    x.x (x, literal);
    x.x (new x [] {x.x (x.x), literal, x.x (x.x)});
    x.x (new x [] {x.x (), literal, literal});
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="142" endline="155">
protected void x (x x, boolean x) throws x {
    if (x == literal) {
        x.x ();
        x = new x (x.x ());
    }
    if (! ((x.x (x) >= literal) ^ (! x))) {
        throw new x (literal, x, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="157" endline="160">
protected void x (x x) throws x {
    x (x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/AbstractExporterTestCase.java" startline="162" endline="165">
protected void x (x x) throws x {
    x (x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/IPListExporterTest.java" startline="30" endline="35">
@x
public void x () throws x {
    x.x (x.x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/IPListExporterTest.java" startline="37" endline="40">
protected x x () {
    return new x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/IPListExporterTest.java" startline="42" endline="58">
@x
public void x () throws x {
    x x = x.x ();
    x.x (x, literal);
    x.x (new x [] {literal, x.x (x.x), literal, x.x (x.x)});
    x.x (new x [] {literal, literal, literal, new x (x.x (literal, literal, literal, literal, literal, literal), literal)});
    x.x ();
    x (literal);
    x (literal);
    x (literal);
    x (literal);
    x (literal);
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/IPListExporterTest.java" startline="60" endline="64">
@x
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/IPListExporterTest.java" startline="66" endline="70">
@x
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/IPListExporterTest.java" startline="72" endline="82">
@x
public void x () throws x {
    x x = x.x ();
    x.x (x, literal);
    x.x (new x [] {x.x (x.x), literal, x.x (x.x)});
    x.x (new x [] {x.x (), literal, literal});
    x.x (new x [] {x.x (), literal, x.x});
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/IPListExporterTest.java" startline="84" endline="102">
@x
public void x () {
    x x = x.x ();
    x (literal, x.x (x.x, new x [] {x.x (x.x)}));
    x (literal, x.x (x.x, new x [] {literal, literal, literal, x.x (x.x)}));
    x (literal, x.x (x.x, new x [] {x.x (x.x) + literal, x.x (x.x), literal}));
    try {
        x.x (x.x, new x [] {literal, literal});
        x ();
    } catch (x x) {
        x (literal, x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExporterRegistryTest.java" startline="22" endline="31">
@x
public void x () {
    for (x < ? > x = x.x ();
    x.x ();) {
        x x = (x) x.x ();
        x (x);
        x (x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExporterRegistryTest.java" startline="33" endline="43">
@x
public void x () {
    x x;
    x = x.x (literal + new x ().x ());
    x (x instanceof x);
    x = x.x (literal + new x ().x ());
    x (x instanceof x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExporterRegistryTest.java" startline="45" endline="67">
@x
public void x () {
    try {
        x.x (literal);
        x ();
    } catch (x x) {
        x (literal, x.x ());
    }
    try {
        x.x (literal);
        x ();
    } catch (x x) {
        x (literal, x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/TXTExporterTest.java" startline="22" endline="25">
protected x x () {
    return new x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/TXTExporterTest.java" startline="27" endline="35">
@x
public void x () {
    x (literal, ((x) x).x (literal, literal));
    x (literal, ((x) x).x (literal, literal));
    x (literal, ((x) x).x (literal, literal));
    x (literal, ((x) x).x (literal, literal));
    x (literal, ((x) x).x (new x (literal), literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/TXTExporterTest.java" startline="37" endline="44">
@x
public void x () throws x {
    x.x (x, literal);
    x.x ();
    x (x.x);
    x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/TXTExporterTest.java" startline="46" endline="54">
@x
public void x () throws x {
    x.x (literal);
    x.x (x, literal);
    x.x ();
    x (x.x);
    x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/TXTExporterTest.java" startline="56" endline="61">
@x
public void x () throws x {
    x.x ();
    x (((x) x).x != literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/TXTExporterTest.java" startline="63" endline="68">
@x
public void x () throws x {
    x.x ();
    x (((x) x).x != literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/TXTExporterTest.java" startline="70" endline="76">
@x
public void x () throws x {
    x.x (x, literal);
    x.x ();
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExportProcessorTest.java" startline="39" endline="45">
@x
public void x () {
    x = x (x.class);
    x (x.x ()).x (x.< x > x (new x ()));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExportProcessorTest.java" startline="47" endline="64">
@x
public void x () throws x {
    x x = x.x (literal, literal);
    x x = new x (new x (), x, literal);
    x x = new x (x);
    x.x (x (literal));
    x.x (literal, x.x (x.x (literal)));
    x.x (x, literal);
    x x = x (x);
    x (x.x (literal) > literal);
    x (x.x (new x ().x ()) > literal);
    x (x.x (literal) < literal);
    x (x.x (literal) > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExportProcessorTest.java" startline="66" endline="94">
@x
public void x () throws x {
    x x = x.x (literal, literal);
    x x = new x (new x (), x, literal);
    x x = new x (x);
    x.x (x (literal));
    x.x (literal, x.x (x.x (literal)));
    x.x (literal, x.x (x.x (literal)));
    x.x (literal, x.x (x.x (literal)));
    x.x (x, new x () {

        public boolean x (int x, x x) {
            return ((x) x.x ().x (literal)).x (literal);
        }

    }

    );
    x x = x (x);
    x (x.x (literal) > literal);
    x (x.x (literal) > literal);
    x (x.x (literal) < literal);
    x (x.x (literal) > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExportProcessorTest.java" startline="81" endline="85">
public boolean x (int x, x x) {
    return ((x) x.x ().x (literal)).x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExportProcessorTest.java" startline="96" endline="102">
private x x (x x) {
    x x = x (x.class);
    x (x.x ()).x (x);
    x (x.x ()).x (literal);
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/ExportProcessorTest.java" startline="104" endline="115">
private x x (x x) throws x, x {
    x x = new x ();
    x x = new x (new x (x));
    x x;
    while ((x = x.x ()) != literal) {
        x.x (x);
    }
    x.x ();
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/CSVExporterTest.java" startline="21" endline="24">
protected x x () {
    return new x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/CSVExporterTest.java" startline="26" endline="34">
@x
public void x () {
    x (literal, ((x) x).x (literal));
    x (literal, ((x) x).x (literal));
    x (literal, ((x) x).x (literal));
    x (literal, ((x) x).x (literal));
    x (literal, ((x) x).x (new x (literal)));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/CSVExporterTest.java" startline="36" endline="45">
@x
public void x () throws x {
    x.x (x, literal);
    x.x (new x [] {literal, literal, literal, literal});
    x.x ();
    x (literal);
    x (literal);
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/CSVExporterTest.java" startline="47" endline="55">
@x
public void x () throws x {
    x.x (x, literal);
    x.x (new x [] {literal, literal});
    x.x (new x [] {x.x (), literal});
    x.x ();
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/XMLExporterTest.java" startline="30" endline="35">
@x
public void x () throws x {
    x.x (x.x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/XMLExporterTest.java" startline="37" endline="40">
protected x x () {
    return new x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/XMLExporterTest.java" startline="42" endline="49">
@x
public void x () throws x {
    x.x (x, literal);
    x.x ();
    x (x.x);
    x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/XMLExporterTest.java" startline="51" endline="62">
@x
public void x () throws x {
    x.x (x, literal);
    x.x (new x [] {literal, x.x (literal), literal});
    x.x (new x [] {literal, literal, literal});
    x.x ();
    x (literal);
    x (literal);
    x (literal);
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/XMLExporterTest.java" startline="64" endline="76">
@x
public void x () {
    try {
        x.x (literal);
        x ();
    } catch (x x) {
        x (literal, x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/XMLExporterTest.java" startline="78" endline="85">
@x
public void x () throws x {
    x.x (x, literal);
    x.x ();
    x (literal);
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/XMLExporterTest.java" startline="87" endline="93">
@x
public void x () throws x {
    x.x (x, literal);
    x.x ();
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/exporters/XMLExporterTest.java" startline="95" endline="107">
@x
public void x () throws x {
    x.x (x, literal);
    x.x (new x [] {literal, literal, literal});
    x.x (new x [] {x.x ().x (), literal, new x (literal)});
    x.x (new x [] {x.x ().x (), literal, new x (- literal)});
    x.x ();
    x (literal);
    x x = x.x ().x ();
    x.x (new x (x.x (x.x)));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RangeFeederTest.java" startline="16" endline="27">
@x
public void x () throws x {
    x x = new x (literal, literal);
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RangeFeederTest.java" startline="29" endline="41">
@x
public void x () {
    try {
        new x (literal, literal);
        x ();
    } catch (x x) {
        x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RangeFeederTest.java" startline="43" endline="64">
@x
public void x () {
    try {
        new x (literal, literal);
        x ();
    } catch (x x) {
        x (literal, x);
    }
    try {
        new x (literal, literal);
        x ();
    } catch (x x) {
        x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RangeFeederTest.java" startline="66" endline="80">
@x
public void x () {
    x x = literal;
    x = new x (literal, literal);
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
    x = new x (literal, literal);
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RangeFeederTest.java" startline="82" endline="98">
@x
public void x () throws x {
    x x = new x (literal, literal);
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x = new x (literal, literal);
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RangeFeederTest.java" startline="100" endline="107">
@x
public void x () {
    x x = new x (literal, literal);
    x (literal, x.x ());
    x = new x (literal, literal);
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="26" endline="38">
@x
public void x () throws x {
    x x = new x (literal);
    x x = new x (x);
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="40" endline="52">
@x
public void x () {
    try {
        new x (new x (x.x (), literal).x ());
        x ();
    } catch (x x) {
        x (literal, x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="54" endline="66">
@x
public void x () {
    try {
        new x (literal);
        x ();
    } catch (x x) {
        x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="68" endline="81">
@x
public void x () {
    try {
        x x = new x (literal);
        new x (x);
        x ();
    } catch (x x) {
        x.x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="83" endline="103">
@x
public void x () {
    x (literal, literal);
    x (literal, literal);
    x (literal, literal);
    x (literal, literal);
    x (literal, literal);
    x (literal, literal);
    x (literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="105" endline="123">
@x
public void x () throws x {
    x x = new x (literal);
    x x = new x (x);
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x = new x (literal);
    x = new x (x);
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="125" endline="131">
@x
public void x () {
    x x = new x (literal);
    x x = new x (x);
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="133" endline="148">
@x
public void x () throws x {
    x x = new x (literal);
    x x = new x (x);
    x (literal, (int) x.x ().x ().x ());
    x (x.x ().x ());
    x (x.x ().x ());
    x x = x.x ();
    x (literal, x.x ().x ());
    x < x > x = x.x ();
    x (literal, (int) x.x ());
    x (literal, (int) x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FileFeederTest.java" startline="150" endline="161">
private void x (x x, int x) {
    x x = new x (x);
    x x = new x (x);
    int x = literal;
    while (x.x ()) {
        x.x ();
        x ++;
    }
    x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="16" endline="25">
@x
public void x () throws x {
    x x = new x (literal, literal, literal);
    x (x.x ());
    x (x.x ().x ().x ().x (literal));
    x (x.x ());
    x (x.x ().x ().x ().x (literal));
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="27" endline="39">
@x
public void x () {
    try {
        new x (literal, literal, literal);
        x ();
    } catch (x x) {
        x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="41" endline="53">
@x
public void x () {
    try {
        new x (literal, literal, literal);
        x ();
    } catch (x x) {
        x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="55" endline="67">
@x
public void x () {
    try {
        new x (literal, literal, literal);
        x ();
    } catch (x x) {
        x (literal, x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="69" endline="77">
@x
public void x () {
    x x = literal;
    x = new x (literal, literal, literal);
    x (x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="79" endline="87">
@x
public void x () {
    x x = literal;
    x = new x (literal, literal, literal);
    x (x.x ());
    x (literal.x (x.x ().x ().x ()));
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="89" endline="99">
@x
public void x () {
    x x = literal;
    x = new x (literal, literal, literal);
    x (x.x ());
    x x = x.x ().x ().x ();
    x (x.x (literal));
    x (x.x (literal));
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="101" endline="119">
@x
public void x () {
    x x = literal;
    x x = literal;
    x = new x (literal, literal, literal);
    x (x.x ());
    x = x.x ().x ().x ();
    x (literal.x (x));
    x (x.x ());
    x (x.x (x.x ().x ().x ()));
    x (x.x ());
    x = new x (literal, literal, literal);
    x (x.x ());
    x (x.x (x.x ().x ().x ()));
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="121" endline="137">
@x
public void x () throws x {
    x x = new x (literal, literal, literal);
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
    x = new x (literal, literal, literal);
    x (literal, x.x ());
    x.x ();
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RandomFeederTest.java" startline="139" endline="146">
@x
public void x () {
    x x = new x (literal, literal, literal);
    x (literal, x.x ());
    x = new x (literal, literal, literal);
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RescanFeederTest.java" startline="26" endline="30">
@x(x=x.class)
public void x () throws x {
    new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RescanFeederTest.java" startline="32" endline="39">
@x
public void x () {
    x = new x (x (), literal);
    x (literal, x.x ());
    x (literal, x.x ());
    x (x.x (literal) + literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RescanFeederTest.java" startline="41" endline="60">
@x
public void x () throws x {
    x = new x (x (), literal, literal, literal);
    x (x.x ());
    x (literal, x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
    x (literal, x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
    x (literal, x.x ());
    x (literal, x.x ().x ().x ());
    x (x.x ());
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/RescanFeederTest.java" startline="62" endline="69">
private x x () {
    x x = x (x.class);
    x (x.x ()).x (literal);
    x (x.x ()).x (literal);
    x (x.x ()).x (literal);
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/feeders/FeederTestUtils.java" startline="17" endline="23">
public static void x (x x, x x) {
    x.x (x, x.x ());
    x.x (x.x (literal + x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="25" endline="54">
@x
public void x () throws x {
    x = new x (new x ()) {

        protected void x () {
        }

        public x x () {
            return literal;
        }

        public x x () {
            x = new x (literal, literal);
            return x;
        }

        public x [] x () {
            return new x [literal];
        }

        public void x (x [] x) {
        }

        public x [] x () {
            return new x [literal];
        }

    }

    ;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="30" endline="32">
protected void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="33" endline="36">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="37" endline="41">
public x x () {
    x = new x (literal, literal);
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="42" endline="45">
public x [] x () {
    return new x [literal];
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="46" endline="48">
public void x (x [] x) {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="49" endline="52">
public x [] x () {
    return new x [literal];
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="56" endline="60">
@x
public void x () {
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/AbstractFeederGUITest.java" startline="62" endline="70">
@x
public void x () throws x {
    for (x x : x.x ()) {
        x.x (x);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/FeederGUIRegistryTest.java" startline="34" endline="43">
@x
public void x () {
    x = new x ();
    x = x (x.class);
    x = new x (x);
    x = new x (new x [] {x}, x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/FeederGUIRegistryTest.java" startline="45" endline="49">
@x
public void x () {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/FeederGUIRegistryTest.java" startline="51" endline="57">
@x
public void x () throws x {
    x (x);
    new x (new x [] {x}, x, literal);
    x (x).x (x.x (x.x ()));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/FeederGUIRegistryTest.java" startline="59" endline="65">
@x
public void x () throws x {
    x x = x.x ();
    x (x, x.x);
    x (x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/feeders/FeederGUIRegistryTest.java" startline="67" endline="73">
@x
public void x () throws x {
    x x = x.x ();
    x x = x.x (new x [] {x (x.class)});
    x (x.x (), x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/SelectFetchersDialogTest.java" startline="20" endline="34">
@x
public void x () {
    x x = x (x.class);
    x x = new x (x);
    x.x.x (literal, literal);
    x.x.x (literal, literal);
    x.x.x (literal, literal);
    x.x (new x [] {literal, literal});
    x (x).x (new x [] {literal, literal, literal});
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/SWTTestCase.java" startline="25" endline="29">
@x
public void x () {
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/SWTTestCase.java" startline="31" endline="35">
protected void x () {
    x ();
    x = new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/SWTTestCase.java" startline="37" endline="44">
private void x () {
    if (x != literal) {
        x.x ();
        x = literal;
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/SWTTestCase.java" startline="46" endline="56">
@x
public void x () {
    x.x (new x () {

        public void x () {
            x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/SWTTestCase.java" startline="51" endline="54">
public void x () {
    x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/StatisticsDialogTest.java" startline="30" endline="42">
@x
public void x () throws x {
    x.x (new x (literal));
    x (literal, x.x (literal));
    x (literal, x.x (literal));
    x (literal, x.x (literal));
    x (literal, x.x (literal));
    x (literal, x.x (literal));
    x (literal, x.x (literal));
    x (literal, x.x (literal));
    x (literal, x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/StatisticsDialogTest.java" startline="44" endline="73">
@x
public void x () throws x {
    x x = x (x.class);
    x x = new x () {

        {
            x.x = x.x ();
            x.x = x.x + literal;
            x.x = literal;
            x.x = literal;
            x.x = literal;
        }

    }

    ;
    x (x.x ()).x (x);
    x (x.x ()).x (literal);
    x (x.x ()).x (literal);
    x x = new x (x).x ();
    x (x);
    x (x.x (x.x (literal) + literal));
    x (x.x (x.x (literal) + literal));
    x (x.x (literal));
    x (x.x (literal));
    x (x.x (x.x (literal) + literal));
    x (x.x (x.x (literal) + literal));
    x (x.x (x.x (literal) + literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/OpenerLauncherTest.java" startline="37" endline="98">
@x
public void x () throws x {
    x x = x (x.class);
    x (x.x ()).x (x.< x > x (literal, literal));
    x (x.x (x.x)).x (literal);
    x (x.x (x.x)).x (literal);
    x (x.x (x.x)).x (literal);
    x (x.x (literal)).x (literal);
    x (x.x (literal)).x (- literal);
    x x = new x (x);
    x.x (x (literal));
    x x = x.x (x.x (literal));
    x.x (literal, new x (x.x (literal)));
    x.x (literal, literal);
    x.x (literal, new x (literal, literal));
    x.x (literal, x);
    x x = new x (x, x);
    x (literal, x.x (literal, literal));
    x (literal, x.x (literal, literal));
    x (literal, x.x (literal, literal));
    x (x.x ().x (literal) + literal, x.x (literal, literal));
    try {
        x.x (literal, literal);
        x ();
    } catch (x x) {
        x (x.x (literal) + literal, x.x ());
    }
    try {
        x.x (literal, literal);
        x ();
    } catch (x x) {
        x (x.x (literal) + literal, x.x ());
    }
    try {
        x.x (literal, x.x);
        x.x (literal, literal);
        x ();
    } catch (x x) {
        x (x.x (literal) + literal, x.x ());
    }
    x.x (literal, literal);
    x (literal, literal, x.x (literal + x.x + literal, literal));
    x.x (literal, x.x);
    x (literal, literal, x.x (literal + x.x + literal, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/OpenerLauncherTest.java" startline="100" endline="108">
@x
public void x () throws x {
    x (new x [] {literal, literal}, x.x (literal));
    x (new x [] {literal, literal, literal}, x.x (literal));
    x (new x [] {literal, literal, literal}, x.x (literal));
    x (new x [] {literal, literal}, x.x (literal));
    x (new x [] {literal}, x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/OpenerLauncherTest.java" startline="110" endline="116">
private x x (x x) {
    x x = x (x.class);
    x (x.x ()).x (x);
    x (x.x ()).x (literal);
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/StartStopScanningActionTest.java" startline="24" endline="33">
@x
public void x () throws x {
    x x = new x (x.x ());
    for (x x : x.x ()) {
        x (x.x [x.x ()]);
        x (x.x [x.x ()]);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/GotoActionsTest.java" startline="27" endline="36">
@x
public void x () throws x {
    x (x.x ()).x (literal);
    x (x.x ()).x (- literal);
    x (x.x (literal).x ()).x (x.x);
    new x (x, x.x).x (literal);
    x (x).x ();
    x (x).x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/GotoActionsTest.java" startline="38" endline="49">
@x
public void x () {
    x (x.x ()).x (literal);
    x (x.x ()).x (literal);
    x (x.x (literal).x ()).x (x.x);
    x (x.x (literal).x ()).x (x.x);
    x (x.x ()).x (- literal);
    new x (x, x.x).x (literal);
    x (x).x ();
    x (x).x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/GotoActionsTest.java" startline="51" endline="61">
@x
public void x () {
    x (x.x ()).x (literal);
    x (x.x ()).x (- literal);
    x (x.x (literal).x ()).x (x.x);
    x (x.x (literal).x ()).x (x.x);
    new x (x, x.x).x (literal);
    x (x).x ();
    x (x).x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/GotoActionsTest.java" startline="63" endline="73">
@x
public void x () throws x {
    x (x.x ()).x (literal);
    x (x.x ()).x (- literal);
    x (x.x (literal).x ()).x (x.x);
    x (x.x ()).x (literal);
    new x (x, x.x).x (literal);
    x (x).x ();
    x (x).x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/GotoActionsTest.java" startline="75" endline="86">
@x
public void x () {
    x (x.x ()).x (literal);
    x (x.x ()).x (literal);
    x (x.x (literal).x ()).x (x.x);
    x (x.x (literal).x ()).x (x.x);
    x (x.x ()).x (- literal);
    new x (x, x.x).x (literal);
    x (x).x ();
    x (x).x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/actions/GotoActionsTest.java" startline="88" endline="96">
@x
public void x () {
    x (x.x ()).x (literal);
    x (x.x ()).x (- literal);
    x (x.x (literal).x ()).x (x.x);
    new x (x, x.x).x (literal);
    x (x, x ()).x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/PreferencesDialogTest.java" startline="31" endline="38">
private x x () {
    x = new x ();
    x x = new x ();
    x.x = x (x.class);
    x.x = literal;
    return new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/PreferencesDialogTest.java" startline="40" endline="51">
@x
public void x () throws x {
    x x = x ();
    x.x = x.x;
    x x = x (x.class);
    x (((x) x.x ()).x ()).x (x);
    x (x.x (x.x)).x (literal);
    x.x (x);
    x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/PreferencesDialogTest.java" startline="53" endline="64">
@x
public void x () throws x {
    x x = x ();
    x.x = x.x;
    x x = x (x.class);
    x (((x) x.x ()).x ()).x (x);
    x (x.x (x.x)).x (literal);
    x.x (x);
    x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/PreferencesDialogTest.java" startline="66" endline="79">
@x
public void x () throws x {
    x x = x ();
    x.x = x.x;
    x.x = x.x;
    x.x = x.x;
    x (((x) x.x).x ()).x (literal);
    x (((x) x.x).x ()).x (literal);
    x.x (x);
    x (literal, x.x);
    x (x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/PreferencesDialogTest.java" startline="81" endline="88">
@x
public void x () throws x {
    x x = x ();
    x.x = literal;
    x.x (x);
    x (literal, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/PreferencesDialogTest.java" startline="90" endline="110">
@x
public void x () throws x {
    x x = new x ();
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
    x (x.x (literal, literal, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/InputDialogTest.java" startline="27" endline="31">
@x
public void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/InputDialogTest.java" startline="34" endline="39">
@x
public void x () {
    if (! x.x.x ()) x.x.x ().x ();

}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/InputDialogTest.java" startline="41" endline="46">
@x
public void x () throws x {
    x (literal, x.x.x ());
    x (literal, x.x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/InputDialogTest.java" startline="48" endline="53">
@x
public void x () throws x {
    x.x (literal);
    x (literal, x.x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/InputDialogTest.java" startline="55" endline="61">
@x
public void x () throws x {
    x.x (literal);
    x (literal, x.x.x ());
    x (((x) x.x.x ()).x > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/InputDialogTest.java" startline="63" endline="75">
@x
public void x () throws x {
    x = new x (literal, literal) {

        @x
        public void x () {
            x.x (x.x, new x ());
        }

    }

    ;
    x (literal, x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/gui/InputDialogTest.java" startline="68" endline="72">
@x
public void x () {
    x.x (x.x, new x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/MainTest.java" startline="16" endline="46">
@x
public void x () {
    final boolean x [] = {literal};
    x x = new x (literal);
    x.x.x (literal);
    x.x.x (new x () {

        public void x () throws x {
        }

        public void x () {
        }

        public void x (x x) {
            x [literal] = literal;
        }

    }

    );
    x (x.x (), x.x (x));
    x (x [literal]);
    x (x.x (literal), x.x (new x (literal)));
    x (x.x (literal), x.x (new x ()));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/MainTest.java" startline="25" endline="27">
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/MainTest.java" startline="28" endline="30">
public void x () {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/MainTest.java" startline="31" endline="34">
public void x (x x) {
    x [literal] = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/InetAddressUtilsTest.java" startline="17" endline="29">
@x
public void x () throws x {
    x (literal, x.x (x.x (literal), x.x (literal)).x ());
    x (literal, x.x (x.x (literal), x.x (literal)).x ());
    x (literal, x.x (x.x (literal), x.x (literal)).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/InetAddressUtilsTest.java" startline="31" endline="43">
@x
public void x () throws x {
    x (literal, x.x (x.x (literal), x.x (literal)).x ());
    x (literal, x.x (x.x (literal), x.x (literal)).x ());
    x (literal, x.x (x.x (literal), x.x (literal)).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/InetAddressUtilsTest.java" startline="45" endline="51">
@x
public void x () throws x {
    x (literal, x.x (x.x (literal)).x ());
    x (literal, x.x (x.x (literal)).x ());
    x (literal, x.x (x.x (literal)).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/InetAddressUtilsTest.java" startline="53" endline="62">
@x
public void x () throws x {
    x (x.x (x.x (literal), x.x (literal)));
    x (x.x (x.x (literal), x.x (literal)));
    x (x.x (x.x (literal), x.x (literal)));
    x (x.x (x.x (literal), x.x (literal)));
    x (x.x (x.x (literal), x.x (literal)));
    x (x.x (x.x (literal), x.x (literal)));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/InetAddressUtilsTest.java" startline="64" endline="81">
@x
public void x () throws x {
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
    x (literal, x.x (literal).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/InetAddressUtilsTest.java" startline="83" endline="97">
@x
public void x () throws x {
    byte [] x = x.x (literal).x ();
    x.x (x, x.x (literal).x (), x.x (literal).x ());
    x (literal, x.x (x).x ());
    x = x.x (literal).x ();
    x.x (x, x.x (literal).x (), x.x (literal).x ());
    x (literal, x.x (x).x ());
    x = x.x (literal).x ();
    x.x (x, x.x (literal).x (), x.x (literal).x ());
    x (literal, x.x (x).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/InetAddressUtilsTest.java" startline="99" endline="105">
@x
public void x () throws x {
    x (x.x (x.x (literal)));
    x (x.x (x.x (literal)));
    x (x.x (x.x (literal)));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/InetAddressUtilsTest.java" startline="107" endline="119">
@x
public void x () throws x {
    x < x > x = x.x ();
    x.x ();
    if (x.x ()) {
        x (x.x (x.x (x.x ().x ()).x ()).x ());
        x (x.x (x.x (literal).x ()).x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/SequenceIteratorTest.java" startline="24" endline="31">
@x
public void x () throws x {
    x < x > x = new x < x > (x.x (literal).x ());
    x (x.x ());
    x (literal, (int) x.x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/SequenceIteratorTest.java" startline="33" endline="44">
@x
public void x () throws x {
    x < x > x = new x < x > (x.x (literal, literal).x (), x.x (literal).x ());
    x (x.x ());
    x (literal, (int) x.x ());
    x (x.x ());
    x (literal, (int) x.x ());
    x (x.x ());
    x (literal, (int) x.x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/util/SequenceIteratorTest.java" startline="46" endline="53">
@x
public void x () throws x {
    x < x > x = new x < x > (x.< x > x ().x (), x.x (literal).x ());
    x (x.x ());
    x (literal, (int) x.x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="36" endline="42">
@x
public void x () {
    x = x (x.class);
    x = x (x.class);
    x = new x (new x (x), x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="43" endline="107">
public x (x x, x x, x x, x x, x x, x x, x x, x x, x x, x x, x x, final x x, x.x x, x.x x) {
    x.x = x;
    x.x = x;
    x.x = x;
    x (x);
    x (x, x);
    x (x, x, x, x, x, x);
    x (x, x, x);
    x.x (x.x ());
    x.x ();
    if (x.x) {
        x.x (literal);
    } else {
        x.x (x.x ());
    }
    if (x.x) {
        x.x ().x (new x () {

            public void x () {
                if (x.x) {
                    if (x (x.x (literal), x.x | x.x) == x.x) {
                        x.x (x.x);
                    }
                }
                if (x.x) {
                    x (x.x (literal), x.x);
                }
                x.x.x.x ();
                new x ().x ();
                x.x.x.x = literal;
            }

        }

        );
    }
    x.x (new x ());
    x.x ().x (new x () {

        public void x () {
            x.x ();
        }

    }

    );
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="75" endline="93">
public void x () {
    if (x.x) {
        if (x (x.x (literal), x.x | x.x) == x.x) {
            x.x (x.x);
        }
    }
    if (x.x) {
        x (x.x (literal), x.x);
    }
    x.x.x.x ();
    new x ().x ();
    x.x.x.x = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="101" endline="105">
public void x () {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="109" endline="126">
@x
public void x () throws x {
    x (x.x ()).x (literal);
    x (x.x ()).x (new x [] {literal});
    x x = x (x.class);
    x (x.x ()).x (x.x (x).x ());
    x (x.x ()).x (literal);
    x (x.x ()).x (literal);
    x x = x.x ();
    x (x.x (literal));
    x (x.x (x.x (literal)));
    x (x.x (literal));
    x (x.x (literal));
    x (x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="128" endline="147">
@x
public void x () throws x {
    x (x.x ()).x (literal);
    x (x.x ()).x (new x [] {literal, literal});
    x x = x (x.class);
    x (x.x (literal)).x (x);
    x.x (literal, literal, literal, literal, literal);
    x (x, x.x);
    x (literal, x.x);
    x (x, x.x);
    x (x.x);
    x (x.x);
    x (literal, x.x);
    x (x).x (new x [] {literal, literal});
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="149" endline="163">
@x
public void x () throws x {
    x (x.x ()).x (literal);
    x (x.x ()).x (new x [literal]);
    x.x (literal, literal, literal);
    x (x, x.x);
    x (x.x);
    x (x.x);
    x (x.x);
    x (x).x (new x [literal]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="165" endline="169">
@x(x=x.class)
public void x () throws x {
    x.x (literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="171" endline="175">
@x(x=x.class)
public void x () throws x {
    x.x (literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="177" endline="181">
@x(x=x.class)
public void x () throws x {
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="183" endline="187">
@x(x=x.class)
public void x () throws x {
    x.x (literal, literal, literal, literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="189" endline="193">
@x(x=x.class)
public void x () throws x {
    x.x (literal, literal, literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="200" endline="203">
public x (x...x) {
    x = x.x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="205" endline="207">
public void x (x x) {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/CommandLineProcessorTest.java" startline="209" endline="212">
public x < x > x () {
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="31" endline="37">
@x
public void x () throws x {
    x = x.x ().x (literal);
    x.x ();
    x = new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="39" endline="43">
@x
public void x () throws x {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="45" endline="49">
@x
public void x () throws x {
    x (x.x () > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="51" endline="60">
@x
public void x () {
    try {
        x.x (literal, literal);
        x ();
    } catch (x x) {
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="62" endline="73">
@x
public void x () {
    x.x (new x [] {});
    x.x (literal, new x.x (literal));
    x (literal, x.x (literal).x);
    x (literal, x.x (literal).x);
    x (literal, x.x (literal).x.x ());
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="75" endline="87">
@x
public void x () {
    x.x x = new x.x (literal);
    x (literal, x.x);
    x (literal, x.x);
    x (literal, x.x);
    x = new x.x (literal);
    x (literal, x.x);
    x (literal, x.x);
    x (literal, x.x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="89" endline="98">
@x
public void x () throws x {
    x.x (x, literal);
    x x = new x (x);
    x (literal, x.x (literal).x);
    x (literal, x.x (literal).x);
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="100" endline="110">
@x
@x(literal)
public void x () throws x {
    x.x (x, literal);
    x x = new x (x);
    x x = x.x ();
    x (literal, x.x ());
    x (literal, x.x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="112" endline="123">
@x
public void x () throws x {
    x.x (new x [] {});
    x.x (literal, new x.x (literal, literal, literal));
    x.x (literal, new x.x (literal, literal, new x (literal)));
    x.x ();
    x (literal, x.x (x, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/OpenersConfigTest.java" startline="125" endline="138">
@x
@x(literal)
public void x () {
    x.x (literal, new x.x (literal, literal, literal));
    x.x (literal, new x.x (literal, literal, literal));
    x.x (literal, new x.x (literal, literal, literal));
    x.x (new x [] {literal, literal});
    x x = x.x ();
    x (literal, x.x ());
    x (literal, x.x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/GUIConfigTest.java" startline="31" endline="37">
@x
public void x () throws x {
    x = x.x ().x (literal);
    x.x ();
    x = new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/GUIConfigTest.java" startline="39" endline="43">
@x
public void x () throws x {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/GUIConfigTest.java" startline="45" endline="57">
@x
public void x () throws x {
    x x = new x (literal, literal, literal, literal);
    x.x (x, literal);
    x (x.x);
    x (x, x.x ());
    x x = new x (literal, literal, literal, literal);
    x.x (x, literal);
    x (x.x);
    x (x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/GUIConfigTest.java" startline="59" endline="69">
@x
public void x () throws x {
    x.x (new x (literal, literal, literal, literal), literal);
    x.x ();
    x (literal, x.x (literal, literal));
    x.x (new x (literal, literal, literal, literal), literal);
    x.x ();
    x (literal, x.x (literal, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/GUIConfigTest.java" startline="71" endline="80">
@x
public void x () throws x {
    x x = x (x.class);
    x (x.x ()).x (literal);
    x.x (x, literal);
    x (literal, x.x (x));
    x (literal, x.x (literal + x.x (), literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="27" endline="31">
@x
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="33" endline="40">
@x
public void x () {
    x.x (new x (literal));
    x x = x.x ();
    x.x (new x (literal));
    x (x == x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="42" endline="49">
@x
public void x () {
    x.x (new x (literal));
    x x = x.x ();
    x.x (new x (literal));
    x (x == x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="51" endline="55">
@x
public void x () {
    x (literal, x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="57" endline="69">
@x
public void x () {
    try {
        x.x (literal);
        x ();
    } catch (x x) {
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="71" endline="81">
@x
public void x () throws x {
    x x = x.x ().x (literal);
    x.x ();
    x ((int) literal, x.x ());
    x ((int) literal, x.x ());
    x ((int) literal, x.x ());
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="87" endline="92">
@x
public void x () throws x {
    x x = new x (x (), literal);
    x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="94" endline="101">
public static x x () {
    x x = x.class.x ().x (literal);
    x x = new x (x.x ());
    while (! new x (x, literal).x ()) x = x.x ();

    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="103" endline="118">
private void x (x x) throws x {
    x x [] = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        x x = new x (x, x [x]);
        if (x.x ()) {
            x (x);
        } else if (x.x ().x (literal)) {
            x (x);
        }

    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LabelsTest.java" startline="120" endline="166">
private void x (x x) throws x {
    final x x = x.x (literal);
    final x x = x.x (literal);
    x x = new x (new x (x));
    x x = new x ();
    x x;
    while ((x = x.x ()) != literal) {
        x.x (x);
    }
    x.x ();
    x x = x.x ();
    x x = literal;
    try {
        x x = x.x (x);
        while (x.x ()) {
            x = x.x (literal);
            x.x (x);
        }
        x = x.x (x);
        while (x.x ()) {
            x = literal + x.x (literal) + literal + x.x (literal);
            x.x (x);
        }
    } catch (x x) {
        throw new x (literal + x + literal + x.x ());
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/ConfigTest.java" startline="16" endline="25">
@x
public void x () {
    x x = x.x ();
    x (x.x ());
    x (x.x ());
    x (x.x ());
    x (x.x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/LoggerFactoryTest.java" startline="18" endline="22">
public void x () {
    x (x ().x (), x.x ());
    x (x ().x (), x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="29" endline="35">
@x
public void x () throws x {
    x = x.x ().x (literal);
    x.x (x).x ();
    x = new x (x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="37" endline="41">
@x
public void x () throws x {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="43" endline="49">
@x
public void x () {
    x.x (literal, literal);
    x (literal, x.x (literal));
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="51" endline="55">
@x
public void x () throws x {
    x (x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="57" endline="63">
@x
public void x () {
    x.x (literal, literal);
    x (literal, x.x (literal));
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="65" endline="75">
@x
public void x () throws x {
    x.x (x, literal);
    x x = new x (x, x);
    x (literal, x.x (literal));
    x (literal, x.x (literal));
    x (literal, x.x (literal));
    x (literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="77" endline="88">
@x
@x(literal)
public void x () throws x {
    x.x (x, literal);
    x x = new x (x, x);
    x x = x.x ();
    x (literal, x.x ());
    x (literal, x.x ());
    x (literal, x.x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="90" endline="99">
@x
public void x () throws x {
    x.x (literal, literal);
    x.x (literal, literal);
    x.x (literal, literal);
    x.x ();
    x (literal, x.x (x, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/config/NamedListConfigTest.java" startline="101" endline="114">
@x
@x(literal)
public void x () {
    x.x (literal, literal);
    x.x (literal, literal);
    x.x (literal, literal);
    x.x (new x [] {literal, literal});
    x x = x.x ();
    x (literal, x.x ((x) x.x ()));
    x (literal, x.x ((x) x.x ()));
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/IPFetcherTest.java" startline="24" endline="28">
@x
public void x () throws x {
    x = new x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/IPFetcherTest.java" startline="30" endline="35">
@x
public void x () throws x {
    x (x.x ().x (), x.x (new x (x.x ())).x ());
    x (literal, x.x (new x (x.x (literal))).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/AbstractFetcherTestCase.java" startline="25" endline="29">
@x
public void x () {
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/AbstractFetcherTestCase.java" startline="31" endline="35">
@x
public void x () {
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/AbstractFetcherTestCase.java" startline="37" endline="41">
@x
public void x () {
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/NetBIOSInfoFetcherTest.java" startline="20" endline="28">
@x
public void x () throws x {
    byte [] x = (literal + literal + literal).x (literal);
    x (literal, x.x (x, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/NetBIOSInfoFetcherTest.java" startline="30" endline="39">
@x
public void x () throws x {
    byte [] x = (literal + literal + literal + literal).x (literal);
    x (literal, x.x (x, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/NetBIOSInfoFetcherTest.java" startline="41" endline="55">
@x
public void x () throws x {
    byte [] x = (literal + literal + literal + literal + literal + literal + literal + literal + literal).x (literal);
    x (literal, x.x (x, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/PingTTLFetcherTest.java" startline="18" endline="22">
@x
public void x () throws x {
    x = new x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/PingFetcherTest.java" startline="18" endline="22">
@x
public void x () throws x {
    x = new x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/PortsFetcherTest.java" startline="34" endline="39">
@x
public void x () throws x {
    x = x (x.class);
    x = new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/PortsFetcherTest.java" startline="41" endline="55">
@x
public void x () throws x {
    x.x = literal;
    x.x = literal;
    x (x.x () + literal, x.x ());
    x.x = literal;
    x (x.x () + literal, x.x ());
    x.x = literal;
    x.x = literal;
    x (x.x () + literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/PortsFetcherTest.java" startline="57" endline="68">
@x
public void x () throws x {
    x.x = literal;
    x.x ();
    x x = x.x (new x (x.x ()));
    x (x);
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/PortsFetcherTest.java" startline="70" endline="94">
@x
public void x () throws x {
    x.x = literal;
    x.x ();
    x x = x.x (new x (x.x ()));
    x (x);
    x.x = literal;
    x.x ().x ();
    long x = x.x ();
    x = x.x (new x (x.x (literal)));
    x (x);
    x (literal, x.x () - x < literal);
    x (x.x ());
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/PortsFetcherTest.java" startline="96" endline="134">
@x
public void x () throws x {
    x x = new x () {

        public void x () {
            try {
                x x = new x (literal);
                synchronized (x) {
                    x.x ();
                }
                x x = x.x ();
                x.x ();
                x.x ();
            } catch (x x) {
                x (literal);
            }
        }

    }

    ;
    x.x = literal;
    x.x ();
    synchronized (x) {
        x.x ();
        x.x ();
    }
    x x = (x) x.x (new x (x.x ()));
    x (x.x, x.x ());
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/PortsFetcherTest.java" startline="102" endline="119">
public void x () {
    try {
        x x = new x (literal);
        synchronized (x) {
            x.x ();
        }
        x x = x.x ();
        x.x ();
        x.x ();
    } catch (x x) {
        x (literal);
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="37" endline="49">
@x
public void x () throws x {
    x = x.x ().x (literal);
    x.x ();
    x = new x ();
    x = new x (literal, literal);
    x = new x ();
    x = new x (literal);
    x = new x (literal);
    x = new x (new x [] {x, x, x, x, x}, x, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="51" endline="55">
@x
public void x () throws x {
    x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="57" endline="64">
@x
public void x () throws x {
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="66" endline="70">
@x(x=x.class)
public void x () throws x {
    x.x ().x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="72" endline="80">
@x
public void x () throws x {
    x (literal, x.x (x.x ()));
    x (literal, x.x (x.x ()));
    x (literal, x.x (x.x ()));
    x (literal, x.x (x.x ()));
    x (- literal, x.x (x.x ()));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="82" endline="99">
@x
public void x () throws x {
    x.x (x.x);
    x = new x (new x [] {x, x, x}, x, literal);
    x (literal, x.x ().x ());
    x.x (x.x, x.x () + literal + x.x ());
    x = new x (new x [] {x, x, x}, x, literal);
    x (literal, x.x ().x ());
    x < ? > x = x.x ().x ();
    x (x, x.x ());
    x (x, x.x ());
    x.x (x.x, literal + x.x ());
    x = new x (new x [] {x, x}, x, literal);
    x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="101" endline="118">
@x
public void x () throws x {
    x.x (new x [] {x.x ()});
    x (literal, x.x ().x ());
    x < ? > x = x.x ().x ();
    x (x.x (), ((x) x.x ()).x ());
    x (x.x (), x.x (x.x, literal));
    x.x (new x [] {x.x (), x.x ()});
    x (literal, x.x ().x ());
    x = x.x ().x ();
    x (x.x (), ((x) x.x ()).x ());
    x (x.x (), ((x) x.x ()).x ());
    x (x.x () + literal + x.x (), x.x (x.x, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="120" endline="135">
@x
public void x () throws x {
    final boolean x [] = {literal};
    x.x (new x () {

        public void x (x x) {
            x (x.x.x, x);
            x (literal, x.x ().x ());
            x [literal] = literal;
        }

    }

    );
    x.x (new x [] {});
    x (x [literal]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="126" endline="131">
public void x (x x) {
    x (x.x.x, x);
    x (literal, x.x ().x ());
    x [literal] = literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="137" endline="160">
@x
public void x () throws x {
    x x = literal;
    x x = new x ();
    x.x (x);
    x x = new x ();
    x = new x (new x [] {x, x}, x, x);
    x.x = literal;
    x.x (x);
    x (x, x.x);
    x (x, x.x);
    try {
        x.x (x);
        x (literal);
    } catch (x x) {
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="164" endline="167">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="168" endline="171">
public x x (x x) {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="172" endline="176">
@x
public x < ? extends x > x () {
    return x.class;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="186" endline="189">
public x (x x) {
    x.x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/FetcherRegistryImplTest.java" startline="191" endline="195">
public void x (x x) {
    x = x;
    x = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/HostnameFetcherTest.java" startline="24" endline="28">
@x
public void x () throws x {
    x = new x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/fetchers/HostnameFetcherTest.java" startline="30" endline="52">
@x
public void x () throws x {
    if (! x.x ().x ().x (x.x ().x ())) x (x.x ().x (), x.x (new x (x.x ())));

    try {
        x x = x.x (literal);
        x (x.x (), x.x (new x (x)));
    } catch (x x) {
    }
    x x = x.x (literal);
    if (x.x ().x (literal)) {
        x (x.x (new x (x)));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/ICMPSharedPingerTest.java" startline="23" endline="31">
@x
@x(literal)
public void x () throws x {
    x x = new x (literal);
    x x = x.x (new x (x.x ()), literal);
    x (x.x () >= literal);
    x (x.x () < literal);
    x (x.x () >= literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="27" endline="31">
@x
public void x () {
    x.x (literal, literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="33" endline="42">
@x
public void x () throws x {
    x [] x = new x (literal).x ();
    x (x);
    for (int x = literal;
    x < x.x; x ++) {
        x (x.x (x [x]));
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="44" endline="63">
@x
public void x () throws x {
    x x = new x (literal);
    x [] x = x.x ();
    for (int x = literal;
    x < x.x; x ++) {
        try {
            x x = x.x (x [x], literal);
            x.x ();
        } catch (x x) {
            x (literal, x.x ());
        }
    }
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="65" endline="71">
public void x () throws x {
    x x = x.x ().x ();
    x x = new x (x);
    x.x = literal;
    x (x.x () instanceof x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="73" endline="94">
@x
public void x () throws x {
    x x = x.x ().x ();
    x x = new x (x);
    x.x = literal;
    x (x.x ());
    x.x = literal;
    x (x.x ());
    x.x.x (literal, x.class);
    x.x = literal;
    x (x.x ());
    x (literal, x.x);
    x.x.x (literal, x.class);
    x.x = literal;
    x (x.x ());
    x (literal, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="98" endline="101">
public x x (x x, int x) throws x {
    throw new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="103" endline="105">
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="111" endline="114">
public x () {
    throw new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="116" endline="119">
public x x (x x, int x) throws x {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/net/PingerRegistryImplTest.java" startline="121" endline="123">
public void x () throws x {
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/plugins/PluginLoaderTest.java" startline="12" endline="19">
@x
public void x () {
    x.x (literal, x.class.x ());
    x x = x (x.class);
    new x ().x (x);
    x (x).x (x.class);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/plugins/PluginLoaderTest.java" startline="23" endline="26">
public x x (x x) {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/plugins/PluginLoaderTest.java" startline="28" endline="31">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="44" endline="53">
@x
public void x () throws x {
    x = x (x.class);
    x (x.x ()).x (x.x (new x [] {new x (), new x (), new x (), new x ()}));
    x = new x (x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="55" endline="69">
@x
public void x () throws x {
    x x = new x (x.x (), literal);
    x.x (new x (x.x ()), x);
    x (x.x, x.x ());
    x (x.x (), x.x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x (literal));
    x (x.x, x.x ().x (literal));
    x (literal, x.x ().x (literal));
    x (x.x, x.x ().x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="71" endline="93">
@x
public void x () throws x {
    x = x (x.class);
    x (x.x ()).x (x.x (new x [] {new x (), new x (), new x ()}));
    x = new x (x);
    x x = new x (x.x (), literal);
    x.x (new x (x.x ()), x);
    x (x.x, x.x ());
    x (x.x (), x.x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x (literal));
    x (x.x, x.x ().x (literal));
    x (x.x, x.x ().x (literal));
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="95" endline="103">
@x
public void x () throws x {
    x.x ();
    x (x.x (x.class));
    x (x.x (x.class));
    x (x.x (x.class));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="105" endline="113">
@x
public void x () throws x {
    x.x ();
    x (x.x (x.class));
    x (x.x (x.class));
    x (x.x (x.class));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="117" endline="120">
public x x () {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="122" endline="140">
public x x (x x) {
    try {
        x (x.x (), x.x ());
        x.x (x.x);
        x.x (literal, new x (literal));
    } catch (x x) {
        x ();
    }
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="142" endline="145">
public void x () {
    x.x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="147" endline="150">
public void x () {
    x.x (x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="155" endline="161">
public x x (x x) {
    x (new x (literal), x.x (literal));
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="166" endline="170">
public x x (x x) {
    x.x ();
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="175" endline="179">
public x x (x x) {
    x (literal);
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="184" endline="187">
public x x (x x) {
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerTest.java" startline="192" endline="197">
public x x (x x) {
    x.x ().x ();
    return literal;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/ScanningStateTest.java" startline="21" endline="30">
@x
public void x () throws x {
    x (x.x, x.x.x ());
    x (x.x, x.x.x ());
    x (x.x, x.x.x ());
    x (x.x, x.x.x ());
    x (x.x, x.x.x ());
    x (x.x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="25" endline="30">
@x
public void x () {
    x = new x () {
    }

    ;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="32" endline="39">
@x
public void x () throws x {
    x (x.x (x.x));
    x (x.x (x.x));
    x.x (x.x, literal);
    x (x.x (x.x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="41" endline="54">
@x
public void x () throws x {
    x.x (new x () {

        public void x (x x, x x) {
            x (literal);
        }

    }

    );
    x (x.x, x.x ());
    x.x (x.x, literal);
    x (x.x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="46" endline="49">
public void x (x x, x x) {
    x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="56" endline="75">
@x
public void x () throws x {
    final x [] x = {literal};
    x.x (new x () {

        public void x (x x, x x) {
            x [literal] = x;
        }

    }

    );
    x (x.x, x.x ());
    x.x (x.x, literal);
    x (x.x, x.x ());
    x (x.x, x [literal]);
    x.x (x.x, literal);
    x (x.x, x.x ());
    x (x.x, x [literal]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="62" endline="65">
public void x (x x, x x) {
    x [literal] = x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="77" endline="91">
@x
public void x () throws x {
    x (x.x, x.x ());
    x.x ();
    x (x.x, x.x ());
    x.x ();
    x (x.x, x.x ());
    x.x ();
    x (x.x, x.x ());
    x.x ();
    x (x.x, x.x ());
    x.x ();
    x (x.x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="93" endline="112">
@x
public void x () throws x {
    final int x [] = {literal};
    x.x (new x () {

        public void x (x x, x x) {
            x [literal] ++;
        }

    }

    );
    x.x (x.x, literal);
    x (literal, x [literal]);
    x.x ();
    x (x.x, x.x ());
    x (literal, x [literal]);
    x.x ();
    x (x.x, x.x ());
    x (literal, x [literal]);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="99" endline="102">
public void x (x x, x x) {
    x [literal] ++;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="114" endline="124">
@x
public void x () throws x {
    x.x (x.x, literal);
    x.x ();
    x (x.x, x.x ());
    x.x (x.x, literal);
    x.x ();
    x (x.x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="126" endline="132">
@x
public void x () throws x {
    x.x (x.x, literal);
    x.x ();
    x (x.x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="134" endline="144">
@x
public void x () throws x {
    x.x (x.x, literal);
    x.x ();
    x (x.x, x.x ());
    x.x (x.x, literal);
    x.x ();
    x (x.x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/state/StateMachineTest.java" startline="146" endline="156">
@x
public void x () throws x {
    x.x (x.x, literal);
    x.x ();
    x (x.x, x.x ());
    x.x (x.x, literal);
    x.x ();
    x (x.x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningSubjectTest.java" startline="28" endline="38">
@x
public void x () {
    x = x (x.class);
    x = new x (literal);
    x.x = x;
    x.x = literal;
    x.x = literal;
    x = new x (literal);
    x.x (x.x, x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningSubjectTest.java" startline="40" endline="70">
@x
public void x () throws x {
    x.x (x.x, literal);
    x (x.x, x.x ());
    x.x (x.x, x);
    x (x.x, x.x ());
    x.x (literal);
    x (x.x, x.x ());
    x.x (literal);
    x (x.x, x.x ());
    x.x (literal);
    x (literal * literal, x.x ());
    x.x (literal);
    x (literal * literal, x.x ());
    x.x = - literal;
    x (x.x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningSubjectTest.java" startline="72" endline="82">
@x
public void x () throws x {
    x.x ();
    x (x.x, x.x ());
    x.x (literal);
    x.x ();
    x (literal * literal, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningSubjectTest.java" startline="84" endline="91">
@x
public void x () throws x {
    x.x = literal;
    x.x (literal);
    x.x ();
    x (x.x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultComparatorTest.java" startline="33" endline="62">
@x
public void x () throws x {
    x.x (literal, literal);
    x (x.x (x (literal), x ((x) literal)) < literal);
    x (x.x (x ((x) literal), x (literal)) > literal);
    x (x.x (x (x.x), x (x.x)) == literal);
    x (x.x (x (x.x), x (x.x)) > literal);
    x (x.x (x (x.x), x (x.x)) < literal);
    x (x.x (x (literal), x (x.x)) < literal);
    x (x.x (x (literal), x (x.x)) < literal);
    x (x.x (x (literal), x (new x (x.x (literal), literal))) == literal);
    x (x.x (x (new x (x.x (literal), literal)), x (literal)) < literal);
    x (x.x (x (new x (x.x (literal, literal, literal), literal)), x (new x (x.x (literal, literal), literal))) > literal);
    x (x.x (x (literal), x (literal)) < literal);
    x (x.x (x (literal), x (literal)) == literal);
    x (x.x (x (literal), x (literal)) > literal);
    x (x.x (x (literal), x (literal)) < literal);
    x (x.x (x (literal), x (literal)) > literal);
    x (x.x (x (new x (literal, literal)), x (new x (literal, literal))) > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultComparatorTest.java" startline="64" endline="75">
@x
public void x () throws x {
    x.x (literal, literal);
    x (x.x (x (literal, literal), x (literal, literal)) < literal);
    x.x (literal, literal);
    x (x.x (x (literal, literal), x (literal, literal)) > literal);
    x.x (literal, literal);
    x (x.x (x (literal, literal, literal), x (literal, literal, literal)) == literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultComparatorTest.java" startline="77" endline="86">
@x
public void x () throws x {
    x.x (literal, literal);
    x (x.x (x (literal), x (x.x)) < literal);
    x (x.x (x (x.x), x (x.x)) > literal);
    x (x.x (x (literal), x (literal)) < literal);
    x (x.x (x (literal), x (literal)) > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultComparatorTest.java" startline="88" endline="96">
@x
public void x () throws x {
    x.x (literal, literal);
    x (x.x (x (literal), x (literal)) == literal);
    x (x.x (x (literal), x (literal)) > literal);
    x (x.x (x (literal), x (literal)) > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultComparatorTest.java" startline="98" endline="113">
@x
public void x () throws x {
    x x = new x (x.x (literal));
    x x = new x (x.x (literal));
    x x = new x (x.x (literal));
    x.x (literal, literal);
    x (x.x (x (x, literal), x (x, literal)) == literal);
    x (x.x (x (x, literal), x (x, literal)) < literal);
    x (x.x (x (x, literal), x (x, literal)) > literal);
    x.x (literal, literal);
    x (x.x (x (x, literal), x (x, literal)) > literal);
    x (x.x (x (x, literal), x (x, literal)) < literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultComparatorTest.java" startline="115" endline="148">
@x
public void x () throws x {
    x [] x = {x (x.x), x (x.x), x (literal), x (x.x), x (literal), x (x.x), x (literal)};
    x.x (literal, literal);
    x.x (x, x);
    x (literal, x [literal].x ().x (literal));
    x (literal, x [literal].x ().x (literal));
    x (literal, x [literal].x ().x (literal));
    x (x.x, x [literal].x ().x (literal));
    x (x.x, x [literal].x ().x (literal));
    x (x.x, x [literal].x ().x (literal));
    x (x.x, x [literal].x ().x (literal));
    x.x (literal, literal);
    x.x (x, x);
    x (literal, x [literal].x ().x (literal));
    x (literal, x [literal].x ().x (literal));
    x (literal, x [literal].x ().x (literal));
    x (x.x, x [literal].x ().x (literal));
    x (x.x, x [literal].x ().x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultComparatorTest.java" startline="150" endline="158">
private x x (x...x) throws x {
    x x = new x (x.x (), x.x);
    for (int x = literal;
    x < x.x; x ++) {
        x.x (x, x [x]);
    }
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="52" endline="60">
@x
public void x () throws x {
    x = x (x.class);
    x (x.x ()).x (x);
    x = new x (x);
    x.x (x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="62" endline="74">
@x
public void x () throws x {
    x x = new x () {
    }

    ;
    x = new x (x, x);
    x.x (x (literal));
    x (x.x ().x ());
    x.x ();
    x.x ();
    x.x ();
    x.x ();
    x (x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="76" endline="120">
@x
public void x () throws x {
    x x = x.x (x.x (literal));
    x (x.x ());
    x (x.x (x));
    x.x (literal, x);
    x.x (x.x);
    x (x.x ());
    x (x.x (x));
    x (literal, x.x (x));
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
    x = x.x (x.x (literal));
    x.x (x.x);
    x (x.x ());
    x (x.x (x));
    x.x (literal, x);
    x (x.x (x));
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
    x.x = new x ();
    x = x.x (x.x (literal));
    x.x (x.x);
    x.x ();
    x (x.x ());
    x (x.x (x));
    x (literal, x.x (x));
    x.x (x.x);
    x (x.x ());
    x (x.x (x));
    x (literal, x.x (x));
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="122" endline="130">
@x
public void x () throws x {
    x (x.x.x () < x.x.x ());
    x (x.x.x () < x.x.x ());
    x (x.x.x () < x.x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="132" endline="150">
@x
public void x () throws x {
    x x = x.x (x.x (literal));
    x (literal, x.x ().x ());
    x (x.x, x.x ());
    x (literal, x.x ().x ());
    x (x.x (x));
    x = x.x (x.x (literal));
    x (literal, x.x ().x ());
    x (x.x (x));
    x (x.x ().x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="152" endline="172">
@x
public void x () throws x {
    x x = x.x (x.x (literal));
    x.x (x.x);
    x.x (literal, x);
    x = x.x (x.x (literal));
    x.x (x.x);
    x.x (literal, x);
    x = x.x (x.x (literal));
    x.x (x.x);
    x.x (literal, x);
    x (x.x (x));
    x (literal, x.x (x));
    x (x, x.x (literal));
    x (x, x.x (x.x (literal)));
    x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="174" endline="179">
@x(x=x.class)
public void x () throws x {
    x.x (literal, x.x (x.x ()));
    x.x (literal, x.x (x.x ()));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="181" endline="191">
@x
public void x () throws x {
    x (x.x ().x ());
    x.x (literal, x.x (x.x ()));
    x < x > x = x.x ();
    x (x.x ());
    x (x.x (), x.x ().x ());
    x (x.x ());
    x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="193" endline="202">
@x
public void x () throws x {
    x.x (literal, x.x (x.x ()));
    x.x ();
    x (literal, x.x ().x ());
    x (x.x ());
    x (x.x ().x ());
    x (x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="204" endline="215">
@x
public void x () throws x {
    x x = x.new x ();
    x (x.x ().x ());
    x.x (x.x, x.x);
    x (x.x ().x ());
    x.x (x.x, x.x);
    x (x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="217" endline="237">
@x
public void x () throws x {
    x.x ().x ();
    x.x ().x (x (literal));
    x.x (literal, x.x (x.x ()));
    x x = x (literal);
    x.x (x);
    x (literal, x.x ());
    x (literal, literal, x.x ().x ());
    x (literal, x.x ());
    x (literal, x.x ());
    x (x.x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
    x (literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="239" endline="245">
@x
public void x () throws x {
    x.x (x (literal));
    x.x ().x ();
    x (literal, literal, x.x ().x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="247" endline="269">
@x
public void x () throws x {
    x.x (literal, x.x (x.x (literal)));
    x.x (literal, x.x (x.x (literal)));
    x.x (literal, x.x (x.x (literal)));
    x.x (literal, x.x (x.x (literal)));
    x.x (new int [] {literal, literal});
    x < x > x = x.x ();
    x (x.x ());
    x (x.x (literal), x.x ().x ());
    x (x.x ());
    x (x.x (literal), x.x ().x ());
    x (x.x ());
    x (literal, x.x (x.x (x.x (literal))));
    x (literal, x.x (x.x (x.x (literal))));
    x (x.x (x.x (x.x (literal))));
    x (x.x (x.x (x.x (literal))));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="271" endline="296">
@x
public void x () throws x {
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, literal);
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, literal);
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, literal);
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, literal);
    x.x (literal, literal);
    x < x > x = x.x ();
    x (x.x (literal), x.x ().x ());
    x (x.x (literal), x.x ().x ());
    x (x.x (literal), x.x ().x ());
    x (x.x (literal), x.x ().x ());
    x (x.x ());
    x (x.x (literal), x.x (literal).x ());
    x (x.x (literal), x.x (literal).x ());
    x (x.x (literal), x.x (literal).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="298" endline="316">
@x
public void x () throws x {
    x.x (x (literal));
    x < x > x = x.x ();
    x x = x.x (x.x (literal));
    x.x (literal, x);
    x.x (literal, literal);
    x.x (literal, literal);
    x.x (literal, literal);
    x x = x.x (literal).x ();
    x x = x.x (literal);
    x (x.x (x));
    x (x.x (x.x (literal).x () + literal + x) >= literal);
    x (x.x (x.x (literal).x () + literal + x) >= literal);
    x (x.x (x.x (literal).x () + literal + x) >= literal);
    x (x.x (x.x (literal).x () + literal + x) >= literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="318" endline="339">
@x
public void x () throws x {
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, x.x);
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, new x (literal));
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, literal);
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, literal);
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, literal);
    x.x (literal, x.x (x.x (literal)));
    x.x (literal).x (literal, x.x (literal));
    x (- literal, x.x (literal, literal));
    x (literal, x.x (literal, literal));
    x (- literal, x.x (literal, literal));
    x (literal, x.x (literal, literal));
    x (literal, x.x (literal, literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="341" endline="358">
@x
public void x () throws x {
    x x = x.x ();
    x (x.x ());
    long x = x.x ();
    x (literal, x >= literal && x <= literal);
    x.x (literal);
    x.new x ().x (x.x, x.x);
    x (x.x ());
    long x = x.x ();
    x (literal, x >= literal && x <= literal);
    x (x != x);
    x.x (literal);
    x (x, x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="360" endline="365">
private x x (x x) {
    x x = x (x.class);
    x (x.x ()).x (x);
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScanningResultListTest.java" startline="367" endline="373">
private x x (x x) {
    x x = x (x.class);
    x (x.x ()).x (x);
    x (x.x ()).x (literal);
    return x;
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/InetAddressHolderTest.java" startline="22" endline="27">
@x
public void x () throws x {
    x x = new x (x.x ());
    x (x.x ().x (), x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/InetAddressHolderTest.java" startline="29" endline="44">
@x
public void x () throws x {
    x x = new x (x.x (literal));
    x x = new x (x.x (literal));
    x x = new x (x.x (literal));
    x x = new x (x.x (literal));
    x (- literal, x.x (x));
    x (literal, x.x (x));
    x (literal, x.x (x));
    x (- literal, x.x (x));
    x (- literal, x.x (x));
    x (literal, x.x (x));
    x (literal, x.x (x));
    x (literal, x.x (x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/InetAddressHolderTest.java" startline="46" endline="55">
@x
public void x () throws x {
    x x = new x (x.x (literal));
    x x = new x (x.x (new byte [] {(byte) literal, (byte) literal, literal, literal}));
    x (x, x);
    x (x.x (), x.x ());
    x (x.x (literal));
    x (x.x (literal));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/NumericRangeListTest.java" startline="22" endline="34">
@x
public void x () {
    x (literal, new x (x.< x > x (), literal).x ());
    x (literal, new x (x.x (literal), literal).x ());
    x (literal, new x (x.x (literal, literal), literal).x ());
    x (literal, new x (x.x (literal, literal, literal), literal).x ());
    x (literal, new x (new x < x > (x.x (literal, literal, literal)), literal).x ());
    x (literal, new x (x.x (literal, literal, literal), literal).x ());
    x (literal, new x (x.x (literal, literal, literal, literal), literal).x ());
    x (literal, new x (x.x (literal, literal, literal, literal, literal, literal), literal).x ());
    x (literal, new x (x.x (literal, literal, literal, literal), literal).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/NumericRangeListTest.java" startline="36" endline="44">
@x
public void x () throws x {
    x (new x (x.x (literal), literal).x (new x (x.x (literal), literal)) < literal);
    x (new x (x.x (literal), literal).x (new x (x.x (literal), literal)) > literal);
    x (new x (x.x (literal), literal).x (new x (x.x (literal), literal)) == literal);
    x (new x (x.x (literal, literal), literal).x (new x (x.x (literal), literal)) > literal);
    x (new x (x.x (literal, literal, literal, literal), literal).x (new x (x.x (literal, literal, literal, literal), literal)) > literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/NotAvailableTest.java" startline="20" endline="24">
@x
public void x () throws x {
    x (x.x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/NotAvailableTest.java" startline="26" endline="30">
@x
public void x () throws x {
    x (x.x ().x ().x, x.x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/NotAvailableTest.java" startline="32" endline="43">
@x
public void x () throws x {
    x (x.class.x (x.class));
    x (literal, x.x.x (x.x));
    x.x (literal);
    x (literal, x.x.x (literal));
    x (literal, x.x.x (literal));
    x.x (literal);
    x (- literal, x.x.x (literal));
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/NotScannedTest.java" startline="20" endline="24">
@x
public void x () throws x {
    x (x.x, x.x);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/NotScannedTest.java" startline="26" endline="30">
@x
public void x () throws x {
    x (x.x ().x ().x, x.x.x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/NotScannedTest.java" startline="32" endline="43">
@x
public void x () throws x {
    x (x.class.x (x.class));
    x (literal, x.x.x (x.x));
    x.x (literal);
    x (literal, x.x.x (literal));
    x (literal, x.x.x (literal));
    x.x (literal);
    x (- literal, x.x.x (literal));
    x.x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/IntegerWithUnitTest.java" startline="22" endline="28">
@x
public void x () throws x {
    x (literal, new x (literal, literal).x ());
    x (- literal, new x (- literal, literal).x ());
    x (x.x, new x (x.x, literal).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/IntegerWithUnitTest.java" startline="30" endline="34">
@x
public void x () throws x {
    x (literal + x.x (literal), new x (literal, literal).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/IntegerWithUnitTest.java" startline="36" endline="43">
@x
public void x () throws x {
    x (new x (literal, literal).x (new x (literal, literal)));
    x (new x (literal, literal).x (new x (literal, literal)));
    x (new x (literal, literal).x (literal));
    x (new x (literal, literal).x (new x (literal, literal)));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/IntegerWithUnitTest.java" startline="45" endline="50">
@x
public void x () throws x {
    x (literal, new x (literal, literal).x ());
    x (- literal, new x (- literal, literal).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/values/IntegerWithUnitTest.java" startline="52" endline="62">
@x
public void x () throws x {
    x (x.class.x (x.class));
    x (literal, new x (literal, literal).x (new x (literal, literal)));
    x (literal, new x (literal, literal).x (new x (literal, literal)));
    x (- literal, new x (literal, literal).x (new x (literal, literal)));
    x (literal, new x (literal, literal).x (literal));
    x x = new x (literal, literal);
    x (literal, x.x (x));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="18" endline="28">
@x
public void x () {
    x (literal, x (new x (literal)));
    x (literal, x (new x (literal)));
    x (literal, x (new x (literal)));
    x (literal, x (new x (literal)));
    x (literal, x (new x (literal)));
    x (literal, x (new x (literal)));
    x (literal, x (new x (literal)));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="30" endline="36">
@x
public void x () {
    x (literal, x (new x (literal)));
    x (literal, x (new x (literal)));
    x (literal, x (new x (literal)));
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="38" endline="45">
@x
public void x () throws x {
    x (literal, new x (literal).x ());
    x (literal, new x (literal).x ());
    x (literal, new x (literal).x ());
    x (literal, new x (literal).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="47" endline="51">
@x
public void x () {
    x (new x (literal).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="53" endline="57">
@x(x=x.class)
public void x () throws x {
    new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="59" endline="63">
@x(x=x.class)
public void x () throws x {
    new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="65" endline="69">
@x(x=x.class)
public void x () throws x {
    new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="71" endline="75">
@x(x=x.class)
public void x () throws x {
    new x (literal);
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/PortIteratorTest.java" startline="77" endline="85">
private static x x (x x) {
    x x = new x (literal);
    while (x.x ()) {
        x.x (x.x ()).x (literal);
    }
    return x.x ();
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerDispatcherThreadTest.java" startline="33" endline="58">
@x
public void x () throws x {
    x x = x (x.class);
    x (x.x ()).x (x.< x > x (new x ()));
    x x = x (x.class);
    x (x.x ()).x (literal);
    x (x.x ()).x (literal);
    x x = new x (x);
    x.x = new x ();
    x.x (literal, x.x (x.x ()));
    x x = x (x.class);
    x.x = literal;
    x x = new x (x, new x (x), literal, literal, x, x, literal);
    x (literal, x.x ());
    x (x.x ().x (), x.x ());
    x (x.x ());
    x (x.x, ((x) x.x).x ());
    x (x, ((x) x.x).x ());
}
</source>
<source file="/home/jeff/Dropbox/MutationInjectionFramework/testdata/ExperimentTest/DetectionTest/SampleExperimentRun/mutantbase/ipscan/test/net/azib/ipscan/core/ScannerDispatcherThreadTest.java" startline="60" endline="68">
@x
public void x () throws x {
    x x = (x) x.x (x.class);
    x.x = new x (literal);
    x x = x.x (x (x.class));
    x (x.x ());
    x (x.x, x.x ());
}
</source>
