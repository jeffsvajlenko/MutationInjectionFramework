#include <config.h>
#ifdef HAVE_STDIO_H
#include <stdio.h>
#endif
#ifdef HAVE_ERRNO_H
#include <errno.h>
#endif
#ifdef HAVE_STRING_H
#include <string.h>
#endif
#ifdef HAVE_STRINGS_H
#include <strings.h>
#endif
#ifdef HAVE_SYS_VFS_H
# include <sys/vfs.h>
#endif
#ifdef HAVE_MNTENT_H
#include <mntent.h>
#endif
#include "monitor.h"
#include "device_sysdep.h"

char *DeviceInfo_MountPoint_sysdep (DeviceInfo_T devinfo, char *blockdev) {
    struct  mntent *mnt;
    FILE *mntfd;
    ASSERT (devinfo);
    ASSERT (blockdev);
    if ((mntfd = setmntent ("/etc/mtab", "r")) == NULL) {
        log ("%s: Cannot open /etc/mtab file", prog);
        return NULL;
    }
    while ((mnt = getmntent (mntfd)) != NULL) {
        if (IS (blockdev, mnt->mnt_fsname)) {
            endmntent (mntfd);
            return strncpy (devinfo->mntpath, mnt->mnt_dir, sizeof (devinfo->mntpath));
        }
    }
    endmntent (mntfd);
    return NULL;
}

int DeviceInfo_Usage_sysdep (DeviceInfo_T devinfo) {
    struct  statfs usage;
    ASSERT (devinfo);
    if (statfs (devinfo->mntpath, &usage) != 0) {
        log ("%s: Error getting usage statistics for device '%s' -- %s\n", prog, devinfo -> mntpath, STRERROR);
        return FALSE;
    }
    devinfo->f_bsize = usage.f_bsize;
    devinfo->f_blocks = usage.f_blocks;
    devinfo->f_blocksfree = usage.f_bavail;
    devinfo->f_blocksfreetotal = usage.f_bfree;
    devinfo->f_files = usage.f_files;
    devinfo->f_filesfree = usage.f_ffree;
    return TRUE;
}

