
// This file has been generated by the GUI designer. Do not modify.
namespace CBinding
{
public partial class CompilerPanel
{
    private global::Gtk.Table table2;
    private global::Gtk.ComboBox compilerComboBox;
    private global::Gtk.CheckButton useCcacheCheckBox;

    protected virtual void Build ()
    {
        global::Stetic.Gui.Initialize (this);
        // Widget CBinding.CompilerPanel
        global::Stetic.BinContainer.Attach (this);
        this.Name = "CBinding.CompilerPanel";
        // Container child CBinding.CompilerPanel.Gtk.Container+ContainerChild
        this.table2 = new global::Gtk.Table (((uint)(3)), ((uint)(3)), false);
        this.table2.Name = "table2";
        this.table2.RowSpacing = ((uint)(6));
        this.table2.ColumnSpacing = ((uint)(6));
        // Container child table2.Gtk.Table+TableChild
        this.compilerComboBox = global::Gtk.ComboBox.NewText ();
        this.compilerComboBox.Name = "compilerComboBox";
        this.table2.Add (this.compilerComboBox);
        global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table2 [this.compilerComboBox]));
        w1.TopAttach = ((uint)(1));
        w1.BottomAttach = ((uint)(2));
        w1.LeftAttach = ((uint)(1));
        w1.RightAttach = ((uint)(2));
        w1.XOptions = ((global::Gtk.AttachOptions)(4));
        w1.YOptions = ((global::Gtk.AttachOptions)(4));
        // Container child table2.Gtk.Table+TableChild
        this.useCcacheCheckBox = new global::Gtk.CheckButton ();
        this.useCcacheCheckBox.CanFocus = true;
        this.useCcacheCheckBox.Name = "useCcacheCheckBox";
        this.useCcacheCheckBox.Label = global::Mono.Unix.Catalog.GetString ("Use ccache");
        this.useCcacheCheckBox.DrawIndicator = true;
        this.useCcacheCheckBox.UseUnderline = true;
        this.table2.Add (this.useCcacheCheckBox);
        global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table2 [this.useCcacheCheckBox]));
        w2.TopAttach = ((uint)(2));
        w2.BottomAttach = ((uint)(3));
        w2.LeftAttach = ((uint)(1));
        w2.RightAttach = ((uint)(2));
        w2.XOptions = ((global::Gtk.AttachOptions)(4));
        w2.YOptions = ((global::Gtk.AttachOptions)(4));
        this.Add (this.table2);
        if ((this.Child != null))
        {
            this.Child.ShowAll ();
        }
        this.Show ();
        this.compilerComboBox.Changed += new global::System.EventHandler (this.OnCompilerComboBoxChanged);
    }
}
}
